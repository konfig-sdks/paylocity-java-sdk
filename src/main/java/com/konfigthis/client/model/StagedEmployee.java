/*
 * WebLink API
 * For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview
 *
 * The version of the OpenAPI document: v2
 * Contact: webservices@paylocity.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * The staged employee model
 */
@ApiModel(description = "The staged employee model")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class StagedEmployee {
  public static final String SERIALIZED_NAME_ADDITIONAL_DIRECT_DEPOSIT = "additionalDirectDeposit";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_DIRECT_DEPOSIT)
  private List<Object> additionalDirectDeposit = null;

  public static final String SERIALIZED_NAME_BENEFIT_SETUP = "benefitSetup";
  @SerializedName(SERIALIZED_NAME_BENEFIT_SETUP)
  private List<Object> benefitSetup = null;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "birthDate";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private Object birthDate;

  public static final String SERIALIZED_NAME_CUSTOM_BOOLEAN_FIELDS = "customBooleanFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_BOOLEAN_FIELDS)
  private List<Object> customBooleanFields = null;

  public static final String SERIALIZED_NAME_CUSTOM_DATE_FIELDS = "customDateFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DATE_FIELDS)
  private List<Object> customDateFields = null;

  public static final String SERIALIZED_NAME_CUSTOM_DROP_DOWN_FIELDS = "customDropDownFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DROP_DOWN_FIELDS)
  private List<Object> customDropDownFields = null;

  public static final String SERIALIZED_NAME_CUSTOM_NUMBER_FIELDS = "customNumberFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_NUMBER_FIELDS)
  private List<Object> customNumberFields = null;

  public static final String SERIALIZED_NAME_CUSTOM_TEXT_FIELDS = "customTextFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TEXT_FIELDS)
  private List<Object> customTextFields = null;

  public static final String SERIALIZED_NAME_DEPARTMENT_POSITION = "departmentPosition";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_POSITION)
  private List<Object> departmentPosition = null;

  public static final String SERIALIZED_NAME_DISABILITY_DESCRIPTION = "disabilityDescription";
  @SerializedName(SERIALIZED_NAME_DISABILITY_DESCRIPTION)
  private Object disabilityDescription;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private Object employeeId;

  public static final String SERIALIZED_NAME_ETHNICITY = "ethnicity";
  @SerializedName(SERIALIZED_NAME_ETHNICITY)
  private Object ethnicity;

  public static final String SERIALIZED_NAME_FEDERAL_TAX = "federalTax";
  @SerializedName(SERIALIZED_NAME_FEDERAL_TAX)
  private List<Object> federalTax = null;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private Object firstName;

  public static final String SERIALIZED_NAME_FITW_EXEMPT_REASON = "fitwExemptReason";
  @SerializedName(SERIALIZED_NAME_FITW_EXEMPT_REASON)
  private Object fitwExemptReason;

  public static final String SERIALIZED_NAME_FUTA_EXEMPT_REASON = "futaExemptReason";
  @SerializedName(SERIALIZED_NAME_FUTA_EXEMPT_REASON)
  private Object futaExemptReason;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private Object gender;

  public static final String SERIALIZED_NAME_HOME_ADDRESS = "homeAddress";
  @SerializedName(SERIALIZED_NAME_HOME_ADDRESS)
  private List<Object> homeAddress = null;

  public static final String SERIALIZED_NAME_IS_EMPLOYEE943 = "isEmployee943";
  @SerializedName(SERIALIZED_NAME_IS_EMPLOYEE943)
  private Object isEmployee943;

  public static final String SERIALIZED_NAME_IS_SMOKER = "isSmoker";
  @SerializedName(SERIALIZED_NAME_IS_SMOKER)
  private Object isSmoker;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private Object lastName;

  public static final String SERIALIZED_NAME_LOCAL_TAX = "localTax";
  @SerializedName(SERIALIZED_NAME_LOCAL_TAX)
  private List<Object> localTax = null;

  public static final String SERIALIZED_NAME_MAIN_DIRECT_DEPOSIT = "mainDirectDeposit";
  @SerializedName(SERIALIZED_NAME_MAIN_DIRECT_DEPOSIT)
  private List<Object> mainDirectDeposit = null;

  public static final String SERIALIZED_NAME_MARITAL_STATUS = "maritalStatus";
  @SerializedName(SERIALIZED_NAME_MARITAL_STATUS)
  private Object maritalStatus;

  public static final String SERIALIZED_NAME_MED_EXEMPT_REASON = "medExemptReason";
  @SerializedName(SERIALIZED_NAME_MED_EXEMPT_REASON)
  private Object medExemptReason;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private Object middleName;

  public static final String SERIALIZED_NAME_NON_PRIMARY_STATE_TAX = "nonPrimaryStateTax";
  @SerializedName(SERIALIZED_NAME_NON_PRIMARY_STATE_TAX)
  private List<Object> nonPrimaryStateTax = null;

  public static final String SERIALIZED_NAME_PREFERRED_NAME = "preferredName";
  @SerializedName(SERIALIZED_NAME_PREFERRED_NAME)
  private Object preferredName;

  public static final String SERIALIZED_NAME_PRIMARY_PAY_RATE = "primaryPayRate";
  @SerializedName(SERIALIZED_NAME_PRIMARY_PAY_RATE)
  private List<Object> primaryPayRate = null;

  public static final String SERIALIZED_NAME_PRIMARY_STATE_TAX = "primaryStateTax";
  @SerializedName(SERIALIZED_NAME_PRIMARY_STATE_TAX)
  private List<Object> primaryStateTax = null;

  public static final String SERIALIZED_NAME_PRIOR_LAST_NAME = "priorLastName";
  @SerializedName(SERIALIZED_NAME_PRIOR_LAST_NAME)
  private Object priorLastName;

  public static final String SERIALIZED_NAME_SALUTATION = "salutation";
  @SerializedName(SERIALIZED_NAME_SALUTATION)
  private Object salutation;

  public static final String SERIALIZED_NAME_SITW_EXEMPT_REASON = "sitwExemptReason";
  @SerializedName(SERIALIZED_NAME_SITW_EXEMPT_REASON)
  private Object sitwExemptReason;

  public static final String SERIALIZED_NAME_SS_EXEMPT_REASON = "ssExemptReason";
  @SerializedName(SERIALIZED_NAME_SS_EXEMPT_REASON)
  private Object ssExemptReason;

  public static final String SERIALIZED_NAME_SSN = "ssn";
  @SerializedName(SERIALIZED_NAME_SSN)
  private Object ssn;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private List<Object> status = null;

  public static final String SERIALIZED_NAME_SUFFIX = "suffix";
  @SerializedName(SERIALIZED_NAME_SUFFIX)
  private Object suffix;

  public static final String SERIALIZED_NAME_SUI_EXEMPT_REASON = "suiExemptReason";
  @SerializedName(SERIALIZED_NAME_SUI_EXEMPT_REASON)
  private Object suiExemptReason;

  public static final String SERIALIZED_NAME_SUI_STATE = "suiState";
  @SerializedName(SERIALIZED_NAME_SUI_STATE)
  private Object suiState;

  public static final String SERIALIZED_NAME_TAX_DISTRIBUTION_CODE1099_R = "taxDistributionCode1099R";
  @SerializedName(SERIALIZED_NAME_TAX_DISTRIBUTION_CODE1099_R)
  private Object taxDistributionCode1099R;

  public static final String SERIALIZED_NAME_TAX_FORM = "taxForm";
  @SerializedName(SERIALIZED_NAME_TAX_FORM)
  private Object taxForm;

  public static final String SERIALIZED_NAME_VETERAN_DESCRIPTION = "veteranDescription";
  @SerializedName(SERIALIZED_NAME_VETERAN_DESCRIPTION)
  private Object veteranDescription;

  public static final String SERIALIZED_NAME_WEB_TIME = "webTime";
  @SerializedName(SERIALIZED_NAME_WEB_TIME)
  private Object webTime;

  public static final String SERIALIZED_NAME_WORK_ADDRESS = "workAddress";
  @SerializedName(SERIALIZED_NAME_WORK_ADDRESS)
  private List<Object> workAddress = null;

  public static final String SERIALIZED_NAME_WORK_ELIGIBILITY = "workEligibility";
  @SerializedName(SERIALIZED_NAME_WORK_ELIGIBILITY)
  private List<Object> workEligibility = null;

  public StagedEmployee() {
  }

  public StagedEmployee additionalDirectDeposit(List<Object> additionalDirectDeposit) {
    
    
    
    
    this.additionalDirectDeposit = additionalDirectDeposit;
    return this;
  }

  public StagedEmployee addAdditionalDirectDepositItem(Object additionalDirectDepositItem) {
    if (this.additionalDirectDeposit == null) {
      this.additionalDirectDeposit = new ArrayList<>();
    }
    this.additionalDirectDeposit.add(additionalDirectDepositItem);
    return this;
  }

   /**
   * Add up to 19 direct deposit accounts in addition to the main direct deposit account. IMPORTANT: A direct deposit update will remove ALL existing main and additional direct deposit information in WebPay and replace with information provided on the request. GET API will not return direct deposit data.
   * @return additionalDirectDeposit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add up to 19 direct deposit accounts in addition to the main direct deposit account. IMPORTANT: A direct deposit update will remove ALL existing main and additional direct deposit information in WebPay and replace with information provided on the request. GET API will not return direct deposit data.")

  public List<Object> getAdditionalDirectDeposit() {
    return additionalDirectDeposit;
  }


  public void setAdditionalDirectDeposit(List<Object> additionalDirectDeposit) {
    
    
    
    this.additionalDirectDeposit = additionalDirectDeposit;
  }


  public StagedEmployee benefitSetup(List<Object> benefitSetup) {
    
    
    
    
    this.benefitSetup = benefitSetup;
    return this;
  }

  public StagedEmployee addBenefitSetupItem(Object benefitSetupItem) {
    if (this.benefitSetup == null) {
      this.benefitSetup = new ArrayList<>();
    }
    this.benefitSetup.add(benefitSetupItem);
    return this;
  }

   /**
   * Add setup values used for employee benefits integration, insurance plan settings, and ACA reporting.
   * @return benefitSetup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add setup values used for employee benefits integration, insurance plan settings, and ACA reporting.")

  public List<Object> getBenefitSetup() {
    return benefitSetup;
  }


  public void setBenefitSetup(List<Object> benefitSetup) {
    
    
    
    this.benefitSetup = benefitSetup;
  }


  public StagedEmployee birthDate(Object birthDate) {
    
    
    
    
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Employee birthdate. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
   * @return birthDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee birthdate. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.")

  public Object getBirthDate() {
    return birthDate;
  }


  public void setBirthDate(Object birthDate) {
    
    
    
    this.birthDate = birthDate;
  }


  public StagedEmployee customBooleanFields(List<Object> customBooleanFields) {
    
    
    
    
    this.customBooleanFields = customBooleanFields;
    return this;
  }

  public StagedEmployee addCustomBooleanFieldsItem(Object customBooleanFieldsItem) {
    if (this.customBooleanFields == null) {
      this.customBooleanFields = new ArrayList<>();
    }
    this.customBooleanFields.add(customBooleanFieldsItem);
    return this;
  }

   /**
   * Up to 8 custom fields of boolean (checkbox) type value.
   * @return customBooleanFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Up to 8 custom fields of boolean (checkbox) type value.")

  public List<Object> getCustomBooleanFields() {
    return customBooleanFields;
  }


  public void setCustomBooleanFields(List<Object> customBooleanFields) {
    
    
    
    this.customBooleanFields = customBooleanFields;
  }


  public StagedEmployee customDateFields(List<Object> customDateFields) {
    
    
    
    
    this.customDateFields = customDateFields;
    return this;
  }

  public StagedEmployee addCustomDateFieldsItem(Object customDateFieldsItem) {
    if (this.customDateFields == null) {
      this.customDateFields = new ArrayList<>();
    }
    this.customDateFields.add(customDateFieldsItem);
    return this;
  }

   /**
   * Up to 8 custom fields of the date type value.
   * @return customDateFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Up to 8 custom fields of the date type value.")

  public List<Object> getCustomDateFields() {
    return customDateFields;
  }


  public void setCustomDateFields(List<Object> customDateFields) {
    
    
    
    this.customDateFields = customDateFields;
  }


  public StagedEmployee customDropDownFields(List<Object> customDropDownFields) {
    
    
    
    
    this.customDropDownFields = customDropDownFields;
    return this;
  }

  public StagedEmployee addCustomDropDownFieldsItem(Object customDropDownFieldsItem) {
    if (this.customDropDownFields == null) {
      this.customDropDownFields = new ArrayList<>();
    }
    this.customDropDownFields.add(customDropDownFieldsItem);
    return this;
  }

   /**
   * Up to 8 custom fields of the dropdown type value.
   * @return customDropDownFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Up to 8 custom fields of the dropdown type value.")

  public List<Object> getCustomDropDownFields() {
    return customDropDownFields;
  }


  public void setCustomDropDownFields(List<Object> customDropDownFields) {
    
    
    
    this.customDropDownFields = customDropDownFields;
  }


  public StagedEmployee customNumberFields(List<Object> customNumberFields) {
    
    
    
    
    this.customNumberFields = customNumberFields;
    return this;
  }

  public StagedEmployee addCustomNumberFieldsItem(Object customNumberFieldsItem) {
    if (this.customNumberFields == null) {
      this.customNumberFields = new ArrayList<>();
    }
    this.customNumberFields.add(customNumberFieldsItem);
    return this;
  }

   /**
   * Up to 8 custom fields of numeric type value.
   * @return customNumberFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Up to 8 custom fields of numeric type value.")

  public List<Object> getCustomNumberFields() {
    return customNumberFields;
  }


  public void setCustomNumberFields(List<Object> customNumberFields) {
    
    
    
    this.customNumberFields = customNumberFields;
  }


  public StagedEmployee customTextFields(List<Object> customTextFields) {
    
    
    
    
    this.customTextFields = customTextFields;
    return this;
  }

  public StagedEmployee addCustomTextFieldsItem(Object customTextFieldsItem) {
    if (this.customTextFields == null) {
      this.customTextFields = new ArrayList<>();
    }
    this.customTextFields.add(customTextFieldsItem);
    return this;
  }

   /**
   * Up to 8 custom fields of text type value.
   * @return customTextFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Up to 8 custom fields of text type value.")

  public List<Object> getCustomTextFields() {
    return customTextFields;
  }


  public void setCustomTextFields(List<Object> customTextFields) {
    
    
    
    this.customTextFields = customTextFields;
  }


  public StagedEmployee departmentPosition(List<Object> departmentPosition) {
    
    
    
    
    this.departmentPosition = departmentPosition;
    return this;
  }

  public StagedEmployee addDepartmentPositionItem(Object departmentPositionItem) {
    if (this.departmentPosition == null) {
      this.departmentPosition = new ArrayList<>();
    }
    this.departmentPosition.add(departmentPositionItem);
    return this;
  }

   /**
   * Add home department cost center, position, supervisor, reviewer, employment type, EEO class, pay settings, and union information.
   * @return departmentPosition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add home department cost center, position, supervisor, reviewer, employment type, EEO class, pay settings, and union information.")

  public List<Object> getDepartmentPosition() {
    return departmentPosition;
  }


  public void setDepartmentPosition(List<Object> departmentPosition) {
    
    
    
    this.departmentPosition = departmentPosition;
  }


  public StagedEmployee disabilityDescription(Object disabilityDescription) {
    
    
    
    
    this.disabilityDescription = disabilityDescription;
    return this;
  }

   /**
   * Indicates if employee has disability status.
   * @return disabilityDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee has disability status.")

  public Object getDisabilityDescription() {
    return disabilityDescription;
  }


  public void setDisabilityDescription(Object disabilityDescription) {
    
    
    
    this.disabilityDescription = disabilityDescription;
  }


  public StagedEmployee employeeId(Object employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Leave blank to have Paylocity Payroll/HR solution automatically assign the next available employee ID.&lt;br  /&gt; Max length: 10
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Leave blank to have Paylocity Payroll/HR solution automatically assign the next available employee ID.<br  /> Max length: 10")

  public Object getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(Object employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public StagedEmployee ethnicity(Object ethnicity) {
    
    
    
    
    this.ethnicity = ethnicity;
    return this;
  }

   /**
   * Employee ethnicity.&lt;br  /&gt; Max length: 10
   * @return ethnicity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee ethnicity.<br  /> Max length: 10")

  public Object getEthnicity() {
    return ethnicity;
  }


  public void setEthnicity(Object ethnicity) {
    
    
    
    this.ethnicity = ethnicity;
  }


  public StagedEmployee federalTax(List<Object> federalTax) {
    
    
    
    
    this.federalTax = federalTax;
    return this;
  }

  public StagedEmployee addFederalTaxItem(Object federalTaxItem) {
    if (this.federalTax == null) {
      this.federalTax = new ArrayList<>();
    }
    this.federalTax.add(federalTaxItem);
    return this;
  }

   /**
   * Add federal tax amount type (taxCalculationCode), amount or percentage, filing status, and exemptions.
   * @return federalTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add federal tax amount type (taxCalculationCode), amount or percentage, filing status, and exemptions.")

  public List<Object> getFederalTax() {
    return federalTax;
  }


  public void setFederalTax(List<Object> federalTax) {
    
    
    
    this.federalTax = federalTax;
  }


  public StagedEmployee firstName(Object firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Employee first name. &lt;br  /&gt;Max length: 40
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee first name. <br  />Max length: 40")

  public Object getFirstName() {
    return firstName;
  }


  public void setFirstName(Object firstName) {
    
    
    
    this.firstName = firstName;
  }


  public StagedEmployee fitwExemptReason(Object fitwExemptReason) {
    
    
    
    
    this.fitwExemptReason = fitwExemptReason;
    return this;
  }

   /**
   * Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
   * @return fitwExemptReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30")

  public Object getFitwExemptReason() {
    return fitwExemptReason;
  }


  public void setFitwExemptReason(Object fitwExemptReason) {
    
    
    
    this.fitwExemptReason = fitwExemptReason;
  }


  public StagedEmployee futaExemptReason(Object futaExemptReason) {
    
    
    
    
    this.futaExemptReason = futaExemptReason;
    return this;
  }

   /**
   * Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).&lt;br  /&gt; Max length: 30
   * @return futaExemptReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30")

  public Object getFutaExemptReason() {
    return futaExemptReason;
  }


  public void setFutaExemptReason(Object futaExemptReason) {
    
    
    
    this.futaExemptReason = futaExemptReason;
  }


  public StagedEmployee gender(Object gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Employee gender. Common values *M* (Male), *F* (Female). &lt;br  /&gt;Max length: 1
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee gender. Common values *M* (Male), *F* (Female). <br  />Max length: 1")

  public Object getGender() {
    return gender;
  }


  public void setGender(Object gender) {
    
    
    
    this.gender = gender;
  }


  public StagedEmployee homeAddress(List<Object> homeAddress) {
    
    
    
    
    this.homeAddress = homeAddress;
    return this;
  }

  public StagedEmployee addHomeAddressItem(Object homeAddressItem) {
    if (this.homeAddress == null) {
      this.homeAddress = new ArrayList<>();
    }
    this.homeAddress.add(homeAddressItem);
    return this;
  }

   /**
   * Add employee&#39;s home address, personal phone numbers, and personal email.
   * @return homeAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add employee's home address, personal phone numbers, and personal email.")

  public List<Object> getHomeAddress() {
    return homeAddress;
  }


  public void setHomeAddress(List<Object> homeAddress) {
    
    
    
    this.homeAddress = homeAddress;
  }


  public StagedEmployee isEmployee943(Object isEmployee943) {
    
    
    
    
    this.isEmployee943 = isEmployee943;
    return this;
  }

   /**
   * Indicates if employee in agriculture or farming.
   * @return isEmployee943
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee in agriculture or farming.")

  public Object getIsEmployee943() {
    return isEmployee943;
  }


  public void setIsEmployee943(Object isEmployee943) {
    
    
    
    this.isEmployee943 = isEmployee943;
  }


  public StagedEmployee isSmoker(Object isSmoker) {
    
    
    
    
    this.isSmoker = isSmoker;
    return this;
  }

   /**
   * Indicates if employee is a smoker.
   * @return isSmoker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is a smoker.")

  public Object getIsSmoker() {
    return isSmoker;
  }


  public void setIsSmoker(Object isSmoker) {
    
    
    
    this.isSmoker = isSmoker;
  }


  public StagedEmployee lastName(Object lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Employee last name. &lt;br  /&gt;Max length: 40
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee last name. <br  />Max length: 40")

  public Object getLastName() {
    return lastName;
  }


  public void setLastName(Object lastName) {
    
    
    
    this.lastName = lastName;
  }


  public StagedEmployee localTax(List<Object> localTax) {
    
    
    
    
    this.localTax = localTax;
    return this;
  }

  public StagedEmployee addLocalTaxItem(Object localTaxItem) {
    if (this.localTax == null) {
      this.localTax = new ArrayList<>();
    }
    this.localTax.add(localTaxItem);
    return this;
  }

   /**
   * Add local tax code, filing status, and exemptions including PA-PSD taxes.
   * @return localTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add local tax code, filing status, and exemptions including PA-PSD taxes.")

  public List<Object> getLocalTax() {
    return localTax;
  }


  public void setLocalTax(List<Object> localTax) {
    
    
    
    this.localTax = localTax;
  }


  public StagedEmployee mainDirectDeposit(List<Object> mainDirectDeposit) {
    
    
    
    
    this.mainDirectDeposit = mainDirectDeposit;
    return this;
  }

  public StagedEmployee addMainDirectDepositItem(Object mainDirectDepositItem) {
    if (this.mainDirectDeposit == null) {
      this.mainDirectDeposit = new ArrayList<>();
    }
    this.mainDirectDeposit.add(mainDirectDepositItem);
    return this;
  }

   /**
   * Add the main direct deposit account. After deposits are made to any additional direct deposit accounts, the remaining net check is deposited in the main direct deposit account. IMPORTANT: A direct deposit update will remove ALL existing main and additional direct deposit information in WebPay and replace with what is provided on the request. GET API will not return direct deposit data.
   * @return mainDirectDeposit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add the main direct deposit account. After deposits are made to any additional direct deposit accounts, the remaining net check is deposited in the main direct deposit account. IMPORTANT: A direct deposit update will remove ALL existing main and additional direct deposit information in WebPay and replace with what is provided on the request. GET API will not return direct deposit data.")

  public List<Object> getMainDirectDeposit() {
    return mainDirectDeposit;
  }


  public void setMainDirectDeposit(List<Object> mainDirectDeposit) {
    
    
    
    this.mainDirectDeposit = mainDirectDeposit;
  }


  public StagedEmployee maritalStatus(Object maritalStatus) {
    
    
    
    
    this.maritalStatus = maritalStatus;
    return this;
  }

   /**
   * Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. &lt;br  /&gt;Max length: 10
   * @return maritalStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. <br  />Max length: 10")

  public Object getMaritalStatus() {
    return maritalStatus;
  }


  public void setMaritalStatus(Object maritalStatus) {
    
    
    
    this.maritalStatus = maritalStatus;
  }


  public StagedEmployee medExemptReason(Object medExemptReason) {
    
    
    
    
    this.medExemptReason = medExemptReason;
    return this;
  }

   /**
   * Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).&lt;br  /&gt; Max length: 30
   * @return medExemptReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30")

  public Object getMedExemptReason() {
    return medExemptReason;
  }


  public void setMedExemptReason(Object medExemptReason) {
    
    
    
    this.medExemptReason = medExemptReason;
  }


  public StagedEmployee middleName(Object middleName) {
    
    
    
    
    this.middleName = middleName;
    return this;
  }

   /**
   * Employee middle name.&lt;br  /&gt; Max length: 20
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee middle name.<br  /> Max length: 20")

  public Object getMiddleName() {
    return middleName;
  }


  public void setMiddleName(Object middleName) {
    
    
    
    this.middleName = middleName;
  }


  public StagedEmployee nonPrimaryStateTax(List<Object> nonPrimaryStateTax) {
    
    
    
    
    this.nonPrimaryStateTax = nonPrimaryStateTax;
    return this;
  }

  public StagedEmployee addNonPrimaryStateTaxItem(Object nonPrimaryStateTaxItem) {
    if (this.nonPrimaryStateTax == null) {
      this.nonPrimaryStateTax = new ArrayList<>();
    }
    this.nonPrimaryStateTax.add(nonPrimaryStateTaxItem);
    return this;
  }

   /**
   * Add non-primary state tax code, amount type (taxCalculationCode), amount or percentage, filing status, exemptions, supplemental check (specialCheckCalc), and reciprocity code information.
   * @return nonPrimaryStateTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add non-primary state tax code, amount type (taxCalculationCode), amount or percentage, filing status, exemptions, supplemental check (specialCheckCalc), and reciprocity code information.")

  public List<Object> getNonPrimaryStateTax() {
    return nonPrimaryStateTax;
  }


  public void setNonPrimaryStateTax(List<Object> nonPrimaryStateTax) {
    
    
    
    this.nonPrimaryStateTax = nonPrimaryStateTax;
  }


  public StagedEmployee preferredName(Object preferredName) {
    
    
    
    
    this.preferredName = preferredName;
    return this;
  }

   /**
   * Employee preferred display name.&lt;br  /&gt; Max length: 20
   * @return preferredName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee preferred display name.<br  /> Max length: 20")

  public Object getPreferredName() {
    return preferredName;
  }


  public void setPreferredName(Object preferredName) {
    
    
    
    this.preferredName = preferredName;
  }


  public StagedEmployee primaryPayRate(List<Object> primaryPayRate) {
    
    
    
    
    this.primaryPayRate = primaryPayRate;
    return this;
  }

  public StagedEmployee addPrimaryPayRateItem(Object primaryPayRateItem) {
    if (this.primaryPayRate == null) {
      this.primaryPayRate = new ArrayList<>();
    }
    this.primaryPayRate.add(primaryPayRateItem);
    return this;
  }

   /**
   * Add hourly or salary pay rate, effective date, and pay frequency.
   * @return primaryPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add hourly or salary pay rate, effective date, and pay frequency.")

  public List<Object> getPrimaryPayRate() {
    return primaryPayRate;
  }


  public void setPrimaryPayRate(List<Object> primaryPayRate) {
    
    
    
    this.primaryPayRate = primaryPayRate;
  }


  public StagedEmployee primaryStateTax(List<Object> primaryStateTax) {
    
    
    
    
    this.primaryStateTax = primaryStateTax;
    return this;
  }

  public StagedEmployee addPrimaryStateTaxItem(Object primaryStateTaxItem) {
    if (this.primaryStateTax == null) {
      this.primaryStateTax = new ArrayList<>();
    }
    this.primaryStateTax.add(primaryStateTaxItem);
    return this;
  }

   /**
   * Add primary state tax code, amount type (taxCalculationCode), amount or percentage, filing status, exemptions, and supplemental check (specialCheckCalc) information. Only one primary state is allowed.
   * @return primaryStateTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add primary state tax code, amount type (taxCalculationCode), amount or percentage, filing status, exemptions, and supplemental check (specialCheckCalc) information. Only one primary state is allowed.")

  public List<Object> getPrimaryStateTax() {
    return primaryStateTax;
  }


  public void setPrimaryStateTax(List<Object> primaryStateTax) {
    
    
    
    this.primaryStateTax = primaryStateTax;
  }


  public StagedEmployee priorLastName(Object priorLastName) {
    
    
    
    
    this.priorLastName = priorLastName;
    return this;
  }

   /**
   * Prior last name if applicable.&lt;br  /&gt;Max length: 40
   * @return priorLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Prior last name if applicable.<br  />Max length: 40")

  public Object getPriorLastName() {
    return priorLastName;
  }


  public void setPriorLastName(Object priorLastName) {
    
    
    
    this.priorLastName = priorLastName;
  }


  public StagedEmployee salutation(Object salutation) {
    
    
    
    
    this.salutation = salutation;
    return this;
  }

   /**
   * Employee preferred salutation. &lt;br  /&gt;Max length: 10
   * @return salutation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee preferred salutation. <br  />Max length: 10")

  public Object getSalutation() {
    return salutation;
  }


  public void setSalutation(Object salutation) {
    
    
    
    this.salutation = salutation;
  }


  public StagedEmployee sitwExemptReason(Object sitwExemptReason) {
    
    
    
    
    this.sitwExemptReason = sitwExemptReason;
    return this;
  }

   /**
   * Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
   * @return sitwExemptReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30")

  public Object getSitwExemptReason() {
    return sitwExemptReason;
  }


  public void setSitwExemptReason(Object sitwExemptReason) {
    
    
    
    this.sitwExemptReason = sitwExemptReason;
  }


  public StagedEmployee ssExemptReason(Object ssExemptReason) {
    
    
    
    
    this.ssExemptReason = ssExemptReason;
    return this;
  }

   /**
   * Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
   * @return ssExemptReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30")

  public Object getSsExemptReason() {
    return ssExemptReason;
  }


  public void setSsExemptReason(Object ssExemptReason) {
    
    
    
    this.ssExemptReason = ssExemptReason;
  }


  public StagedEmployee ssn(Object ssn) {
    
    
    
    
    this.ssn = ssn;
    return this;
  }

   /**
   * Employee social security number. Leave it blank if valid social security number not available. &lt;br  /&gt;Max length: 11
   * @return ssn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee social security number. Leave it blank if valid social security number not available. <br  />Max length: 11")

  public Object getSsn() {
    return ssn;
  }


  public void setSsn(Object ssn) {
    
    
    
    this.ssn = ssn;
  }


  public StagedEmployee status(List<Object> status) {
    
    
    
    
    this.status = status;
    return this;
  }

  public StagedEmployee addStatusItem(Object statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * Add employee status, change reason, effective date, and adjusted seniority date. Note that companies that are still in Implementation cannot hire future employees.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add employee status, change reason, effective date, and adjusted seniority date. Note that companies that are still in Implementation cannot hire future employees.")

  public List<Object> getStatus() {
    return status;
  }


  public void setStatus(List<Object> status) {
    
    
    
    this.status = status;
  }


  public StagedEmployee suffix(Object suffix) {
    
    
    
    
    this.suffix = suffix;
    return this;
  }

   /**
   * Employee name suffix. Common values are *Jr, Sr, II*.&lt;br  /&gt;Max length: 30
   * @return suffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max length: 30")

  public Object getSuffix() {
    return suffix;
  }


  public void setSuffix(Object suffix) {
    
    
    
    this.suffix = suffix;
  }


  public StagedEmployee suiExemptReason(Object suiExemptReason) {
    
    
    
    
    this.suiExemptReason = suiExemptReason;
    return this;
  }

   /**
   * Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
   * @return suiExemptReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30")

  public Object getSuiExemptReason() {
    return suiExemptReason;
  }


  public void setSuiExemptReason(Object suiExemptReason) {
    
    
    
    this.suiExemptReason = suiExemptReason;
  }


  public StagedEmployee suiState(Object suiState) {
    
    
    
    
    this.suiState = suiState;
    return this;
  }

   /**
   * Employee SUI (State Unemployment Insurance) state. &lt;br  /&gt;Max length: 2
   * @return suiState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee SUI (State Unemployment Insurance) state. <br  />Max length: 2")

  public Object getSuiState() {
    return suiState;
  }


  public void setSuiState(Object suiState) {
    
    
    
    this.suiState = suiState;
  }


  public StagedEmployee taxDistributionCode1099R(Object taxDistributionCode1099R) {
    
    
    
    
    this.taxDistributionCode1099R = taxDistributionCode1099R;
    return this;
  }

   /**
   * Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). &lt;br  /&gt;Max length: 1
   * @return taxDistributionCode1099R
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1")

  public Object getTaxDistributionCode1099R() {
    return taxDistributionCode1099R;
  }


  public void setTaxDistributionCode1099R(Object taxDistributionCode1099R) {
    
    
    
    this.taxDistributionCode1099R = taxDistributionCode1099R;
  }


  public StagedEmployee taxForm(Object taxForm) {
    
    
    
    
    this.taxForm = taxForm;
    return this;
  }

   /**
   * Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. &lt;br  /&gt;Max length: 15
   * @return taxForm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15")

  public Object getTaxForm() {
    return taxForm;
  }


  public void setTaxForm(Object taxForm) {
    
    
    
    this.taxForm = taxForm;
  }


  public StagedEmployee veteranDescription(Object veteranDescription) {
    
    
    
    
    this.veteranDescription = veteranDescription;
    return this;
  }

   /**
   * Indicates if employee is a veteran.
   * @return veteranDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is a veteran.")

  public Object getVeteranDescription() {
    return veteranDescription;
  }


  public void setVeteranDescription(Object veteranDescription) {
    
    
    
    this.veteranDescription = veteranDescription;
  }


  public StagedEmployee webTime(Object webTime) {
    
    
    
    
    this.webTime = webTime;
    return this;
  }

   /**
   * Add Web Time badge number and charge rate and synchronize Paylocity Payroll/HR solution and Web Time employee data.
   * @return webTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add Web Time badge number and charge rate and synchronize Paylocity Payroll/HR solution and Web Time employee data.")

  public Object getWebTime() {
    return webTime;
  }


  public void setWebTime(Object webTime) {
    
    
    
    this.webTime = webTime;
  }


  public StagedEmployee workAddress(List<Object> workAddress) {
    
    
    
    
    this.workAddress = workAddress;
    return this;
  }

  public StagedEmployee addWorkAddressItem(Object workAddressItem) {
    if (this.workAddress == null) {
      this.workAddress = new ArrayList<>();
    }
    this.workAddress.add(workAddressItem);
    return this;
  }

   /**
   * Add employee&#39;s work address, phone numbers, and email. Work Location drop down field is not included.
   * @return workAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add employee's work address, phone numbers, and email. Work Location drop down field is not included.")

  public List<Object> getWorkAddress() {
    return workAddress;
  }


  public void setWorkAddress(List<Object> workAddress) {
    
    
    
    this.workAddress = workAddress;
  }


  public StagedEmployee workEligibility(List<Object> workEligibility) {
    
    
    
    
    this.workEligibility = workEligibility;
    return this;
  }

  public StagedEmployee addWorkEligibilityItem(Object workEligibilityItem) {
    if (this.workEligibility == null) {
      this.workEligibility = new ArrayList<>();
    }
    this.workEligibility.add(workEligibilityItem);
    return this;
  }

   /**
   * Add I-9 work authorization information.
   * @return workEligibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add I-9 work authorization information.")

  public List<Object> getWorkEligibility() {
    return workEligibility;
  }


  public void setWorkEligibility(List<Object> workEligibility) {
    
    
    
    this.workEligibility = workEligibility;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the StagedEmployee instance itself
   */
  public StagedEmployee putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StagedEmployee stagedEmployee = (StagedEmployee) o;
    return Objects.equals(this.additionalDirectDeposit, stagedEmployee.additionalDirectDeposit) &&
        Objects.equals(this.benefitSetup, stagedEmployee.benefitSetup) &&
        Objects.equals(this.birthDate, stagedEmployee.birthDate) &&
        Objects.equals(this.customBooleanFields, stagedEmployee.customBooleanFields) &&
        Objects.equals(this.customDateFields, stagedEmployee.customDateFields) &&
        Objects.equals(this.customDropDownFields, stagedEmployee.customDropDownFields) &&
        Objects.equals(this.customNumberFields, stagedEmployee.customNumberFields) &&
        Objects.equals(this.customTextFields, stagedEmployee.customTextFields) &&
        Objects.equals(this.departmentPosition, stagedEmployee.departmentPosition) &&
        Objects.equals(this.disabilityDescription, stagedEmployee.disabilityDescription) &&
        Objects.equals(this.employeeId, stagedEmployee.employeeId) &&
        Objects.equals(this.ethnicity, stagedEmployee.ethnicity) &&
        Objects.equals(this.federalTax, stagedEmployee.federalTax) &&
        Objects.equals(this.firstName, stagedEmployee.firstName) &&
        Objects.equals(this.fitwExemptReason, stagedEmployee.fitwExemptReason) &&
        Objects.equals(this.futaExemptReason, stagedEmployee.futaExemptReason) &&
        Objects.equals(this.gender, stagedEmployee.gender) &&
        Objects.equals(this.homeAddress, stagedEmployee.homeAddress) &&
        Objects.equals(this.isEmployee943, stagedEmployee.isEmployee943) &&
        Objects.equals(this.isSmoker, stagedEmployee.isSmoker) &&
        Objects.equals(this.lastName, stagedEmployee.lastName) &&
        Objects.equals(this.localTax, stagedEmployee.localTax) &&
        Objects.equals(this.mainDirectDeposit, stagedEmployee.mainDirectDeposit) &&
        Objects.equals(this.maritalStatus, stagedEmployee.maritalStatus) &&
        Objects.equals(this.medExemptReason, stagedEmployee.medExemptReason) &&
        Objects.equals(this.middleName, stagedEmployee.middleName) &&
        Objects.equals(this.nonPrimaryStateTax, stagedEmployee.nonPrimaryStateTax) &&
        Objects.equals(this.preferredName, stagedEmployee.preferredName) &&
        Objects.equals(this.primaryPayRate, stagedEmployee.primaryPayRate) &&
        Objects.equals(this.primaryStateTax, stagedEmployee.primaryStateTax) &&
        Objects.equals(this.priorLastName, stagedEmployee.priorLastName) &&
        Objects.equals(this.salutation, stagedEmployee.salutation) &&
        Objects.equals(this.sitwExemptReason, stagedEmployee.sitwExemptReason) &&
        Objects.equals(this.ssExemptReason, stagedEmployee.ssExemptReason) &&
        Objects.equals(this.ssn, stagedEmployee.ssn) &&
        Objects.equals(this.status, stagedEmployee.status) &&
        Objects.equals(this.suffix, stagedEmployee.suffix) &&
        Objects.equals(this.suiExemptReason, stagedEmployee.suiExemptReason) &&
        Objects.equals(this.suiState, stagedEmployee.suiState) &&
        Objects.equals(this.taxDistributionCode1099R, stagedEmployee.taxDistributionCode1099R) &&
        Objects.equals(this.taxForm, stagedEmployee.taxForm) &&
        Objects.equals(this.veteranDescription, stagedEmployee.veteranDescription) &&
        Objects.equals(this.webTime, stagedEmployee.webTime) &&
        Objects.equals(this.workAddress, stagedEmployee.workAddress) &&
        Objects.equals(this.workEligibility, stagedEmployee.workEligibility)&&
        Objects.equals(this.additionalProperties, stagedEmployee.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalDirectDeposit, benefitSetup, birthDate, customBooleanFields, customDateFields, customDropDownFields, customNumberFields, customTextFields, departmentPosition, disabilityDescription, employeeId, ethnicity, federalTax, firstName, fitwExemptReason, futaExemptReason, gender, homeAddress, isEmployee943, isSmoker, lastName, localTax, mainDirectDeposit, maritalStatus, medExemptReason, middleName, nonPrimaryStateTax, preferredName, primaryPayRate, primaryStateTax, priorLastName, salutation, sitwExemptReason, ssExemptReason, ssn, status, suffix, suiExemptReason, suiState, taxDistributionCode1099R, taxForm, veteranDescription, webTime, workAddress, workEligibility, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StagedEmployee {\n");
    sb.append("    additionalDirectDeposit: ").append(toIndentedString(additionalDirectDeposit)).append("\n");
    sb.append("    benefitSetup: ").append(toIndentedString(benefitSetup)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    customBooleanFields: ").append(toIndentedString(customBooleanFields)).append("\n");
    sb.append("    customDateFields: ").append(toIndentedString(customDateFields)).append("\n");
    sb.append("    customDropDownFields: ").append(toIndentedString(customDropDownFields)).append("\n");
    sb.append("    customNumberFields: ").append(toIndentedString(customNumberFields)).append("\n");
    sb.append("    customTextFields: ").append(toIndentedString(customTextFields)).append("\n");
    sb.append("    departmentPosition: ").append(toIndentedString(departmentPosition)).append("\n");
    sb.append("    disabilityDescription: ").append(toIndentedString(disabilityDescription)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    ethnicity: ").append(toIndentedString(ethnicity)).append("\n");
    sb.append("    federalTax: ").append(toIndentedString(federalTax)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    fitwExemptReason: ").append(toIndentedString(fitwExemptReason)).append("\n");
    sb.append("    futaExemptReason: ").append(toIndentedString(futaExemptReason)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    homeAddress: ").append(toIndentedString(homeAddress)).append("\n");
    sb.append("    isEmployee943: ").append(toIndentedString(isEmployee943)).append("\n");
    sb.append("    isSmoker: ").append(toIndentedString(isSmoker)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    localTax: ").append(toIndentedString(localTax)).append("\n");
    sb.append("    mainDirectDeposit: ").append(toIndentedString(mainDirectDeposit)).append("\n");
    sb.append("    maritalStatus: ").append(toIndentedString(maritalStatus)).append("\n");
    sb.append("    medExemptReason: ").append(toIndentedString(medExemptReason)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    nonPrimaryStateTax: ").append(toIndentedString(nonPrimaryStateTax)).append("\n");
    sb.append("    preferredName: ").append(toIndentedString(preferredName)).append("\n");
    sb.append("    primaryPayRate: ").append(toIndentedString(primaryPayRate)).append("\n");
    sb.append("    primaryStateTax: ").append(toIndentedString(primaryStateTax)).append("\n");
    sb.append("    priorLastName: ").append(toIndentedString(priorLastName)).append("\n");
    sb.append("    salutation: ").append(toIndentedString(salutation)).append("\n");
    sb.append("    sitwExemptReason: ").append(toIndentedString(sitwExemptReason)).append("\n");
    sb.append("    ssExemptReason: ").append(toIndentedString(ssExemptReason)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    suiExemptReason: ").append(toIndentedString(suiExemptReason)).append("\n");
    sb.append("    suiState: ").append(toIndentedString(suiState)).append("\n");
    sb.append("    taxDistributionCode1099R: ").append(toIndentedString(taxDistributionCode1099R)).append("\n");
    sb.append("    taxForm: ").append(toIndentedString(taxForm)).append("\n");
    sb.append("    veteranDescription: ").append(toIndentedString(veteranDescription)).append("\n");
    sb.append("    webTime: ").append(toIndentedString(webTime)).append("\n");
    sb.append("    workAddress: ").append(toIndentedString(workAddress)).append("\n");
    sb.append("    workEligibility: ").append(toIndentedString(workEligibility)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additionalDirectDeposit");
    openapiFields.add("benefitSetup");
    openapiFields.add("birthDate");
    openapiFields.add("customBooleanFields");
    openapiFields.add("customDateFields");
    openapiFields.add("customDropDownFields");
    openapiFields.add("customNumberFields");
    openapiFields.add("customTextFields");
    openapiFields.add("departmentPosition");
    openapiFields.add("disabilityDescription");
    openapiFields.add("employeeId");
    openapiFields.add("ethnicity");
    openapiFields.add("federalTax");
    openapiFields.add("firstName");
    openapiFields.add("fitwExemptReason");
    openapiFields.add("futaExemptReason");
    openapiFields.add("gender");
    openapiFields.add("homeAddress");
    openapiFields.add("isEmployee943");
    openapiFields.add("isSmoker");
    openapiFields.add("lastName");
    openapiFields.add("localTax");
    openapiFields.add("mainDirectDeposit");
    openapiFields.add("maritalStatus");
    openapiFields.add("medExemptReason");
    openapiFields.add("middleName");
    openapiFields.add("nonPrimaryStateTax");
    openapiFields.add("preferredName");
    openapiFields.add("primaryPayRate");
    openapiFields.add("primaryStateTax");
    openapiFields.add("priorLastName");
    openapiFields.add("salutation");
    openapiFields.add("sitwExemptReason");
    openapiFields.add("ssExemptReason");
    openapiFields.add("ssn");
    openapiFields.add("status");
    openapiFields.add("suffix");
    openapiFields.add("suiExemptReason");
    openapiFields.add("suiState");
    openapiFields.add("taxDistributionCode1099R");
    openapiFields.add("taxForm");
    openapiFields.add("veteranDescription");
    openapiFields.add("webTime");
    openapiFields.add("workAddress");
    openapiFields.add("workEligibility");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to StagedEmployee
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!StagedEmployee.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StagedEmployee is not found in the empty JSON string", StagedEmployee.openapiRequiredFields.toString()));
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("additionalDirectDeposit") != null && !jsonObj.get("additionalDirectDeposit").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalDirectDeposit` to be an array in the JSON string but got `%s`", jsonObj.get("additionalDirectDeposit").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("benefitSetup") != null && !jsonObj.get("benefitSetup").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `benefitSetup` to be an array in the JSON string but got `%s`", jsonObj.get("benefitSetup").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customBooleanFields") != null && !jsonObj.get("customBooleanFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customBooleanFields` to be an array in the JSON string but got `%s`", jsonObj.get("customBooleanFields").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customDateFields") != null && !jsonObj.get("customDateFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customDateFields` to be an array in the JSON string but got `%s`", jsonObj.get("customDateFields").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customDropDownFields") != null && !jsonObj.get("customDropDownFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customDropDownFields` to be an array in the JSON string but got `%s`", jsonObj.get("customDropDownFields").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customNumberFields") != null && !jsonObj.get("customNumberFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customNumberFields` to be an array in the JSON string but got `%s`", jsonObj.get("customNumberFields").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customTextFields") != null && !jsonObj.get("customTextFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customTextFields` to be an array in the JSON string but got `%s`", jsonObj.get("customTextFields").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("departmentPosition") != null && !jsonObj.get("departmentPosition").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `departmentPosition` to be an array in the JSON string but got `%s`", jsonObj.get("departmentPosition").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("federalTax") != null && !jsonObj.get("federalTax").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `federalTax` to be an array in the JSON string but got `%s`", jsonObj.get("federalTax").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("homeAddress") != null && !jsonObj.get("homeAddress").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `homeAddress` to be an array in the JSON string but got `%s`", jsonObj.get("homeAddress").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("localTax") != null && !jsonObj.get("localTax").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `localTax` to be an array in the JSON string but got `%s`", jsonObj.get("localTax").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("mainDirectDeposit") != null && !jsonObj.get("mainDirectDeposit").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `mainDirectDeposit` to be an array in the JSON string but got `%s`", jsonObj.get("mainDirectDeposit").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("nonPrimaryStateTax") != null && !jsonObj.get("nonPrimaryStateTax").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `nonPrimaryStateTax` to be an array in the JSON string but got `%s`", jsonObj.get("nonPrimaryStateTax").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("primaryPayRate") != null && !jsonObj.get("primaryPayRate").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryPayRate` to be an array in the JSON string but got `%s`", jsonObj.get("primaryPayRate").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("primaryStateTax") != null && !jsonObj.get("primaryStateTax").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryStateTax` to be an array in the JSON string but got `%s`", jsonObj.get("primaryStateTax").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be an array in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("workAddress") != null && !jsonObj.get("workAddress").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `workAddress` to be an array in the JSON string but got `%s`", jsonObj.get("workAddress").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("workEligibility") != null && !jsonObj.get("workEligibility").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `workEligibility` to be an array in the JSON string but got `%s`", jsonObj.get("workEligibility").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StagedEmployee.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StagedEmployee' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StagedEmployee> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StagedEmployee.class));

       return (TypeAdapter<T>) new TypeAdapter<StagedEmployee>() {
           @Override
           public void write(JsonWriter out, StagedEmployee value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public StagedEmployee read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             StagedEmployee instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of StagedEmployee given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of StagedEmployee
  * @throws IOException if the JSON string is invalid with respect to StagedEmployee
  */
  public static StagedEmployee fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StagedEmployee.class);
  }

 /**
  * Convert an instance of StagedEmployee to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

