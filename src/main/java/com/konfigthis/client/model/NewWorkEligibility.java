/*
 * WebLink API
 * For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview
 *
 * The version of the OpenAPI document: v2
 * Contact: webservices@paylocity.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * NewWorkEligibility
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class NewWorkEligibility {
  public static final String SERIALIZED_NAME_ALIEN_OR_ADMISSION_DOCUMENT_NBR = "alienOrAdmissionDocumentNbr";
  @SerializedName(SERIALIZED_NAME_ALIEN_OR_ADMISSION_DOCUMENT_NBR)
  private String alienOrAdmissionDocumentNbr;

  public static final String SERIALIZED_NAME_I9_DATE_VERIFIED = "i9DateVerified";
  @SerializedName(SERIALIZED_NAME_I9_DATE_VERIFIED)
  private LocalDate i9DateVerified;

  public static final String SERIALIZED_NAME_I9_NOTES = "i9Notes";
  @SerializedName(SERIALIZED_NAME_I9_NOTES)
  private String i9Notes;

  public static final String SERIALIZED_NAME_I9_VERIFIED = "i9Verified";
  @SerializedName(SERIALIZED_NAME_I9_VERIFIED)
  private Boolean i9Verified;

  public static final String SERIALIZED_NAME_S_S_N_DATE_VERIFIED = "sSNDateVerified";
  @SerializedName(SERIALIZED_NAME_S_S_N_DATE_VERIFIED)
  private LocalDate sSNDateVerified;

  public static final String SERIALIZED_NAME_S_S_N_NOTES = "sSNNotes";
  @SerializedName(SERIALIZED_NAME_S_S_N_NOTES)
  private String sSNNotes;

  public static final String SERIALIZED_NAME_S_S_N_VERIFIED = "sSNVerified";
  @SerializedName(SERIALIZED_NAME_S_S_N_VERIFIED)
  private Boolean sSNVerified;

  public static final String SERIALIZED_NAME_VISA_TYPE = "visaType";
  @SerializedName(SERIALIZED_NAME_VISA_TYPE)
  private String visaType;

  public static final String SERIALIZED_NAME_WORK_AUTHORIZATION = "workAuthorization";
  @SerializedName(SERIALIZED_NAME_WORK_AUTHORIZATION)
  private String workAuthorization;

  public static final String SERIALIZED_NAME_WORK_UNTIL = "workUntil";
  @SerializedName(SERIALIZED_NAME_WORK_UNTIL)
  private LocalDate workUntil;

  public static final String SERIALIZED_NAME_ATTESTED_DATE = "attestedDate";
  @SerializedName(SERIALIZED_NAME_ATTESTED_DATE)
  private LocalDate attestedDate;

  public static final String SERIALIZED_NAME_I94_ADMISSION_NUMBER = "i94AdmissionNumber";
  @SerializedName(SERIALIZED_NAME_I94_ADMISSION_NUMBER)
  private String i94AdmissionNumber;

  public static final String SERIALIZED_NAME_FOREIGN_PASSPORT_NUMBER = "foreignPassportNumber";
  @SerializedName(SERIALIZED_NAME_FOREIGN_PASSPORT_NUMBER)
  private String foreignPassportNumber;

  public static final String SERIALIZED_NAME_COUNTRY_OF_ISSUANCE = "countryOfIssuance";
  @SerializedName(SERIALIZED_NAME_COUNTRY_OF_ISSUANCE)
  private String countryOfIssuance;

  public NewWorkEligibility() {
  }

  public NewWorkEligibility alienOrAdmissionDocumentNbr(String alienOrAdmissionDocumentNbr) {
    
    
    
    
    this.alienOrAdmissionDocumentNbr = alienOrAdmissionDocumentNbr;
    return this;
  }

   /**
   * Employee USCIS or Admission Number. &lt;br  /&gt; Must be 7-10 characters and may begin with an &#39;A&#39;
   * @return alienOrAdmissionDocumentNbr
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee USCIS or Admission Number. <br  /> Must be 7-10 characters and may begin with an 'A'")

  public String getAlienOrAdmissionDocumentNbr() {
    return alienOrAdmissionDocumentNbr;
  }


  public void setAlienOrAdmissionDocumentNbr(String alienOrAdmissionDocumentNbr) {
    
    
    
    this.alienOrAdmissionDocumentNbr = alienOrAdmissionDocumentNbr;
  }


  public NewWorkEligibility i9DateVerified(LocalDate i9DateVerified) {
    
    
    
    
    this.i9DateVerified = i9DateVerified;
    return this;
  }

   /**
   * The date Employee I9 was verified by the employer. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
   * @return i9DateVerified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date Employee I9 was verified by the employer. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.")

  public LocalDate getI9DateVerified() {
    return i9DateVerified;
  }


  public void setI9DateVerified(LocalDate i9DateVerified) {
    
    
    
    this.i9DateVerified = i9DateVerified;
  }


  public NewWorkEligibility i9Notes(String i9Notes) {
    
    
    
    
    this.i9Notes = i9Notes;
    return this;
  }

   /**
   * Notes regarding employee&#39;s I9.&lt;br  /&gt; Max length: 4000
   * @return i9Notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Notes regarding employee's I9.<br  /> Max length: 4000")

  public String getI9Notes() {
    return i9Notes;
  }


  public void setI9Notes(String i9Notes) {
    
    
    
    this.i9Notes = i9Notes;
  }


  public NewWorkEligibility i9Verified(Boolean i9Verified) {
    
    
    
    
    this.i9Verified = i9Verified;
    return this;
  }

   /**
   * Indicates if employee I9 is verified.
   * @return i9Verified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee I9 is verified.")

  public Boolean getI9Verified() {
    return i9Verified;
  }


  public void setI9Verified(Boolean i9Verified) {
    
    
    
    this.i9Verified = i9Verified;
  }


  public NewWorkEligibility sSNDateVerified(LocalDate sSNDateVerified) {
    
    
    
    
    this.sSNDateVerified = sSNDateVerified;
    return this;
  }

   /**
   * The date of employer verification of employee SSN. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
   * @return sSNDateVerified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date of employer verification of employee SSN. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.")

  public LocalDate getsSNDateVerified() {
    return sSNDateVerified;
  }


  public void setsSNDateVerified(LocalDate sSNDateVerified) {
    
    
    
    this.sSNDateVerified = sSNDateVerified;
  }


  public NewWorkEligibility sSNNotes(String sSNNotes) {
    
    
    
    
    this.sSNNotes = sSNNotes;
    return this;
  }

   /**
   * Notes regarding employee&#39;s SSN.&lt;br  /&gt; Max length: 4000
   * @return sSNNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Notes regarding employee's SSN.<br  /> Max length: 4000")

  public String getsSNNotes() {
    return sSNNotes;
  }


  public void setsSNNotes(String sSNNotes) {
    
    
    
    this.sSNNotes = sSNNotes;
  }


  public NewWorkEligibility sSNVerified(Boolean sSNVerified) {
    
    
    
    
    this.sSNVerified = sSNVerified;
    return this;
  }

   /**
   * Indicates if employee SSN is verified.
   * @return sSNVerified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee SSN is verified.")

  public Boolean getsSNVerified() {
    return sSNVerified;
  }


  public void setsSNVerified(Boolean sSNVerified) {
    
    
    
    this.sSNVerified = sSNVerified;
  }


  public NewWorkEligibility visaType(String visaType) {
    
    
    
    
    this.visaType = visaType;
    return this;
  }

   /**
   * Employee Visa type. Must match one of the system coded values.&lt;br  /&gt; Max length: 100
   * @return visaType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Visa type. Must match one of the system coded values.<br  /> Max length: 100")

  public String getVisaType() {
    return visaType;
  }


  public void setVisaType(String visaType) {
    
    
    
    this.visaType = visaType;
  }


  public NewWorkEligibility workAuthorization(String workAuthorization) {
    
    
    
    
    this.workAuthorization = workAuthorization;
    return this;
  }

   /**
   * Employee work authorization. Must match one of the system coded values.&lt;br  /&gt; Max length: 100
   * @return workAuthorization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work authorization. Must match one of the system coded values.<br  /> Max length: 100")

  public String getWorkAuthorization() {
    return workAuthorization;
  }


  public void setWorkAuthorization(String workAuthorization) {
    
    
    
    this.workAuthorization = workAuthorization;
  }


  public NewWorkEligibility workUntil(LocalDate workUntil) {
    
    
    
    
    this.workUntil = workUntil;
    return this;
  }

   /**
   * End date of employee work eligibility. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
   * @return workUntil
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "End date of employee work eligibility. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.")

  public LocalDate getWorkUntil() {
    return workUntil;
  }


  public void setWorkUntil(LocalDate workUntil) {
    
    
    
    this.workUntil = workUntil;
  }


  public NewWorkEligibility attestedDate(LocalDate attestedDate) {
    
    
    
    
    this.attestedDate = attestedDate;
    return this;
  }

   /**
   * The date the I-9 Verification form was attested by Employer or Authorized representative. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
   * @return attestedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date the I-9 Verification form was attested by Employer or Authorized representative. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.")

  public LocalDate getAttestedDate() {
    return attestedDate;
  }


  public void setAttestedDate(LocalDate attestedDate) {
    
    
    
    this.attestedDate = attestedDate;
  }


  public NewWorkEligibility i94AdmissionNumber(String i94AdmissionNumber) {
    
    
    
    
    this.i94AdmissionNumber = i94AdmissionNumber;
    return this;
  }

   /**
   * Form I-94 admission number.&lt;br  /&gt; Must be 11 numeric characters.
   * @return i94AdmissionNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Form I-94 admission number.<br  /> Must be 11 numeric characters.")

  public String getI94AdmissionNumber() {
    return i94AdmissionNumber;
  }


  public void setI94AdmissionNumber(String i94AdmissionNumber) {
    
    
    
    this.i94AdmissionNumber = i94AdmissionNumber;
  }


  public NewWorkEligibility foreignPassportNumber(String foreignPassportNumber) {
    
    
    
    
    this.foreignPassportNumber = foreignPassportNumber;
    return this;
  }

   /**
   * Foreign Passport Number.&lt;br  /&gt; Max length: 50
   * @return foreignPassportNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Foreign Passport Number.<br  /> Max length: 50")

  public String getForeignPassportNumber() {
    return foreignPassportNumber;
  }


  public void setForeignPassportNumber(String foreignPassportNumber) {
    
    
    
    this.foreignPassportNumber = foreignPassportNumber;
  }


  public NewWorkEligibility countryOfIssuance(String countryOfIssuance) {
    
    
    
    
    this.countryOfIssuance = countryOfIssuance;
    return this;
  }

   /**
   * If Foreign Passport number is provided, provide its country of issuance. Must match Paylocity setup.&lt;br  /&gt; Max length: 30
   * @return countryOfIssuance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If Foreign Passport number is provided, provide its country of issuance. Must match Paylocity setup.<br  /> Max length: 30")

  public String getCountryOfIssuance() {
    return countryOfIssuance;
  }


  public void setCountryOfIssuance(String countryOfIssuance) {
    
    
    
    this.countryOfIssuance = countryOfIssuance;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the NewWorkEligibility instance itself
   */
  public NewWorkEligibility putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewWorkEligibility newWorkEligibility = (NewWorkEligibility) o;
    return Objects.equals(this.alienOrAdmissionDocumentNbr, newWorkEligibility.alienOrAdmissionDocumentNbr) &&
        Objects.equals(this.i9DateVerified, newWorkEligibility.i9DateVerified) &&
        Objects.equals(this.i9Notes, newWorkEligibility.i9Notes) &&
        Objects.equals(this.i9Verified, newWorkEligibility.i9Verified) &&
        Objects.equals(this.sSNDateVerified, newWorkEligibility.sSNDateVerified) &&
        Objects.equals(this.sSNNotes, newWorkEligibility.sSNNotes) &&
        Objects.equals(this.sSNVerified, newWorkEligibility.sSNVerified) &&
        Objects.equals(this.visaType, newWorkEligibility.visaType) &&
        Objects.equals(this.workAuthorization, newWorkEligibility.workAuthorization) &&
        Objects.equals(this.workUntil, newWorkEligibility.workUntil) &&
        Objects.equals(this.attestedDate, newWorkEligibility.attestedDate) &&
        Objects.equals(this.i94AdmissionNumber, newWorkEligibility.i94AdmissionNumber) &&
        Objects.equals(this.foreignPassportNumber, newWorkEligibility.foreignPassportNumber) &&
        Objects.equals(this.countryOfIssuance, newWorkEligibility.countryOfIssuance)&&
        Objects.equals(this.additionalProperties, newWorkEligibility.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alienOrAdmissionDocumentNbr, i9DateVerified, i9Notes, i9Verified, sSNDateVerified, sSNNotes, sSNVerified, visaType, workAuthorization, workUntil, attestedDate, i94AdmissionNumber, foreignPassportNumber, countryOfIssuance, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewWorkEligibility {\n");
    sb.append("    alienOrAdmissionDocumentNbr: ").append(toIndentedString(alienOrAdmissionDocumentNbr)).append("\n");
    sb.append("    i9DateVerified: ").append(toIndentedString(i9DateVerified)).append("\n");
    sb.append("    i9Notes: ").append(toIndentedString(i9Notes)).append("\n");
    sb.append("    i9Verified: ").append(toIndentedString(i9Verified)).append("\n");
    sb.append("    sSNDateVerified: ").append(toIndentedString(sSNDateVerified)).append("\n");
    sb.append("    sSNNotes: ").append(toIndentedString(sSNNotes)).append("\n");
    sb.append("    sSNVerified: ").append(toIndentedString(sSNVerified)).append("\n");
    sb.append("    visaType: ").append(toIndentedString(visaType)).append("\n");
    sb.append("    workAuthorization: ").append(toIndentedString(workAuthorization)).append("\n");
    sb.append("    workUntil: ").append(toIndentedString(workUntil)).append("\n");
    sb.append("    attestedDate: ").append(toIndentedString(attestedDate)).append("\n");
    sb.append("    i94AdmissionNumber: ").append(toIndentedString(i94AdmissionNumber)).append("\n");
    sb.append("    foreignPassportNumber: ").append(toIndentedString(foreignPassportNumber)).append("\n");
    sb.append("    countryOfIssuance: ").append(toIndentedString(countryOfIssuance)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alienOrAdmissionDocumentNbr");
    openapiFields.add("i9DateVerified");
    openapiFields.add("i9Notes");
    openapiFields.add("i9Verified");
    openapiFields.add("sSNDateVerified");
    openapiFields.add("sSNNotes");
    openapiFields.add("sSNVerified");
    openapiFields.add("visaType");
    openapiFields.add("workAuthorization");
    openapiFields.add("workUntil");
    openapiFields.add("attestedDate");
    openapiFields.add("i94AdmissionNumber");
    openapiFields.add("foreignPassportNumber");
    openapiFields.add("countryOfIssuance");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to NewWorkEligibility
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!NewWorkEligibility.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NewWorkEligibility is not found in the empty JSON string", NewWorkEligibility.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("alienOrAdmissionDocumentNbr") != null && !jsonObj.get("alienOrAdmissionDocumentNbr").isJsonNull()) && !jsonObj.get("alienOrAdmissionDocumentNbr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alienOrAdmissionDocumentNbr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alienOrAdmissionDocumentNbr").toString()));
      }
      if ((jsonObj.get("i9Notes") != null && !jsonObj.get("i9Notes").isJsonNull()) && !jsonObj.get("i9Notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `i9Notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("i9Notes").toString()));
      }
      if ((jsonObj.get("sSNNotes") != null && !jsonObj.get("sSNNotes").isJsonNull()) && !jsonObj.get("sSNNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sSNNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sSNNotes").toString()));
      }
      if ((jsonObj.get("visaType") != null && !jsonObj.get("visaType").isJsonNull()) && !jsonObj.get("visaType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visaType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visaType").toString()));
      }
      if ((jsonObj.get("workAuthorization") != null && !jsonObj.get("workAuthorization").isJsonNull()) && !jsonObj.get("workAuthorization").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workAuthorization` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workAuthorization").toString()));
      }
      if ((jsonObj.get("i94AdmissionNumber") != null && !jsonObj.get("i94AdmissionNumber").isJsonNull()) && !jsonObj.get("i94AdmissionNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `i94AdmissionNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("i94AdmissionNumber").toString()));
      }
      if ((jsonObj.get("foreignPassportNumber") != null && !jsonObj.get("foreignPassportNumber").isJsonNull()) && !jsonObj.get("foreignPassportNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `foreignPassportNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("foreignPassportNumber").toString()));
      }
      if ((jsonObj.get("countryOfIssuance") != null && !jsonObj.get("countryOfIssuance").isJsonNull()) && !jsonObj.get("countryOfIssuance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryOfIssuance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryOfIssuance").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NewWorkEligibility.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NewWorkEligibility' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NewWorkEligibility> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NewWorkEligibility.class));

       return (TypeAdapter<T>) new TypeAdapter<NewWorkEligibility>() {
           @Override
           public void write(JsonWriter out, NewWorkEligibility value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public NewWorkEligibility read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             NewWorkEligibility instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of NewWorkEligibility given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of NewWorkEligibility
  * @throws IOException if the JSON string is invalid with respect to NewWorkEligibility
  */
  public static NewWorkEligibility fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NewWorkEligibility.class);
  }

 /**
  * Convert an instance of NewWorkEligibility to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

