/*
 * WebLink API
 * For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview
 *
 * The version of the OpenAPI document: v2
 * Contact: webservices@paylocity.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * The employee model
 */
@ApiModel(description = "The employee model")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class Employee {
  public static final String SERIALIZED_NAME_ADDITIONAL_DIRECT_DEPOSIT = "additionalDirectDeposit";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_DIRECT_DEPOSIT)
  private List<Object> additionalDirectDeposit = null;

  public static final String SERIALIZED_NAME_ADDITIONAL_RATE = "additionalRate";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_RATE)
  private List<Object> additionalRate = null;

  public static final String SERIALIZED_NAME_BENEFIT_SETUP = "benefitSetup";
  @SerializedName(SERIALIZED_NAME_BENEFIT_SETUP)
  private Object benefitSetup;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "birthDate";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private Object birthDate;

  public static final String SERIALIZED_NAME_COMPANY_F_E_I_N = "companyFEIN";
  @SerializedName(SERIALIZED_NAME_COMPANY_F_E_I_N)
  private Object companyFEIN;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private Object companyName;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private Object currency;

  public static final String SERIALIZED_NAME_CUSTOM_BOOLEAN_FIELDS = "customBooleanFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_BOOLEAN_FIELDS)
  private List<Object> customBooleanFields = null;

  public static final String SERIALIZED_NAME_CUSTOM_DATE_FIELDS = "customDateFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DATE_FIELDS)
  private List<Object> customDateFields = null;

  public static final String SERIALIZED_NAME_CUSTOM_DROP_DOWN_FIELDS = "customDropDownFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DROP_DOWN_FIELDS)
  private List<Object> customDropDownFields = null;

  public static final String SERIALIZED_NAME_CUSTOM_NUMBER_FIELDS = "customNumberFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_NUMBER_FIELDS)
  private List<Object> customNumberFields = null;

  public static final String SERIALIZED_NAME_CUSTOM_TEXT_FIELDS = "customTextFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TEXT_FIELDS)
  private List<Object> customTextFields = null;

  public static final String SERIALIZED_NAME_DEPARTMENT_POSITION = "departmentPosition";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_POSITION)
  private Object departmentPosition;

  public static final String SERIALIZED_NAME_DISABILITY_DESCRIPTION = "disabilityDescription";
  @SerializedName(SERIALIZED_NAME_DISABILITY_DESCRIPTION)
  private Object disabilityDescription;

  public static final String SERIALIZED_NAME_EMERGENCY_CONTACTS = "emergencyContacts";
  @SerializedName(SERIALIZED_NAME_EMERGENCY_CONTACTS)
  private List<Object> emergencyContacts = null;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private Object employeeId;

  public static final String SERIALIZED_NAME_ETHNICITY = "ethnicity";
  @SerializedName(SERIALIZED_NAME_ETHNICITY)
  private Object ethnicity;

  public static final String SERIALIZED_NAME_FEDERAL_TAX = "federalTax";
  @SerializedName(SERIALIZED_NAME_FEDERAL_TAX)
  private Object federalTax;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private Object firstName;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private Object gender;

  public static final String SERIALIZED_NAME_HOME_ADDRESS = "homeAddress";
  @SerializedName(SERIALIZED_NAME_HOME_ADDRESS)
  private Object homeAddress;

  public static final String SERIALIZED_NAME_IS_HIGHLY_COMPENSATED = "isHighlyCompensated";
  @SerializedName(SERIALIZED_NAME_IS_HIGHLY_COMPENSATED)
  private Boolean isHighlyCompensated;

  public static final String SERIALIZED_NAME_IS_SMOKER = "isSmoker";
  @SerializedName(SERIALIZED_NAME_IS_SMOKER)
  private Boolean isSmoker;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private Object lastName;

  public static final String SERIALIZED_NAME_LOCAL_TAX = "localTax";
  @SerializedName(SERIALIZED_NAME_LOCAL_TAX)
  private List<Object> localTax = null;

  public static final String SERIALIZED_NAME_MAIN_DIRECT_DEPOSIT = "mainDirectDeposit";
  @SerializedName(SERIALIZED_NAME_MAIN_DIRECT_DEPOSIT)
  private Object mainDirectDeposit;

  public static final String SERIALIZED_NAME_MARITAL_STATUS = "maritalStatus";
  @SerializedName(SERIALIZED_NAME_MARITAL_STATUS)
  private Object maritalStatus;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private Object middleName;

  public static final String SERIALIZED_NAME_NON_PRIMARY_STATE_TAX = "nonPrimaryStateTax";
  @SerializedName(SERIALIZED_NAME_NON_PRIMARY_STATE_TAX)
  private Object nonPrimaryStateTax;

  public static final String SERIALIZED_NAME_OWNER_PERCENT = "ownerPercent";
  @SerializedName(SERIALIZED_NAME_OWNER_PERCENT)
  private Object ownerPercent;

  public static final String SERIALIZED_NAME_PREFERRED_NAME = "preferredName";
  @SerializedName(SERIALIZED_NAME_PREFERRED_NAME)
  private Object preferredName;

  public static final String SERIALIZED_NAME_PRIMARY_PAY_RATE = "primaryPayRate";
  @SerializedName(SERIALIZED_NAME_PRIMARY_PAY_RATE)
  private Object primaryPayRate;

  public static final String SERIALIZED_NAME_PRIMARY_STATE_TAX = "primaryStateTax";
  @SerializedName(SERIALIZED_NAME_PRIMARY_STATE_TAX)
  private Object primaryStateTax;

  public static final String SERIALIZED_NAME_PRIOR_LAST_NAME = "priorLastName";
  @SerializedName(SERIALIZED_NAME_PRIOR_LAST_NAME)
  private Object priorLastName;

  public static final String SERIALIZED_NAME_SALUTATION = "salutation";
  @SerializedName(SERIALIZED_NAME_SALUTATION)
  private Object salutation;

  public static final String SERIALIZED_NAME_SSN = "ssn";
  @SerializedName(SERIALIZED_NAME_SSN)
  private Object ssn;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Object status;

  public static final String SERIALIZED_NAME_SUFFIX = "suffix";
  @SerializedName(SERIALIZED_NAME_SUFFIX)
  private Object suffix;

  public static final String SERIALIZED_NAME_TAX_SETUP = "taxSetup";
  @SerializedName(SERIALIZED_NAME_TAX_SETUP)
  private Object taxSetup;

  public static final String SERIALIZED_NAME_VETERAN_DESCRIPTION = "veteranDescription";
  @SerializedName(SERIALIZED_NAME_VETERAN_DESCRIPTION)
  private Object veteranDescription;

  public static final String SERIALIZED_NAME_WEB_TIME = "webTime";
  @SerializedName(SERIALIZED_NAME_WEB_TIME)
  private Object webTime;

  public static final String SERIALIZED_NAME_WORK_ADDRESS = "workAddress";
  @SerializedName(SERIALIZED_NAME_WORK_ADDRESS)
  private Object workAddress;

  public static final String SERIALIZED_NAME_WORK_ELIGIBILITY = "workEligibility";
  @SerializedName(SERIALIZED_NAME_WORK_ELIGIBILITY)
  private Object workEligibility;

  public Employee() {
  }

  public Employee additionalDirectDeposit(List<Object> additionalDirectDeposit) {
    
    
    
    
    this.additionalDirectDeposit = additionalDirectDeposit;
    return this;
  }

  public Employee addAdditionalDirectDepositItem(Object additionalDirectDepositItem) {
    if (this.additionalDirectDeposit == null) {
      this.additionalDirectDeposit = new ArrayList<>();
    }
    this.additionalDirectDeposit.add(additionalDirectDepositItem);
    return this;
  }

   /**
   * Add up to 19 direct deposit accounts in addition to the main direct deposit account. IMPORTANT: A direct deposit update will remove ALL existing main and additional direct deposit information in WebPay and replace with information provided on the request. GET API will not return direct deposit data.
   * @return additionalDirectDeposit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add up to 19 direct deposit accounts in addition to the main direct deposit account. IMPORTANT: A direct deposit update will remove ALL existing main and additional direct deposit information in WebPay and replace with information provided on the request. GET API will not return direct deposit data.")

  public List<Object> getAdditionalDirectDeposit() {
    return additionalDirectDeposit;
  }


  public void setAdditionalDirectDeposit(List<Object> additionalDirectDeposit) {
    
    
    
    this.additionalDirectDeposit = additionalDirectDeposit;
  }


  public Employee additionalRate(List<Object> additionalRate) {
    
    
    
    
    this.additionalRate = additionalRate;
    return this;
  }

  public Employee addAdditionalRateItem(Object additionalRateItem) {
    if (this.additionalRate == null) {
      this.additionalRate = new ArrayList<>();
    }
    this.additionalRate.add(additionalRateItem);
    return this;
  }

   /**
   * Add Additional Rates.
   * @return additionalRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add Additional Rates.")

  public List<Object> getAdditionalRate() {
    return additionalRate;
  }


  public void setAdditionalRate(List<Object> additionalRate) {
    
    
    
    this.additionalRate = additionalRate;
  }


  public Employee benefitSetup(Object benefitSetup) {
    
    
    
    
    this.benefitSetup = benefitSetup;
    return this;
  }

   /**
   *  Add or update setup values used for employee benefits integration, insurance plan settings, and ACA reporting.
   * @return benefitSetup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = " Add or update setup values used for employee benefits integration, insurance plan settings, and ACA reporting.")

  public Object getBenefitSetup() {
    return benefitSetup;
  }


  public void setBenefitSetup(Object benefitSetup) {
    
    
    
    this.benefitSetup = benefitSetup;
  }


  public Employee birthDate(Object birthDate) {
    
    
    
    
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Employee birthdate. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
   * @return birthDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee birthdate. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.")

  public Object getBirthDate() {
    return birthDate;
  }


  public void setBirthDate(Object birthDate) {
    
    
    
    this.birthDate = birthDate;
  }


  public Employee companyFEIN(Object companyFEIN) {
    
    
    
    
    this.companyFEIN = companyFEIN;
    return this;
  }

   /**
   * Company FEIN as defined in Paylocity Payroll/HR solution, applicable with GET requests only.&lt;br  /&gt; Max length: 20
   * @return companyFEIN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Company FEIN as defined in Paylocity Payroll/HR solution, applicable with GET requests only.<br  /> Max length: 20")

  public Object getCompanyFEIN() {
    return companyFEIN;
  }


  public void setCompanyFEIN(Object companyFEIN) {
    
    
    
    this.companyFEIN = companyFEIN;
  }


  public Employee companyName(Object companyName) {
    
    
    
    
    this.companyName = companyName;
    return this;
  }

   /**
   * Company name as defined in Paylocity Payroll/HR solution, applicable with GET requests only.&lt;br  /&gt; Max length: 50
   * @return companyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Company name as defined in Paylocity Payroll/HR solution, applicable with GET requests only.<br  /> Max length: 50")

  public Object getCompanyName() {
    return companyName;
  }


  public void setCompanyName(Object companyName) {
    
    
    
    this.companyName = companyName;
  }


  public Employee currency(Object currency) {
    
    
    
    
    this.currency = currency;
    return this;
  }

   /**
   * Employee is paid in this currency. &lt;br  /&gt;Max length: 30
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee is paid in this currency. <br  />Max length: 30")

  public Object getCurrency() {
    return currency;
  }


  public void setCurrency(Object currency) {
    
    
    
    this.currency = currency;
  }


  public Employee customBooleanFields(List<Object> customBooleanFields) {
    
    
    
    
    this.customBooleanFields = customBooleanFields;
    return this;
  }

  public Employee addCustomBooleanFieldsItem(Object customBooleanFieldsItem) {
    if (this.customBooleanFields == null) {
      this.customBooleanFields = new ArrayList<>();
    }
    this.customBooleanFields.add(customBooleanFieldsItem);
    return this;
  }

   /**
   * Up to 8 custom fields of boolean (checkbox) type value.
   * @return customBooleanFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Up to 8 custom fields of boolean (checkbox) type value.")

  public List<Object> getCustomBooleanFields() {
    return customBooleanFields;
  }


  public void setCustomBooleanFields(List<Object> customBooleanFields) {
    
    
    
    this.customBooleanFields = customBooleanFields;
  }


  public Employee customDateFields(List<Object> customDateFields) {
    
    
    
    
    this.customDateFields = customDateFields;
    return this;
  }

  public Employee addCustomDateFieldsItem(Object customDateFieldsItem) {
    if (this.customDateFields == null) {
      this.customDateFields = new ArrayList<>();
    }
    this.customDateFields.add(customDateFieldsItem);
    return this;
  }

   /**
   * Up to 8 custom fields of the date type value.
   * @return customDateFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Up to 8 custom fields of the date type value.")

  public List<Object> getCustomDateFields() {
    return customDateFields;
  }


  public void setCustomDateFields(List<Object> customDateFields) {
    
    
    
    this.customDateFields = customDateFields;
  }


  public Employee customDropDownFields(List<Object> customDropDownFields) {
    
    
    
    
    this.customDropDownFields = customDropDownFields;
    return this;
  }

  public Employee addCustomDropDownFieldsItem(Object customDropDownFieldsItem) {
    if (this.customDropDownFields == null) {
      this.customDropDownFields = new ArrayList<>();
    }
    this.customDropDownFields.add(customDropDownFieldsItem);
    return this;
  }

   /**
   * Up to 8 custom fields of the dropdown type value.
   * @return customDropDownFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Up to 8 custom fields of the dropdown type value.")

  public List<Object> getCustomDropDownFields() {
    return customDropDownFields;
  }


  public void setCustomDropDownFields(List<Object> customDropDownFields) {
    
    
    
    this.customDropDownFields = customDropDownFields;
  }


  public Employee customNumberFields(List<Object> customNumberFields) {
    
    
    
    
    this.customNumberFields = customNumberFields;
    return this;
  }

  public Employee addCustomNumberFieldsItem(Object customNumberFieldsItem) {
    if (this.customNumberFields == null) {
      this.customNumberFields = new ArrayList<>();
    }
    this.customNumberFields.add(customNumberFieldsItem);
    return this;
  }

   /**
   * Up to 8 custom fields of numeric type value.
   * @return customNumberFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Up to 8 custom fields of numeric type value.")

  public List<Object> getCustomNumberFields() {
    return customNumberFields;
  }


  public void setCustomNumberFields(List<Object> customNumberFields) {
    
    
    
    this.customNumberFields = customNumberFields;
  }


  public Employee customTextFields(List<Object> customTextFields) {
    
    
    
    
    this.customTextFields = customTextFields;
    return this;
  }

  public Employee addCustomTextFieldsItem(Object customTextFieldsItem) {
    if (this.customTextFields == null) {
      this.customTextFields = new ArrayList<>();
    }
    this.customTextFields.add(customTextFieldsItem);
    return this;
  }

   /**
   * Up to 8 custom fields of text type value.
   * @return customTextFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Up to 8 custom fields of text type value.")

  public List<Object> getCustomTextFields() {
    return customTextFields;
  }


  public void setCustomTextFields(List<Object> customTextFields) {
    
    
    
    this.customTextFields = customTextFields;
  }


  public Employee departmentPosition(Object departmentPosition) {
    
    
    
    
    this.departmentPosition = departmentPosition;
    return this;
  }

   /**
   * Add or update home department cost center, position, supervisor, reviewer, employment type, EEO class, pay settings, and union information.
   * @return departmentPosition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add or update home department cost center, position, supervisor, reviewer, employment type, EEO class, pay settings, and union information.")

  public Object getDepartmentPosition() {
    return departmentPosition;
  }


  public void setDepartmentPosition(Object departmentPosition) {
    
    
    
    this.departmentPosition = departmentPosition;
  }


  public Employee disabilityDescription(Object disabilityDescription) {
    
    
    
    
    this.disabilityDescription = disabilityDescription;
    return this;
  }

   /**
   * Indicates if employee has disability status.
   * @return disabilityDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee has disability status.")

  public Object getDisabilityDescription() {
    return disabilityDescription;
  }


  public void setDisabilityDescription(Object disabilityDescription) {
    
    
    
    this.disabilityDescription = disabilityDescription;
  }


  public Employee emergencyContacts(List<Object> emergencyContacts) {
    
    
    
    
    this.emergencyContacts = emergencyContacts;
    return this;
  }

  public Employee addEmergencyContactsItem(Object emergencyContactsItem) {
    if (this.emergencyContacts == null) {
      this.emergencyContacts = new ArrayList<>();
    }
    this.emergencyContacts.add(emergencyContactsItem);
    return this;
  }

   /**
   * Add or update Emergency Contacts.
   * @return emergencyContacts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add or update Emergency Contacts.")

  public List<Object> getEmergencyContacts() {
    return emergencyContacts;
  }


  public void setEmergencyContacts(List<Object> emergencyContacts) {
    
    
    
    this.emergencyContacts = emergencyContacts;
  }


  public Employee employeeId(Object employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Leave blank to have Paylocity Payroll/HR solution automatically assign the next available employee ID.&lt;br  /&gt;Max length: 10
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Leave blank to have Paylocity Payroll/HR solution automatically assign the next available employee ID.<br  />Max length: 10")

  public Object getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(Object employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public Employee ethnicity(Object ethnicity) {
    
    
    
    
    this.ethnicity = ethnicity;
    return this;
  }

   /**
   * Employee ethnicity.&lt;br  /&gt; Max length: 10
   * @return ethnicity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee ethnicity.<br  /> Max length: 10")

  public Object getEthnicity() {
    return ethnicity;
  }


  public void setEthnicity(Object ethnicity) {
    
    
    
    this.ethnicity = ethnicity;
  }


  public Employee federalTax(Object federalTax) {
    
    
    
    
    this.federalTax = federalTax;
    return this;
  }

   /**
   * Add or update federal tax amount type (taxCalculationCode), amount or percentage, filing status, and exemptions.
   * @return federalTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add or update federal tax amount type (taxCalculationCode), amount or percentage, filing status, and exemptions.")

  public Object getFederalTax() {
    return federalTax;
  }


  public void setFederalTax(Object federalTax) {
    
    
    
    this.federalTax = federalTax;
  }


  public Employee firstName(Object firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Employee first name. &lt;br  /&gt;Max length: 40
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee first name. <br  />Max length: 40")

  public Object getFirstName() {
    return firstName;
  }


  public void setFirstName(Object firstName) {
    
    
    
    this.firstName = firstName;
  }


  public Employee gender(Object gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Employee gender. Common values *M* (Male), *F* (Female). &lt;br  /&gt;Max length: 1
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee gender. Common values *M* (Male), *F* (Female). <br  />Max length: 1")

  public Object getGender() {
    return gender;
  }


  public void setGender(Object gender) {
    
    
    
    this.gender = gender;
  }


  public Employee homeAddress(Object homeAddress) {
    
    
    
    
    this.homeAddress = homeAddress;
    return this;
  }

   /**
   * Add or update employee&#39;s home address, personal phone numbers, and personal email.
   * @return homeAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add or update employee's home address, personal phone numbers, and personal email.")

  public Object getHomeAddress() {
    return homeAddress;
  }


  public void setHomeAddress(Object homeAddress) {
    
    
    
    this.homeAddress = homeAddress;
  }


  public Employee isHighlyCompensated(Boolean isHighlyCompensated) {
    
    
    
    
    this.isHighlyCompensated = isHighlyCompensated;
    return this;
  }

   /**
   * Indicates if employee meets the highly compensated employee criteria.
   * @return isHighlyCompensated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee meets the highly compensated employee criteria.")

  public Boolean getIsHighlyCompensated() {
    return isHighlyCompensated;
  }


  public void setIsHighlyCompensated(Boolean isHighlyCompensated) {
    
    
    
    this.isHighlyCompensated = isHighlyCompensated;
  }


  public Employee isSmoker(Boolean isSmoker) {
    
    
    
    
    this.isSmoker = isSmoker;
    return this;
  }

   /**
   * Indicates if employee is a smoker.
   * @return isSmoker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is a smoker.")

  public Boolean getIsSmoker() {
    return isSmoker;
  }


  public void setIsSmoker(Boolean isSmoker) {
    
    
    
    this.isSmoker = isSmoker;
  }


  public Employee lastName(Object lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Employee last name. &lt;br  /&gt;Max length: 40
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee last name. <br  />Max length: 40")

  public Object getLastName() {
    return lastName;
  }


  public void setLastName(Object lastName) {
    
    
    
    this.lastName = lastName;
  }


  public Employee localTax(List<Object> localTax) {
    
    
    
    
    this.localTax = localTax;
    return this;
  }

  public Employee addLocalTaxItem(Object localTaxItem) {
    if (this.localTax == null) {
      this.localTax = new ArrayList<>();
    }
    this.localTax.add(localTaxItem);
    return this;
  }

   /**
   * Add, update, or delete local tax code, filing status, and exemptions including  PA-PSD taxes.
   * @return localTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add, update, or delete local tax code, filing status, and exemptions including  PA-PSD taxes.")

  public List<Object> getLocalTax() {
    return localTax;
  }


  public void setLocalTax(List<Object> localTax) {
    
    
    
    this.localTax = localTax;
  }


  public Employee mainDirectDeposit(Object mainDirectDeposit) {
    
    
    
    
    this.mainDirectDeposit = mainDirectDeposit;
    return this;
  }

   /**
   * Add the main direct deposit account. After deposits are made to any additional direct deposit accounts, the remaining net check is deposited in the main direct deposit account. IMPORTANT: A direct deposit update will remove ALL existing main and additional direct deposit information in WebPay and replace with what is provided on the request. GET API will not return direct deposit data.
   * @return mainDirectDeposit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add the main direct deposit account. After deposits are made to any additional direct deposit accounts, the remaining net check is deposited in the main direct deposit account. IMPORTANT: A direct deposit update will remove ALL existing main and additional direct deposit information in WebPay and replace with what is provided on the request. GET API will not return direct deposit data.")

  public Object getMainDirectDeposit() {
    return mainDirectDeposit;
  }


  public void setMainDirectDeposit(Object mainDirectDeposit) {
    
    
    
    this.mainDirectDeposit = mainDirectDeposit;
  }


  public Employee maritalStatus(Object maritalStatus) {
    
    
    
    
    this.maritalStatus = maritalStatus;
    return this;
  }

   /**
   * Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. &lt;br  /&gt;Max length: 10
   * @return maritalStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. <br  />Max length: 10")

  public Object getMaritalStatus() {
    return maritalStatus;
  }


  public void setMaritalStatus(Object maritalStatus) {
    
    
    
    this.maritalStatus = maritalStatus;
  }


  public Employee middleName(Object middleName) {
    
    
    
    
    this.middleName = middleName;
    return this;
  }

   /**
   * Employee middle name.&lt;br  /&gt; Max length: 20
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee middle name.<br  /> Max length: 20")

  public Object getMiddleName() {
    return middleName;
  }


  public void setMiddleName(Object middleName) {
    
    
    
    this.middleName = middleName;
  }


  public Employee nonPrimaryStateTax(Object nonPrimaryStateTax) {
    
    
    
    
    this.nonPrimaryStateTax = nonPrimaryStateTax;
    return this;
  }

   /**
   * Add or update non-primary state tax code, amount type (taxCalculationCode), amount or percentage, filing status, exemptions, supplemental check (specialCheckCalc), and reciprocity code information.
   * @return nonPrimaryStateTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add or update non-primary state tax code, amount type (taxCalculationCode), amount or percentage, filing status, exemptions, supplemental check (specialCheckCalc), and reciprocity code information.")

  public Object getNonPrimaryStateTax() {
    return nonPrimaryStateTax;
  }


  public void setNonPrimaryStateTax(Object nonPrimaryStateTax) {
    
    
    
    this.nonPrimaryStateTax = nonPrimaryStateTax;
  }


  public Employee ownerPercent(Object ownerPercent) {
    
    
    
    
    this.ownerPercent = ownerPercent;
    return this;
  }

   /**
   * Percentage of employee&#39;s ownership in the company, entered as a whole number. &lt;br  /&gt; Decimal (12,2)
   * @return ownerPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Percentage of employee's ownership in the company, entered as a whole number. <br  /> Decimal (12,2)")

  public Object getOwnerPercent() {
    return ownerPercent;
  }


  public void setOwnerPercent(Object ownerPercent) {
    
    
    
    this.ownerPercent = ownerPercent;
  }


  public Employee preferredName(Object preferredName) {
    
    
    
    
    this.preferredName = preferredName;
    return this;
  }

   /**
   * Employee preferred display name.&lt;br  /&gt; Max length: 20
   * @return preferredName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee preferred display name.<br  /> Max length: 20")

  public Object getPreferredName() {
    return preferredName;
  }


  public void setPreferredName(Object preferredName) {
    
    
    
    this.preferredName = preferredName;
  }


  public Employee primaryPayRate(Object primaryPayRate) {
    
    
    
    
    this.primaryPayRate = primaryPayRate;
    return this;
  }

   /**
   * Add or update hourly or salary pay rate, effective date, and pay frequency.
   * @return primaryPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add or update hourly or salary pay rate, effective date, and pay frequency.")

  public Object getPrimaryPayRate() {
    return primaryPayRate;
  }


  public void setPrimaryPayRate(Object primaryPayRate) {
    
    
    
    this.primaryPayRate = primaryPayRate;
  }


  public Employee primaryStateTax(Object primaryStateTax) {
    
    
    
    
    this.primaryStateTax = primaryStateTax;
    return this;
  }

   /**
   * Add or update primary state tax code, amount type (taxCalculationCode), amount or percentage, filing status, exemptions, and supplemental check (specialCheckCalc) information. Only one primary state is allowed. Sending an updated primary state will replace the current primary state.
   * @return primaryStateTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add or update primary state tax code, amount type (taxCalculationCode), amount or percentage, filing status, exemptions, and supplemental check (specialCheckCalc) information. Only one primary state is allowed. Sending an updated primary state will replace the current primary state.")

  public Object getPrimaryStateTax() {
    return primaryStateTax;
  }


  public void setPrimaryStateTax(Object primaryStateTax) {
    
    
    
    this.primaryStateTax = primaryStateTax;
  }


  public Employee priorLastName(Object priorLastName) {
    
    
    
    
    this.priorLastName = priorLastName;
    return this;
  }

   /**
   * Prior last name if applicable.&lt;br  /&gt;Max length: 40
   * @return priorLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Prior last name if applicable.<br  />Max length: 40")

  public Object getPriorLastName() {
    return priorLastName;
  }


  public void setPriorLastName(Object priorLastName) {
    
    
    
    this.priorLastName = priorLastName;
  }


  public Employee salutation(Object salutation) {
    
    
    
    
    this.salutation = salutation;
    return this;
  }

   /**
   * Employee preferred salutation. &lt;br  /&gt;Max length: 10
   * @return salutation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee preferred salutation. <br  />Max length: 10")

  public Object getSalutation() {
    return salutation;
  }


  public void setSalutation(Object salutation) {
    
    
    
    this.salutation = salutation;
  }


  public Employee ssn(Object ssn) {
    
    
    
    
    this.ssn = ssn;
    return this;
  }

   /**
   * Employee social security number. Leave it blank if valid social security number not available. &lt;br  /&gt;Max length: 11
   * @return ssn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee social security number. Leave it blank if valid social security number not available. <br  />Max length: 11")

  public Object getSsn() {
    return ssn;
  }


  public void setSsn(Object ssn) {
    
    
    
    this.ssn = ssn;
  }


  public Employee status(Object status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Add or update employee status, change reason, effective date, and adjusted seniority date. Note that companies that are still in Implementation cannot hire future employees.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add or update employee status, change reason, effective date, and adjusted seniority date. Note that companies that are still in Implementation cannot hire future employees.")

  public Object getStatus() {
    return status;
  }


  public void setStatus(Object status) {
    
    
    
    this.status = status;
  }


  public Employee suffix(Object suffix) {
    
    
    
    
    this.suffix = suffix;
    return this;
  }

   /**
   * Employee name suffix. Common values are *Jr, Sr, II*.&lt;br  /&gt;Max length: 30
   * @return suffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max length: 30")

  public Object getSuffix() {
    return suffix;
  }


  public void setSuffix(Object suffix) {
    
    
    
    this.suffix = suffix;
  }


  public Employee taxSetup(Object taxSetup) {
    
    
    
    
    this.taxSetup = taxSetup;
    return this;
  }

   /**
   * Add tax form, 1099 exempt reasons and notes, and 943 agricultural employee information. Once the employee receives wages, this information cannot be updated. Add or update SUI tax state, retirement plan, and statutory information.
   * @return taxSetup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add tax form, 1099 exempt reasons and notes, and 943 agricultural employee information. Once the employee receives wages, this information cannot be updated. Add or update SUI tax state, retirement plan, and statutory information.")

  public Object getTaxSetup() {
    return taxSetup;
  }


  public void setTaxSetup(Object taxSetup) {
    
    
    
    this.taxSetup = taxSetup;
  }


  public Employee veteranDescription(Object veteranDescription) {
    
    
    
    
    this.veteranDescription = veteranDescription;
    return this;
  }

   /**
   * Indicates if employee is a veteran.
   * @return veteranDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is a veteran.")

  public Object getVeteranDescription() {
    return veteranDescription;
  }


  public void setVeteranDescription(Object veteranDescription) {
    
    
    
    this.veteranDescription = veteranDescription;
  }


  public Employee webTime(Object webTime) {
    
    
    
    
    this.webTime = webTime;
    return this;
  }

   /**
   * Add or update Web Time badge number and charge rate and synchronize Paylocity Payroll/HR solution and Web Time employee data.
   * @return webTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add or update Web Time badge number and charge rate and synchronize Paylocity Payroll/HR solution and Web Time employee data.")

  public Object getWebTime() {
    return webTime;
  }


  public void setWebTime(Object webTime) {
    
    
    
    this.webTime = webTime;
  }


  public Employee workAddress(Object workAddress) {
    
    
    
    
    this.workAddress = workAddress;
    return this;
  }

   /**
   * Add or update employee&#39;s work address, phone numbers, and email. Work Location drop down field is not included.
   * @return workAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add or update employee's work address, phone numbers, and email. Work Location drop down field is not included.")

  public Object getWorkAddress() {
    return workAddress;
  }


  public void setWorkAddress(Object workAddress) {
    
    
    
    this.workAddress = workAddress;
  }


  public Employee workEligibility(Object workEligibility) {
    
    
    
    
    this.workEligibility = workEligibility;
    return this;
  }

   /**
   * Add or update I-9 work authorization information.
   * @return workEligibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Add or update I-9 work authorization information.")

  public Object getWorkEligibility() {
    return workEligibility;
  }


  public void setWorkEligibility(Object workEligibility) {
    
    
    
    this.workEligibility = workEligibility;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Employee instance itself
   */
  public Employee putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Employee employee = (Employee) o;
    return Objects.equals(this.additionalDirectDeposit, employee.additionalDirectDeposit) &&
        Objects.equals(this.additionalRate, employee.additionalRate) &&
        Objects.equals(this.benefitSetup, employee.benefitSetup) &&
        Objects.equals(this.birthDate, employee.birthDate) &&
        Objects.equals(this.companyFEIN, employee.companyFEIN) &&
        Objects.equals(this.companyName, employee.companyName) &&
        Objects.equals(this.currency, employee.currency) &&
        Objects.equals(this.customBooleanFields, employee.customBooleanFields) &&
        Objects.equals(this.customDateFields, employee.customDateFields) &&
        Objects.equals(this.customDropDownFields, employee.customDropDownFields) &&
        Objects.equals(this.customNumberFields, employee.customNumberFields) &&
        Objects.equals(this.customTextFields, employee.customTextFields) &&
        Objects.equals(this.departmentPosition, employee.departmentPosition) &&
        Objects.equals(this.disabilityDescription, employee.disabilityDescription) &&
        Objects.equals(this.emergencyContacts, employee.emergencyContacts) &&
        Objects.equals(this.employeeId, employee.employeeId) &&
        Objects.equals(this.ethnicity, employee.ethnicity) &&
        Objects.equals(this.federalTax, employee.federalTax) &&
        Objects.equals(this.firstName, employee.firstName) &&
        Objects.equals(this.gender, employee.gender) &&
        Objects.equals(this.homeAddress, employee.homeAddress) &&
        Objects.equals(this.isHighlyCompensated, employee.isHighlyCompensated) &&
        Objects.equals(this.isSmoker, employee.isSmoker) &&
        Objects.equals(this.lastName, employee.lastName) &&
        Objects.equals(this.localTax, employee.localTax) &&
        Objects.equals(this.mainDirectDeposit, employee.mainDirectDeposit) &&
        Objects.equals(this.maritalStatus, employee.maritalStatus) &&
        Objects.equals(this.middleName, employee.middleName) &&
        Objects.equals(this.nonPrimaryStateTax, employee.nonPrimaryStateTax) &&
        Objects.equals(this.ownerPercent, employee.ownerPercent) &&
        Objects.equals(this.preferredName, employee.preferredName) &&
        Objects.equals(this.primaryPayRate, employee.primaryPayRate) &&
        Objects.equals(this.primaryStateTax, employee.primaryStateTax) &&
        Objects.equals(this.priorLastName, employee.priorLastName) &&
        Objects.equals(this.salutation, employee.salutation) &&
        Objects.equals(this.ssn, employee.ssn) &&
        Objects.equals(this.status, employee.status) &&
        Objects.equals(this.suffix, employee.suffix) &&
        Objects.equals(this.taxSetup, employee.taxSetup) &&
        Objects.equals(this.veteranDescription, employee.veteranDescription) &&
        Objects.equals(this.webTime, employee.webTime) &&
        Objects.equals(this.workAddress, employee.workAddress) &&
        Objects.equals(this.workEligibility, employee.workEligibility)&&
        Objects.equals(this.additionalProperties, employee.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalDirectDeposit, additionalRate, benefitSetup, birthDate, companyFEIN, companyName, currency, customBooleanFields, customDateFields, customDropDownFields, customNumberFields, customTextFields, departmentPosition, disabilityDescription, emergencyContacts, employeeId, ethnicity, federalTax, firstName, gender, homeAddress, isHighlyCompensated, isSmoker, lastName, localTax, mainDirectDeposit, maritalStatus, middleName, nonPrimaryStateTax, ownerPercent, preferredName, primaryPayRate, primaryStateTax, priorLastName, salutation, ssn, status, suffix, taxSetup, veteranDescription, webTime, workAddress, workEligibility, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Employee {\n");
    sb.append("    additionalDirectDeposit: ").append(toIndentedString(additionalDirectDeposit)).append("\n");
    sb.append("    additionalRate: ").append(toIndentedString(additionalRate)).append("\n");
    sb.append("    benefitSetup: ").append(toIndentedString(benefitSetup)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    companyFEIN: ").append(toIndentedString(companyFEIN)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    customBooleanFields: ").append(toIndentedString(customBooleanFields)).append("\n");
    sb.append("    customDateFields: ").append(toIndentedString(customDateFields)).append("\n");
    sb.append("    customDropDownFields: ").append(toIndentedString(customDropDownFields)).append("\n");
    sb.append("    customNumberFields: ").append(toIndentedString(customNumberFields)).append("\n");
    sb.append("    customTextFields: ").append(toIndentedString(customTextFields)).append("\n");
    sb.append("    departmentPosition: ").append(toIndentedString(departmentPosition)).append("\n");
    sb.append("    disabilityDescription: ").append(toIndentedString(disabilityDescription)).append("\n");
    sb.append("    emergencyContacts: ").append(toIndentedString(emergencyContacts)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    ethnicity: ").append(toIndentedString(ethnicity)).append("\n");
    sb.append("    federalTax: ").append(toIndentedString(federalTax)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    homeAddress: ").append(toIndentedString(homeAddress)).append("\n");
    sb.append("    isHighlyCompensated: ").append(toIndentedString(isHighlyCompensated)).append("\n");
    sb.append("    isSmoker: ").append(toIndentedString(isSmoker)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    localTax: ").append(toIndentedString(localTax)).append("\n");
    sb.append("    mainDirectDeposit: ").append(toIndentedString(mainDirectDeposit)).append("\n");
    sb.append("    maritalStatus: ").append(toIndentedString(maritalStatus)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    nonPrimaryStateTax: ").append(toIndentedString(nonPrimaryStateTax)).append("\n");
    sb.append("    ownerPercent: ").append(toIndentedString(ownerPercent)).append("\n");
    sb.append("    preferredName: ").append(toIndentedString(preferredName)).append("\n");
    sb.append("    primaryPayRate: ").append(toIndentedString(primaryPayRate)).append("\n");
    sb.append("    primaryStateTax: ").append(toIndentedString(primaryStateTax)).append("\n");
    sb.append("    priorLastName: ").append(toIndentedString(priorLastName)).append("\n");
    sb.append("    salutation: ").append(toIndentedString(salutation)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    taxSetup: ").append(toIndentedString(taxSetup)).append("\n");
    sb.append("    veteranDescription: ").append(toIndentedString(veteranDescription)).append("\n");
    sb.append("    webTime: ").append(toIndentedString(webTime)).append("\n");
    sb.append("    workAddress: ").append(toIndentedString(workAddress)).append("\n");
    sb.append("    workEligibility: ").append(toIndentedString(workEligibility)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additionalDirectDeposit");
    openapiFields.add("additionalRate");
    openapiFields.add("benefitSetup");
    openapiFields.add("birthDate");
    openapiFields.add("companyFEIN");
    openapiFields.add("companyName");
    openapiFields.add("currency");
    openapiFields.add("customBooleanFields");
    openapiFields.add("customDateFields");
    openapiFields.add("customDropDownFields");
    openapiFields.add("customNumberFields");
    openapiFields.add("customTextFields");
    openapiFields.add("departmentPosition");
    openapiFields.add("disabilityDescription");
    openapiFields.add("emergencyContacts");
    openapiFields.add("employeeId");
    openapiFields.add("ethnicity");
    openapiFields.add("federalTax");
    openapiFields.add("firstName");
    openapiFields.add("gender");
    openapiFields.add("homeAddress");
    openapiFields.add("isHighlyCompensated");
    openapiFields.add("isSmoker");
    openapiFields.add("lastName");
    openapiFields.add("localTax");
    openapiFields.add("mainDirectDeposit");
    openapiFields.add("maritalStatus");
    openapiFields.add("middleName");
    openapiFields.add("nonPrimaryStateTax");
    openapiFields.add("ownerPercent");
    openapiFields.add("preferredName");
    openapiFields.add("primaryPayRate");
    openapiFields.add("primaryStateTax");
    openapiFields.add("priorLastName");
    openapiFields.add("salutation");
    openapiFields.add("ssn");
    openapiFields.add("status");
    openapiFields.add("suffix");
    openapiFields.add("taxSetup");
    openapiFields.add("veteranDescription");
    openapiFields.add("webTime");
    openapiFields.add("workAddress");
    openapiFields.add("workEligibility");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Employee
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Employee.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Employee is not found in the empty JSON string", Employee.openapiRequiredFields.toString()));
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("additionalDirectDeposit") != null && !jsonObj.get("additionalDirectDeposit").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalDirectDeposit` to be an array in the JSON string but got `%s`", jsonObj.get("additionalDirectDeposit").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("additionalRate") != null && !jsonObj.get("additionalRate").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalRate` to be an array in the JSON string but got `%s`", jsonObj.get("additionalRate").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customBooleanFields") != null && !jsonObj.get("customBooleanFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customBooleanFields` to be an array in the JSON string but got `%s`", jsonObj.get("customBooleanFields").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customDateFields") != null && !jsonObj.get("customDateFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customDateFields` to be an array in the JSON string but got `%s`", jsonObj.get("customDateFields").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customDropDownFields") != null && !jsonObj.get("customDropDownFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customDropDownFields` to be an array in the JSON string but got `%s`", jsonObj.get("customDropDownFields").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customNumberFields") != null && !jsonObj.get("customNumberFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customNumberFields` to be an array in the JSON string but got `%s`", jsonObj.get("customNumberFields").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("customTextFields") != null && !jsonObj.get("customTextFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customTextFields` to be an array in the JSON string but got `%s`", jsonObj.get("customTextFields").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("emergencyContacts") != null && !jsonObj.get("emergencyContacts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `emergencyContacts` to be an array in the JSON string but got `%s`", jsonObj.get("emergencyContacts").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("localTax") != null && !jsonObj.get("localTax").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `localTax` to be an array in the JSON string but got `%s`", jsonObj.get("localTax").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Employee.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Employee' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Employee> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Employee.class));

       return (TypeAdapter<T>) new TypeAdapter<Employee>() {
           @Override
           public void write(JsonWriter out, Employee value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Employee read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Employee instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Employee given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Employee
  * @throws IOException if the JSON string is invalid with respect to Employee
  */
  public static Employee fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Employee.class);
  }

 /**
  * Convert an instance of Employee to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

