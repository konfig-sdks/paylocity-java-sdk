/*
 * WebLink API
 * For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview
 *
 * The version of the OpenAPI document: v2
 * Contact: webservices@paylocity.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EmployeeV1BenefitSetup;
import com.konfigthis.client.model.EmployeeV1DepartmentPosition;
import com.konfigthis.client.model.EmployeeV1EmployeeStatus;
import com.konfigthis.client.model.EmployeeV1PrimaryPayRate;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Employee
 */
@ApiModel(description = "Employee")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmployeeV1 {
  public static final String SERIALIZED_NAME_ADDRESS1 = "address1";
  @SerializedName(SERIALIZED_NAME_ADDRESS1)
  private String address1;

  public static final String SERIALIZED_NAME_ADDRESS2 = "address2";
  @SerializedName(SERIALIZED_NAME_ADDRESS2)
  private String address2;

  public static final String SERIALIZED_NAME_BENEFIT_SETUP = "benefitSetup";
  @SerializedName(SERIALIZED_NAME_BENEFIT_SETUP)
  private EmployeeV1BenefitSetup benefitSetup;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "birthDate";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private String birthDate;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COMPANY_NUMBER = "companyNumber";
  @SerializedName(SERIALIZED_NAME_COMPANY_NUMBER)
  private String companyNumber;

  public static final String SERIALIZED_NAME_DEPARTMENT_POSITION = "departmentPosition";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_POSITION)
  private EmployeeV1DepartmentPosition departmentPosition;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_EMPLOYEE_STATUS = "employeeStatus";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_STATUS)
  private EmployeeV1EmployeeStatus employeeStatus;

  public static final String SERIALIZED_NAME_ETHNICITY = "ethnicity";
  @SerializedName(SERIALIZED_NAME_ETHNICITY)
  private String ethnicity;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_HIGHLY_COMPENSATED_EMPLOYEE = "highlyCompensatedEmployee";
  @SerializedName(SERIALIZED_NAME_HIGHLY_COMPENSATED_EMPLOYEE)
  private Boolean highlyCompensatedEmployee;

  public static final String SERIALIZED_NAME_HIRE_DATE = "hireDate";
  @SerializedName(SERIALIZED_NAME_HIRE_DATE)
  private String hireDate;

  public static final String SERIALIZED_NAME_HOME_PHONE = "homePhone";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE)
  private String homePhone;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_MARITAL_STATUS = "maritalStatus";
  @SerializedName(SERIALIZED_NAME_MARITAL_STATUS)
  private String maritalStatus;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private String middleName;

  public static final String SERIALIZED_NAME_NICKNAME = "nickname";
  @SerializedName(SERIALIZED_NAME_NICKNAME)
  private String nickname;

  public static final String SERIALIZED_NAME_OWNER_PERCENT = "ownerPercent";
  @SerializedName(SERIALIZED_NAME_OWNER_PERCENT)
  private Double ownerPercent;

  public static final String SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS = "personalEmailAddress";
  @SerializedName(SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS)
  private String personalEmailAddress;

  public static final String SERIALIZED_NAME_PERSONAL_MOBILE_PHONE = "personalMobilePhone";
  @SerializedName(SERIALIZED_NAME_PERSONAL_MOBILE_PHONE)
  private String personalMobilePhone;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private String position;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_PRIMARY_PAY_RATE = "primaryPayRate";
  @SerializedName(SERIALIZED_NAME_PRIMARY_PAY_RATE)
  private EmployeeV1PrimaryPayRate primaryPayRate;

  public static final String SERIALIZED_NAME_RE_HIRE_DATE = "reHireDate";
  @SerializedName(SERIALIZED_NAME_RE_HIRE_DATE)
  private String reHireDate;

  public static final String SERIALIZED_NAME_SSN = "ssn";
  @SerializedName(SERIALIZED_NAME_SSN)
  private String ssn;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_STATUTORY = "statutory";
  @SerializedName(SERIALIZED_NAME_STATUTORY)
  private Boolean statutory;

  public static final String SERIALIZED_NAME_SUPERVISOR_COMPANY_NUMBER = "supervisorCompanyNumber";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_COMPANY_NUMBER)
  private String supervisorCompanyNumber;

  public static final String SERIALIZED_NAME_SUPERVISOR_EMPLOYEE_ID = "supervisorEmployeeId";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_EMPLOYEE_ID)
  private String supervisorEmployeeId;

  public static final String SERIALIZED_NAME_TAX_FORM = "taxForm";
  @SerializedName(SERIALIZED_NAME_TAX_FORM)
  private String taxForm;

  public static final String SERIALIZED_NAME_TERMINATION_DATE = "terminationDate";
  @SerializedName(SERIALIZED_NAME_TERMINATION_DATE)
  private String terminationDate;

  public static final String SERIALIZED_NAME_TERMINATION_REASON = "terminationReason";
  @SerializedName(SERIALIZED_NAME_TERMINATION_REASON)
  private String terminationReason;

  public static final String SERIALIZED_NAME_WORK_EMAIL_ADDRESS = "workEmailAddress";
  @SerializedName(SERIALIZED_NAME_WORK_EMAIL_ADDRESS)
  private String workEmailAddress;

  public static final String SERIALIZED_NAME_WORK_PHONE = "workPhone";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE)
  private String workPhone;

  public static final String SERIALIZED_NAME_WORK_PHONE_EXT = "workPhoneExt";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE_EXT)
  private String workPhoneExt;

  public EmployeeV1() {
  }

  public EmployeeV1 address1(String address1) {
    
    
    
    
    this.address1 = address1;
    return this;
  }

   /**
   * Employee home 1st address line. &lt;br  /&gt;Max length: 40
   * @return address1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee home 1st address line. <br  />Max length: 40")

  public String getAddress1() {
    return address1;
  }


  public void setAddress1(String address1) {
    
    
    
    this.address1 = address1;
  }


  public EmployeeV1 address2(String address2) {
    
    
    
    
    this.address2 = address2;
    return this;
  }

   /**
   * Employee home 2nd address line. &lt;br  /&gt;Max length: 40
   * @return address2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee home 2nd address line. <br  />Max length: 40")

  public String getAddress2() {
    return address2;
  }


  public void setAddress2(String address2) {
    
    
    
    this.address2 = address2;
  }


  public EmployeeV1 benefitSetup(EmployeeV1BenefitSetup benefitSetup) {
    
    
    
    
    this.benefitSetup = benefitSetup;
    return this;
  }

   /**
   * Get benefitSetup
   * @return benefitSetup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmployeeV1BenefitSetup getBenefitSetup() {
    return benefitSetup;
  }


  public void setBenefitSetup(EmployeeV1BenefitSetup benefitSetup) {
    
    
    
    this.benefitSetup = benefitSetup;
  }


  public EmployeeV1 birthDate(String birthDate) {
    
    
    
    
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Employee birthdate. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
   * @return birthDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee birthdate. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.")

  public String getBirthDate() {
    return birthDate;
  }


  public void setBirthDate(String birthDate) {
    
    
    
    this.birthDate = birthDate;
  }


  public EmployeeV1 city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * Employee home city. &lt;br  /&gt;Max length: 40
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee home city. <br  />Max length: 40")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public EmployeeV1 companyNumber(String companyNumber) {
    
    
    
    
    this.companyNumber = companyNumber;
    return this;
  }

   /**
   * Paylocity assigned company number. &lt;br  /&gt; Max length: 9
   * @return companyNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Paylocity assigned company number. <br  /> Max length: 9")

  public String getCompanyNumber() {
    return companyNumber;
  }


  public void setCompanyNumber(String companyNumber) {
    
    
    
    this.companyNumber = companyNumber;
  }


  public EmployeeV1 departmentPosition(EmployeeV1DepartmentPosition departmentPosition) {
    
    
    
    
    this.departmentPosition = departmentPosition;
    return this;
  }

   /**
   * Get departmentPosition
   * @return departmentPosition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmployeeV1DepartmentPosition getDepartmentPosition() {
    return departmentPosition;
  }


  public void setDepartmentPosition(EmployeeV1DepartmentPosition departmentPosition) {
    
    
    
    this.departmentPosition = departmentPosition;
  }


  public EmployeeV1 employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Leave blank to have Paylocity Payroll/HR solution automatically assign the next available employee ID.&lt;br  /&gt; Max length: 10
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Leave blank to have Paylocity Payroll/HR solution automatically assign the next available employee ID.<br  /> Max length: 10")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public EmployeeV1 employeeStatus(EmployeeV1EmployeeStatus employeeStatus) {
    
    
    
    
    this.employeeStatus = employeeStatus;
    return this;
  }

   /**
   * Get employeeStatus
   * @return employeeStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmployeeV1EmployeeStatus getEmployeeStatus() {
    return employeeStatus;
  }


  public void setEmployeeStatus(EmployeeV1EmployeeStatus employeeStatus) {
    
    
    
    this.employeeStatus = employeeStatus;
  }


  public EmployeeV1 ethnicity(String ethnicity) {
    
    
    
    
    this.ethnicity = ethnicity;
    return this;
  }

   /**
   * Employee ethnicity.&lt;br  /&gt; Max length: 10
   * @return ethnicity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee ethnicity.<br  /> Max length: 10")

  public String getEthnicity() {
    return ethnicity;
  }


  public void setEthnicity(String ethnicity) {
    
    
    
    this.ethnicity = ethnicity;
  }


  public EmployeeV1 firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Employee first name. &lt;br  /&gt;Max length: 40
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee first name. <br  />Max length: 40")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public EmployeeV1 gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Employee gender. Common values *M* (Male), *F* (Female). &lt;br  /&gt;Max length: 1
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee gender. Common values *M* (Male), *F* (Female). <br  />Max length: 1")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public EmployeeV1 highlyCompensatedEmployee(Boolean highlyCompensatedEmployee) {
    
    
    
    
    this.highlyCompensatedEmployee = highlyCompensatedEmployee;
    return this;
  }

   /**
   * Indicates if employee meets the highly compensated employee criteria.
   * @return highlyCompensatedEmployee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee meets the highly compensated employee criteria.")

  public Boolean getHighlyCompensatedEmployee() {
    return highlyCompensatedEmployee;
  }


  public void setHighlyCompensatedEmployee(Boolean highlyCompensatedEmployee) {
    
    
    
    this.highlyCompensatedEmployee = highlyCompensatedEmployee;
  }


  public EmployeeV1 hireDate(String hireDate) {
    
    
    
    
    this.hireDate = hireDate;
    return this;
  }

   /**
   * Employee hired date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
   * @return hireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee hired date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.")

  public String getHireDate() {
    return hireDate;
  }


  public void setHireDate(String hireDate) {
    
    
    
    this.hireDate = hireDate;
  }


  public EmployeeV1 homePhone(String homePhone) {
    
    
    
    
    this.homePhone = homePhone;
    return this;
  }

   /**
   * Employee home phone number.  &lt;br  /&gt;Max length: 12
   * @return homePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee home phone number.  <br  />Max length: 12")

  public String getHomePhone() {
    return homePhone;
  }


  public void setHomePhone(String homePhone) {
    
    
    
    this.homePhone = homePhone;
  }


  public EmployeeV1 lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Employee last name. &lt;br  /&gt;Max length: 40
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee last name. <br  />Max length: 40")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public EmployeeV1 maritalStatus(String maritalStatus) {
    
    
    
    
    this.maritalStatus = maritalStatus;
    return this;
  }

   /**
   * Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. &lt;br  /&gt;Max length: 10
   * @return maritalStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. <br  />Max length: 10")

  public String getMaritalStatus() {
    return maritalStatus;
  }


  public void setMaritalStatus(String maritalStatus) {
    
    
    
    this.maritalStatus = maritalStatus;
  }


  public EmployeeV1 middleName(String middleName) {
    
    
    
    
    this.middleName = middleName;
    return this;
  }

   /**
   * Employee middle name.&lt;br  /&gt; Max length: 20
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee middle name.<br  /> Max length: 20")

  public String getMiddleName() {
    return middleName;
  }


  public void setMiddleName(String middleName) {
    
    
    
    this.middleName = middleName;
  }


  public EmployeeV1 nickname(String nickname) {
    
    
    
    
    this.nickname = nickname;
    return this;
  }

   /**
   * Employee preferred display name. &lt;br  /&gt; Max length: 20
   * @return nickname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee preferred display name. <br  /> Max length: 20")

  public String getNickname() {
    return nickname;
  }


  public void setNickname(String nickname) {
    
    
    
    this.nickname = nickname;
  }


  public EmployeeV1 ownerPercent(Double ownerPercent) {
    
    
    
    
    this.ownerPercent = ownerPercent;
    return this;
  }

  public EmployeeV1 ownerPercent(Integer ownerPercent) {
    
    
    
    
    this.ownerPercent = ownerPercent.doubleValue();
    return this;
  }

   /**
   * Percentage of employee&#39;s ownership in the company, entered as a whole number . &lt;br  /&gt; Decimal (12,2)
   * @return ownerPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Percentage of employee's ownership in the company, entered as a whole number . <br  /> Decimal (12,2)")

  public Double getOwnerPercent() {
    return ownerPercent;
  }


  public void setOwnerPercent(Double ownerPercent) {
    
    
    
    this.ownerPercent = ownerPercent;
  }


  public EmployeeV1 personalEmailAddress(String personalEmailAddress) {
    
    
    
    
    this.personalEmailAddress = personalEmailAddress;
    return this;
  }

   /**
   * Employee personal email address. &lt;br  /&gt;Max length: 50
   * @return personalEmailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee personal email address. <br  />Max length: 50")

  public String getPersonalEmailAddress() {
    return personalEmailAddress;
  }


  public void setPersonalEmailAddress(String personalEmailAddress) {
    
    
    
    this.personalEmailAddress = personalEmailAddress;
  }


  public EmployeeV1 personalMobilePhone(String personalMobilePhone) {
    
    
    
    
    this.personalMobilePhone = personalMobilePhone;
    return this;
  }

   /**
   * Employee personal mobile phone number. &lt;br  /&gt;Max length: 12
   * @return personalMobilePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee personal mobile phone number. <br  />Max length: 12")

  public String getPersonalMobilePhone() {
    return personalMobilePhone;
  }


  public void setPersonalMobilePhone(String personalMobilePhone) {
    
    
    
    this.personalMobilePhone = personalMobilePhone;
  }


  public EmployeeV1 position(String position) {
    
    
    
    
    this.position = position;
    return this;
  }

   /**
   * Employee position code. Must match Company setup.&lt;br  /&gt;Max length: 20 
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee position code. Must match Company setup.<br  />Max length: 20 ")

  public String getPosition() {
    return position;
  }


  public void setPosition(String position) {
    
    
    
    this.position = position;
  }


  public EmployeeV1 postalCode(String postalCode) {
    
    
    
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Employee work zip code.&lt;br  /&gt; Max length: 10
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work zip code.<br  /> Max length: 10")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    
    
    
    this.postalCode = postalCode;
  }


  public EmployeeV1 primaryPayRate(EmployeeV1PrimaryPayRate primaryPayRate) {
    
    
    
    
    this.primaryPayRate = primaryPayRate;
    return this;
  }

   /**
   * Get primaryPayRate
   * @return primaryPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmployeeV1PrimaryPayRate getPrimaryPayRate() {
    return primaryPayRate;
  }


  public void setPrimaryPayRate(EmployeeV1PrimaryPayRate primaryPayRate) {
    
    
    
    this.primaryPayRate = primaryPayRate;
  }


  public EmployeeV1 reHireDate(String reHireDate) {
    
    
    
    
    this.reHireDate = reHireDate;
    return this;
  }

   /**
   * Rehire date if employee is rehired. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
   * @return reHireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Rehire date if employee is rehired. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.")

  public String getReHireDate() {
    return reHireDate;
  }


  public void setReHireDate(String reHireDate) {
    
    
    
    this.reHireDate = reHireDate;
  }


  public EmployeeV1 ssn(String ssn) {
    
    
    
    
    this.ssn = ssn;
    return this;
  }

   /**
   * Employee social security number. Leave it blank if valid social security number not available. &lt;br  /&gt;Max length: 11
   * @return ssn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee social security number. Leave it blank if valid social security number not available. <br  />Max length: 11")

  public String getSsn() {
    return ssn;
  }


  public void setSsn(String ssn) {
    
    
    
    this.ssn = ssn;
  }


  public EmployeeV1 state(String state) {
    
    
    
    
    this.state = state;
    return this;
  }

   /**
   * Employee home state. &lt;br  /&gt;Max length: 2
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee home state. <br  />Max length: 2")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    
    
    
    this.state = state;
  }


  public EmployeeV1 statutory(Boolean statutory) {
    
    
    
    
    this.statutory = statutory;
    return this;
  }

   /**
   * Indicates if employee is statutory.
   * @return statutory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is statutory.")

  public Boolean getStatutory() {
    return statutory;
  }


  public void setStatutory(Boolean statutory) {
    
    
    
    this.statutory = statutory;
  }


  public EmployeeV1 supervisorCompanyNumber(String supervisorCompanyNumber) {
    
    
    
    
    this.supervisorCompanyNumber = supervisorCompanyNumber;
    return this;
  }

   /**
   * Supervisor&#39;s company number. Defaults to employee company number.&lt;br  /&gt;Max length: 9
   * @return supervisorCompanyNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Supervisor's company number. Defaults to employee company number.<br  />Max length: 9")

  public String getSupervisorCompanyNumber() {
    return supervisorCompanyNumber;
  }


  public void setSupervisorCompanyNumber(String supervisorCompanyNumber) {
    
    
    
    this.supervisorCompanyNumber = supervisorCompanyNumber;
  }


  public EmployeeV1 supervisorEmployeeId(String supervisorEmployeeId) {
    
    
    
    
    this.supervisorEmployeeId = supervisorEmployeeId;
    return this;
  }

   /**
   * EmployeeId of the supervisor. &lt;br  /&gt;Max length: 10
   * @return supervisorEmployeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "EmployeeId of the supervisor. <br  />Max length: 10")

  public String getSupervisorEmployeeId() {
    return supervisorEmployeeId;
  }


  public void setSupervisorEmployeeId(String supervisorEmployeeId) {
    
    
    
    this.supervisorEmployeeId = supervisorEmployeeId;
  }


  public EmployeeV1 taxForm(String taxForm) {
    
    
    
    
    this.taxForm = taxForm;
    return this;
  }

   /**
   * Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. &lt;br  /&gt;Max length: 15
   * @return taxForm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15")

  public String getTaxForm() {
    return taxForm;
  }


  public void setTaxForm(String taxForm) {
    
    
    
    this.taxForm = taxForm;
  }


  public EmployeeV1 terminationDate(String terminationDate) {
    
    
    
    
    this.terminationDate = terminationDate;
    return this;
  }

   /**
   * Date of emplyee termination. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
   * @return terminationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of emplyee termination. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.")

  public String getTerminationDate() {
    return terminationDate;
  }


  public void setTerminationDate(String terminationDate) {
    
    
    
    this.terminationDate = terminationDate;
  }


  public EmployeeV1 terminationReason(String terminationReason) {
    
    
    
    
    this.terminationReason = terminationReason;
    return this;
  }

   /**
   * Employee termination reason. Must match Company setup for employee status.&lt;br  /&gt;Max length: 15
   * @return terminationReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee termination reason. Must match Company setup for employee status.<br  />Max length: 15")

  public String getTerminationReason() {
    return terminationReason;
  }


  public void setTerminationReason(String terminationReason) {
    
    
    
    this.terminationReason = terminationReason;
  }


  public EmployeeV1 workEmailAddress(String workEmailAddress) {
    
    
    
    
    this.workEmailAddress = workEmailAddress;
    return this;
  }

   /**
   * Employee work email. &lt;br  /&gt;Max length: 50
   * @return workEmailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work email. <br  />Max length: 50")

  public String getWorkEmailAddress() {
    return workEmailAddress;
  }


  public void setWorkEmailAddress(String workEmailAddress) {
    
    
    
    this.workEmailAddress = workEmailAddress;
  }


  public EmployeeV1 workPhone(String workPhone) {
    
    
    
    
    this.workPhone = workPhone;
    return this;
  }

   /**
   * Employee work phone number.&lt;br  /&gt; Max length: 12
   * @return workPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work phone number.<br  /> Max length: 12")

  public String getWorkPhone() {
    return workPhone;
  }


  public void setWorkPhone(String workPhone) {
    
    
    
    this.workPhone = workPhone;
  }


  public EmployeeV1 workPhoneExt(String workPhoneExt) {
    
    
    
    
    this.workPhoneExt = workPhoneExt;
    return this;
  }

   /**
   * Employee work phone extension number.&lt;br  /&gt; Max length: 10
   * @return workPhoneExt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work phone extension number.<br  /> Max length: 10")

  public String getWorkPhoneExt() {
    return workPhoneExt;
  }


  public void setWorkPhoneExt(String workPhoneExt) {
    
    
    
    this.workPhoneExt = workPhoneExt;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmployeeV1 instance itself
   */
  public EmployeeV1 putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeV1 employeeV1 = (EmployeeV1) o;
    return Objects.equals(this.address1, employeeV1.address1) &&
        Objects.equals(this.address2, employeeV1.address2) &&
        Objects.equals(this.benefitSetup, employeeV1.benefitSetup) &&
        Objects.equals(this.birthDate, employeeV1.birthDate) &&
        Objects.equals(this.city, employeeV1.city) &&
        Objects.equals(this.companyNumber, employeeV1.companyNumber) &&
        Objects.equals(this.departmentPosition, employeeV1.departmentPosition) &&
        Objects.equals(this.employeeId, employeeV1.employeeId) &&
        Objects.equals(this.employeeStatus, employeeV1.employeeStatus) &&
        Objects.equals(this.ethnicity, employeeV1.ethnicity) &&
        Objects.equals(this.firstName, employeeV1.firstName) &&
        Objects.equals(this.gender, employeeV1.gender) &&
        Objects.equals(this.highlyCompensatedEmployee, employeeV1.highlyCompensatedEmployee) &&
        Objects.equals(this.hireDate, employeeV1.hireDate) &&
        Objects.equals(this.homePhone, employeeV1.homePhone) &&
        Objects.equals(this.lastName, employeeV1.lastName) &&
        Objects.equals(this.maritalStatus, employeeV1.maritalStatus) &&
        Objects.equals(this.middleName, employeeV1.middleName) &&
        Objects.equals(this.nickname, employeeV1.nickname) &&
        Objects.equals(this.ownerPercent, employeeV1.ownerPercent) &&
        Objects.equals(this.personalEmailAddress, employeeV1.personalEmailAddress) &&
        Objects.equals(this.personalMobilePhone, employeeV1.personalMobilePhone) &&
        Objects.equals(this.position, employeeV1.position) &&
        Objects.equals(this.postalCode, employeeV1.postalCode) &&
        Objects.equals(this.primaryPayRate, employeeV1.primaryPayRate) &&
        Objects.equals(this.reHireDate, employeeV1.reHireDate) &&
        Objects.equals(this.ssn, employeeV1.ssn) &&
        Objects.equals(this.state, employeeV1.state) &&
        Objects.equals(this.statutory, employeeV1.statutory) &&
        Objects.equals(this.supervisorCompanyNumber, employeeV1.supervisorCompanyNumber) &&
        Objects.equals(this.supervisorEmployeeId, employeeV1.supervisorEmployeeId) &&
        Objects.equals(this.taxForm, employeeV1.taxForm) &&
        Objects.equals(this.terminationDate, employeeV1.terminationDate) &&
        Objects.equals(this.terminationReason, employeeV1.terminationReason) &&
        Objects.equals(this.workEmailAddress, employeeV1.workEmailAddress) &&
        Objects.equals(this.workPhone, employeeV1.workPhone) &&
        Objects.equals(this.workPhoneExt, employeeV1.workPhoneExt)&&
        Objects.equals(this.additionalProperties, employeeV1.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address1, address2, benefitSetup, birthDate, city, companyNumber, departmentPosition, employeeId, employeeStatus, ethnicity, firstName, gender, highlyCompensatedEmployee, hireDate, homePhone, lastName, maritalStatus, middleName, nickname, ownerPercent, personalEmailAddress, personalMobilePhone, position, postalCode, primaryPayRate, reHireDate, ssn, state, statutory, supervisorCompanyNumber, supervisorEmployeeId, taxForm, terminationDate, terminationReason, workEmailAddress, workPhone, workPhoneExt, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeV1 {\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    benefitSetup: ").append(toIndentedString(benefitSetup)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    companyNumber: ").append(toIndentedString(companyNumber)).append("\n");
    sb.append("    departmentPosition: ").append(toIndentedString(departmentPosition)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    employeeStatus: ").append(toIndentedString(employeeStatus)).append("\n");
    sb.append("    ethnicity: ").append(toIndentedString(ethnicity)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    highlyCompensatedEmployee: ").append(toIndentedString(highlyCompensatedEmployee)).append("\n");
    sb.append("    hireDate: ").append(toIndentedString(hireDate)).append("\n");
    sb.append("    homePhone: ").append(toIndentedString(homePhone)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    maritalStatus: ").append(toIndentedString(maritalStatus)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    ownerPercent: ").append(toIndentedString(ownerPercent)).append("\n");
    sb.append("    personalEmailAddress: ").append(toIndentedString(personalEmailAddress)).append("\n");
    sb.append("    personalMobilePhone: ").append(toIndentedString(personalMobilePhone)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    primaryPayRate: ").append(toIndentedString(primaryPayRate)).append("\n");
    sb.append("    reHireDate: ").append(toIndentedString(reHireDate)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    statutory: ").append(toIndentedString(statutory)).append("\n");
    sb.append("    supervisorCompanyNumber: ").append(toIndentedString(supervisorCompanyNumber)).append("\n");
    sb.append("    supervisorEmployeeId: ").append(toIndentedString(supervisorEmployeeId)).append("\n");
    sb.append("    taxForm: ").append(toIndentedString(taxForm)).append("\n");
    sb.append("    terminationDate: ").append(toIndentedString(terminationDate)).append("\n");
    sb.append("    terminationReason: ").append(toIndentedString(terminationReason)).append("\n");
    sb.append("    workEmailAddress: ").append(toIndentedString(workEmailAddress)).append("\n");
    sb.append("    workPhone: ").append(toIndentedString(workPhone)).append("\n");
    sb.append("    workPhoneExt: ").append(toIndentedString(workPhoneExt)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address1");
    openapiFields.add("address2");
    openapiFields.add("benefitSetup");
    openapiFields.add("birthDate");
    openapiFields.add("city");
    openapiFields.add("companyNumber");
    openapiFields.add("departmentPosition");
    openapiFields.add("employeeId");
    openapiFields.add("employeeStatus");
    openapiFields.add("ethnicity");
    openapiFields.add("firstName");
    openapiFields.add("gender");
    openapiFields.add("highlyCompensatedEmployee");
    openapiFields.add("hireDate");
    openapiFields.add("homePhone");
    openapiFields.add("lastName");
    openapiFields.add("maritalStatus");
    openapiFields.add("middleName");
    openapiFields.add("nickname");
    openapiFields.add("ownerPercent");
    openapiFields.add("personalEmailAddress");
    openapiFields.add("personalMobilePhone");
    openapiFields.add("position");
    openapiFields.add("postalCode");
    openapiFields.add("primaryPayRate");
    openapiFields.add("reHireDate");
    openapiFields.add("ssn");
    openapiFields.add("state");
    openapiFields.add("statutory");
    openapiFields.add("supervisorCompanyNumber");
    openapiFields.add("supervisorEmployeeId");
    openapiFields.add("taxForm");
    openapiFields.add("terminationDate");
    openapiFields.add("terminationReason");
    openapiFields.add("workEmailAddress");
    openapiFields.add("workPhone");
    openapiFields.add("workPhoneExt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmployeeV1
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmployeeV1.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmployeeV1 is not found in the empty JSON string", EmployeeV1.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("address1") != null && !jsonObj.get("address1").isJsonNull()) && !jsonObj.get("address1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address1").toString()));
      }
      if ((jsonObj.get("address2") != null && !jsonObj.get("address2").isJsonNull()) && !jsonObj.get("address2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address2").toString()));
      }
      // validate the optional field `benefitSetup`
      if (jsonObj.get("benefitSetup") != null && !jsonObj.get("benefitSetup").isJsonNull()) {
        EmployeeV1BenefitSetup.validateJsonObject(jsonObj.getAsJsonObject("benefitSetup"));
      }
      if ((jsonObj.get("birthDate") != null && !jsonObj.get("birthDate").isJsonNull()) && !jsonObj.get("birthDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `birthDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("birthDate").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("companyNumber") != null && !jsonObj.get("companyNumber").isJsonNull()) && !jsonObj.get("companyNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyNumber").toString()));
      }
      // validate the optional field `departmentPosition`
      if (jsonObj.get("departmentPosition") != null && !jsonObj.get("departmentPosition").isJsonNull()) {
        EmployeeV1DepartmentPosition.validateJsonObject(jsonObj.getAsJsonObject("departmentPosition"));
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      // validate the optional field `employeeStatus`
      if (jsonObj.get("employeeStatus") != null && !jsonObj.get("employeeStatus").isJsonNull()) {
        EmployeeV1EmployeeStatus.validateJsonObject(jsonObj.getAsJsonObject("employeeStatus"));
      }
      if ((jsonObj.get("ethnicity") != null && !jsonObj.get("ethnicity").isJsonNull()) && !jsonObj.get("ethnicity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ethnicity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ethnicity").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("hireDate") != null && !jsonObj.get("hireDate").isJsonNull()) && !jsonObj.get("hireDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hireDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hireDate").toString()));
      }
      if ((jsonObj.get("homePhone") != null && !jsonObj.get("homePhone").isJsonNull()) && !jsonObj.get("homePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homePhone").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("maritalStatus") != null && !jsonObj.get("maritalStatus").isJsonNull()) && !jsonObj.get("maritalStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maritalStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maritalStatus").toString()));
      }
      if ((jsonObj.get("middleName") != null && !jsonObj.get("middleName").isJsonNull()) && !jsonObj.get("middleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middleName").toString()));
      }
      if ((jsonObj.get("nickname") != null && !jsonObj.get("nickname").isJsonNull()) && !jsonObj.get("nickname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nickname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nickname").toString()));
      }
      if ((jsonObj.get("personalEmailAddress") != null && !jsonObj.get("personalEmailAddress").isJsonNull()) && !jsonObj.get("personalEmailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalEmailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalEmailAddress").toString()));
      }
      if ((jsonObj.get("personalMobilePhone") != null && !jsonObj.get("personalMobilePhone").isJsonNull()) && !jsonObj.get("personalMobilePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalMobilePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalMobilePhone").toString()));
      }
      if ((jsonObj.get("position") != null && !jsonObj.get("position").isJsonNull()) && !jsonObj.get("position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      // validate the optional field `primaryPayRate`
      if (jsonObj.get("primaryPayRate") != null && !jsonObj.get("primaryPayRate").isJsonNull()) {
        EmployeeV1PrimaryPayRate.validateJsonObject(jsonObj.getAsJsonObject("primaryPayRate"));
      }
      if ((jsonObj.get("reHireDate") != null && !jsonObj.get("reHireDate").isJsonNull()) && !jsonObj.get("reHireDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reHireDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reHireDate").toString()));
      }
      if ((jsonObj.get("ssn") != null && !jsonObj.get("ssn").isJsonNull()) && !jsonObj.get("ssn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssn").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("supervisorCompanyNumber") != null && !jsonObj.get("supervisorCompanyNumber").isJsonNull()) && !jsonObj.get("supervisorCompanyNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorCompanyNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorCompanyNumber").toString()));
      }
      if ((jsonObj.get("supervisorEmployeeId") != null && !jsonObj.get("supervisorEmployeeId").isJsonNull()) && !jsonObj.get("supervisorEmployeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorEmployeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorEmployeeId").toString()));
      }
      if ((jsonObj.get("taxForm") != null && !jsonObj.get("taxForm").isJsonNull()) && !jsonObj.get("taxForm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxForm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxForm").toString()));
      }
      if ((jsonObj.get("terminationDate") != null && !jsonObj.get("terminationDate").isJsonNull()) && !jsonObj.get("terminationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `terminationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("terminationDate").toString()));
      }
      if ((jsonObj.get("terminationReason") != null && !jsonObj.get("terminationReason").isJsonNull()) && !jsonObj.get("terminationReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `terminationReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("terminationReason").toString()));
      }
      if ((jsonObj.get("workEmailAddress") != null && !jsonObj.get("workEmailAddress").isJsonNull()) && !jsonObj.get("workEmailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workEmailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workEmailAddress").toString()));
      }
      if ((jsonObj.get("workPhone") != null && !jsonObj.get("workPhone").isJsonNull()) && !jsonObj.get("workPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhone").toString()));
      }
      if ((jsonObj.get("workPhoneExt") != null && !jsonObj.get("workPhoneExt").isJsonNull()) && !jsonObj.get("workPhoneExt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhoneExt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhoneExt").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmployeeV1.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmployeeV1' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmployeeV1> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmployeeV1.class));

       return (TypeAdapter<T>) new TypeAdapter<EmployeeV1>() {
           @Override
           public void write(JsonWriter out, EmployeeV1 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmployeeV1 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmployeeV1 instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmployeeV1 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmployeeV1
  * @throws IOException if the JSON string is invalid with respect to EmployeeV1
  */
  public static EmployeeV1 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmployeeV1.class);
  }

 /**
  * Convert an instance of EmployeeV1 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

