/*
 * WebLink API
 * For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview
 *
 * The version of the OpenAPI document: v2
 * Contact: webservices@paylocity.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.NewAdditionalDirectDeposit;
import com.konfigthis.client.model.NewBenefitClassSetup;
import com.konfigthis.client.model.NewFedTax;
import com.konfigthis.client.model.NewLocalTax;
import com.konfigthis.client.model.NewMainDirectDeposit;
import com.konfigthis.client.model.NewStateTax;
import com.konfigthis.client.model.NewWorkEligibility;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * NewEmployee
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class NewEmployee {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_ADDRESS1 = "address1";
  @SerializedName(SERIALIZED_NAME_ADDRESS1)
  private String address1;

  public static final String SERIALIZED_NAME_ADDRESS2 = "address2";
  @SerializedName(SERIALIZED_NAME_ADDRESS2)
  private String address2;

  public static final String SERIALIZED_NAME_ADJ_SENIORITY_DATE = "adjSeniorityDate";
  @SerializedName(SERIALIZED_NAME_ADJ_SENIORITY_DATE)
  private LocalDate adjSeniorityDate;

  public static final String SERIALIZED_NAME_ANNUAL_SALARY = "annualSalary";
  @SerializedName(SERIALIZED_NAME_ANNUAL_SALARY)
  private Double annualSalary;

  public static final String SERIALIZED_NAME_AUTO_GENERATE_EMPLOYEE_ID = "autoGenerateEmployeeId";
  @SerializedName(SERIALIZED_NAME_AUTO_GENERATE_EMPLOYEE_ID)
  private Boolean autoGenerateEmployeeId;

  public static final String SERIALIZED_NAME_AUTO_PAY = "autoPay";
  @SerializedName(SERIALIZED_NAME_AUTO_PAY)
  private Boolean autoPay;

  public static final String SERIALIZED_NAME_AUTO_PAY_TYPE = "autoPayType";
  @SerializedName(SERIALIZED_NAME_AUTO_PAY_TYPE)
  private String autoPayType;

  public static final String SERIALIZED_NAME_BASE_RATE = "baseRate";
  @SerializedName(SERIALIZED_NAME_BASE_RATE)
  private Double baseRate;

  public static final String SERIALIZED_NAME_BIRTH_DATE = "birthDate";
  @SerializedName(SERIALIZED_NAME_BIRTH_DATE)
  private LocalDate birthDate;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_CLOCK_BADGE = "clockBadge";
  @SerializedName(SERIALIZED_NAME_CLOCK_BADGE)
  private String clockBadge;

  public static final String SERIALIZED_NAME_COMPANY_NUMBER = "companyNumber";
  @SerializedName(SERIALIZED_NAME_COMPANY_NUMBER)
  private String companyNumber;

  public static final String SERIALIZED_NAME_COST_CENTER1 = "costCenter1";
  @SerializedName(SERIALIZED_NAME_COST_CENTER1)
  private String costCenter1;

  public static final String SERIALIZED_NAME_COST_CENTER2 = "costCenter2";
  @SerializedName(SERIALIZED_NAME_COST_CENTER2)
  private String costCenter2;

  public static final String SERIALIZED_NAME_COST_CENTER3 = "costCenter3";
  @SerializedName(SERIALIZED_NAME_COST_CENTER3)
  private String costCenter3;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_COUNTY = "county";
  @SerializedName(SERIALIZED_NAME_COUNTY)
  private String county;

  public static final String SERIALIZED_NAME_DEFAULT_HOURS = "defaultHours";
  @SerializedName(SERIALIZED_NAME_DEFAULT_HOURS)
  private Double defaultHours;

  public static final String SERIALIZED_NAME_DISABILITY = "disability";
  @SerializedName(SERIALIZED_NAME_DISABILITY)
  private Boolean disability;

  public static final String SERIALIZED_NAME_ELIGIBLE_FOR_REHIRE = "eligibleForRehire";
  @SerializedName(SERIALIZED_NAME_ELIGIBLE_FOR_REHIRE)
  private Boolean eligibleForRehire;

  public static final String SERIALIZED_NAME_EMPLOYEE943 = "employee943";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE943)
  private Boolean employee943;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_EMPLOYEE_STATUS = "employeeStatus";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_STATUS)
  private String employeeStatus;

  public static final String SERIALIZED_NAME_EMPLOYMENT_TYPE = "employmentType";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_TYPE)
  private String employmentType;

  public static final String SERIALIZED_NAME_EQUAL_EMPLOYMENT_OPPORTUNITY_CLASS = "equalEmploymentOpportunityClass";
  @SerializedName(SERIALIZED_NAME_EQUAL_EMPLOYMENT_OPPORTUNITY_CLASS)
  private String equalEmploymentOpportunityClass;

  public static final String SERIALIZED_NAME_ETHNICITY = "ethnicity";
  @SerializedName(SERIALIZED_NAME_ETHNICITY)
  private String ethnicity;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_FITW_EXEMPT = "fitwExempt";
  @SerializedName(SERIALIZED_NAME_FITW_EXEMPT)
  private Boolean fitwExempt;

  public static final String SERIALIZED_NAME_FITW_EXEMPT_NOTES = "fitwExemptNotes";
  @SerializedName(SERIALIZED_NAME_FITW_EXEMPT_NOTES)
  private String fitwExemptNotes;

  public static final String SERIALIZED_NAME_FITW_EXEMPT_REASON = "fitwExemptReason";
  @SerializedName(SERIALIZED_NAME_FITW_EXEMPT_REASON)
  private String fitwExemptReason;

  public static final String SERIALIZED_NAME_FUTA_EXEMPT = "futaExempt";
  @SerializedName(SERIALIZED_NAME_FUTA_EXEMPT)
  private Boolean futaExempt;

  public static final String SERIALIZED_NAME_FUTA_EXEMPT_NOTES = "futaExemptNotes";
  @SerializedName(SERIALIZED_NAME_FUTA_EXEMPT_NOTES)
  private String futaExemptNotes;

  public static final String SERIALIZED_NAME_FUTA_EXEMPT_REASON = "futaExemptReason";
  @SerializedName(SERIALIZED_NAME_FUTA_EXEMPT_REASON)
  private String futaExemptReason;

  public static final String SERIALIZED_NAME_HIRE_DATE = "hireDate";
  @SerializedName(SERIALIZED_NAME_HIRE_DATE)
  private LocalDate hireDate;

  public static final String SERIALIZED_NAME_HOME_PHONE = "homePhone";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE)
  private String homePhone;

  public static final String SERIALIZED_NAME_IS_SUPERVISOR_REVIEWER = "isSupervisorReviewer";
  @SerializedName(SERIALIZED_NAME_IS_SUPERVISOR_REVIEWER)
  private Boolean isSupervisorReviewer;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_MARITAL_STATUS = "maritalStatus";
  @SerializedName(SERIALIZED_NAME_MARITAL_STATUS)
  private String maritalStatus;

  public static final String SERIALIZED_NAME_MED_EXEMPT = "medExempt";
  @SerializedName(SERIALIZED_NAME_MED_EXEMPT)
  private Boolean medExempt;

  public static final String SERIALIZED_NAME_MED_EXEMPT_NOTES = "medExemptNotes";
  @SerializedName(SERIALIZED_NAME_MED_EXEMPT_NOTES)
  private String medExemptNotes;

  public static final String SERIALIZED_NAME_MED_EXEMPT_REASON = "medExemptReason";
  @SerializedName(SERIALIZED_NAME_MED_EXEMPT_REASON)
  private String medExemptReason;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private String middleName;

  public static final String SERIALIZED_NAME_MINIMUM_WAGE_EXEMPT = "minimumWageExempt";
  @SerializedName(SERIALIZED_NAME_MINIMUM_WAGE_EXEMPT)
  private Boolean minimumWageExempt;

  public static final String SERIALIZED_NAME_NICKNAME = "nickname";
  @SerializedName(SERIALIZED_NAME_NICKNAME)
  private String nickname;

  public static final String SERIALIZED_NAME_OVERRIDE_TITLE = "overrideTitle";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_TITLE)
  private Boolean overrideTitle;

  public static final String SERIALIZED_NAME_OVERTIME_EXEMPT = "overtimeExempt";
  @SerializedName(SERIALIZED_NAME_OVERTIME_EXEMPT)
  private Boolean overtimeExempt;

  public static final String SERIALIZED_NAME_PAY_FREQUENCY = "payFrequency";
  @SerializedName(SERIALIZED_NAME_PAY_FREQUENCY)
  private String payFrequency;

  public static final String SERIALIZED_NAME_PAY_GRADE = "payGrade";
  @SerializedName(SERIALIZED_NAME_PAY_GRADE)
  private String payGrade;

  public static final String SERIALIZED_NAME_PAY_GROUP = "payGroup";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP)
  private String payGroup;

  public static final String SERIALIZED_NAME_PAY_RATE_NOTE = "payRateNote";
  @SerializedName(SERIALIZED_NAME_PAY_RATE_NOTE)
  private String payRateNote;

  public static final String SERIALIZED_NAME_PENSION = "pension";
  @SerializedName(SERIALIZED_NAME_PENSION)
  private Boolean pension;

  public static final String SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS = "personalEmailAddress";
  @SerializedName(SERIALIZED_NAME_PERSONAL_EMAIL_ADDRESS)
  private String personalEmailAddress;

  public static final String SERIALIZED_NAME_PERSONAL_MOBILE_PHONE = "personalMobilePhone";
  @SerializedName(SERIALIZED_NAME_PERSONAL_MOBILE_PHONE)
  private String personalMobilePhone;

  public static final String SERIALIZED_NAME_POSITION_CODE = "positionCode";
  @SerializedName(SERIALIZED_NAME_POSITION_CODE)
  private String positionCode;

  public static final String SERIALIZED_NAME_PRIMARY_PAY_RATE_EFFECTIVE_DATE = "primaryPayRateEffectiveDate";
  @SerializedName(SERIALIZED_NAME_PRIMARY_PAY_RATE_EFFECTIVE_DATE)
  private LocalDate primaryPayRateEffectiveDate;

  public static final String SERIALIZED_NAME_PRIOR_LAST_NAME = "priorLastName";
  @SerializedName(SERIALIZED_NAME_PRIOR_LAST_NAME)
  private String priorLastName;

  public static final String SERIALIZED_NAME_RATE_CODE = "rateCode";
  @SerializedName(SERIALIZED_NAME_RATE_CODE)
  private String rateCode;

  public static final String SERIALIZED_NAME_RATE_PER = "ratePer";
  @SerializedName(SERIALIZED_NAME_RATE_PER)
  private String ratePer;

  public static final String SERIALIZED_NAME_REVIEWER_CO = "reviewerCo";
  @SerializedName(SERIALIZED_NAME_REVIEWER_CO)
  private String reviewerCo;

  public static final String SERIALIZED_NAME_REVIEWER_ID = "reviewerId";
  @SerializedName(SERIALIZED_NAME_REVIEWER_ID)
  private String reviewerId;

  public static final String SERIALIZED_NAME_SALARY = "salary";
  @SerializedName(SERIALIZED_NAME_SALARY)
  private Double salary;

  public static final String SERIALIZED_NAME_SALUTATION = "salutation";
  @SerializedName(SERIALIZED_NAME_SALUTATION)
  private String salutation;

  public static final String SERIALIZED_NAME_SEX = "sex";
  @SerializedName(SERIALIZED_NAME_SEX)
  private String sex;

  public static final String SERIALIZED_NAME_SHIFT = "shift";
  @SerializedName(SERIALIZED_NAME_SHIFT)
  private String shift;

  public static final String SERIALIZED_NAME_SITW_EXEMPT = "sitwExempt";
  @SerializedName(SERIALIZED_NAME_SITW_EXEMPT)
  private Boolean sitwExempt;

  public static final String SERIALIZED_NAME_SITW_EXEMPT_NOTES = "sitwExemptNotes";
  @SerializedName(SERIALIZED_NAME_SITW_EXEMPT_NOTES)
  private String sitwExemptNotes;

  public static final String SERIALIZED_NAME_SITW_EXEMPT_REASON = "sitwExemptReason";
  @SerializedName(SERIALIZED_NAME_SITW_EXEMPT_REASON)
  private String sitwExemptReason;

  public static final String SERIALIZED_NAME_SMOKER = "smoker";
  @SerializedName(SERIALIZED_NAME_SMOKER)
  private Boolean smoker;

  public static final String SERIALIZED_NAME_SS_EXEMPT = "ssExempt";
  @SerializedName(SERIALIZED_NAME_SS_EXEMPT)
  private Boolean ssExempt;

  public static final String SERIALIZED_NAME_SS_EXEMPT_NOTES = "ssExemptNotes";
  @SerializedName(SERIALIZED_NAME_SS_EXEMPT_NOTES)
  private String ssExemptNotes;

  public static final String SERIALIZED_NAME_SS_EXEMPT_REASON = "ssExemptReason";
  @SerializedName(SERIALIZED_NAME_SS_EXEMPT_REASON)
  private String ssExemptReason;

  public static final String SERIALIZED_NAME_SSN = "ssn";
  @SerializedName(SERIALIZED_NAME_SSN)
  private String ssn;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_STATUTORY = "statutory";
  @SerializedName(SERIALIZED_NAME_STATUTORY)
  private Boolean statutory;

  public static final String SERIALIZED_NAME_SUFFIX = "suffix";
  @SerializedName(SERIALIZED_NAME_SUFFIX)
  private String suffix;

  public static final String SERIALIZED_NAME_SUI_EXEMPT = "suiExempt";
  @SerializedName(SERIALIZED_NAME_SUI_EXEMPT)
  private Boolean suiExempt;

  public static final String SERIALIZED_NAME_SUI_EXEMPT_NOTES = "suiExemptNotes";
  @SerializedName(SERIALIZED_NAME_SUI_EXEMPT_NOTES)
  private String suiExemptNotes;

  public static final String SERIALIZED_NAME_SUI_EXEMPT_REASON = "suiExemptReason";
  @SerializedName(SERIALIZED_NAME_SUI_EXEMPT_REASON)
  private String suiExemptReason;

  public static final String SERIALIZED_NAME_SUI_STATE = "suiState";
  @SerializedName(SERIALIZED_NAME_SUI_STATE)
  private String suiState;

  public static final String SERIALIZED_NAME_SUPERVISOR_CO = "supervisorCo";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_CO)
  private String supervisorCo;

  public static final String SERIALIZED_NAME_SUPERVISOR_I_D = "supervisorID";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_I_D)
  private String supervisorID;

  public static final String SERIALIZED_NAME_TAX_DISTRIBUTION_CODE1099_R = "taxDistributionCode1099R";
  @SerializedName(SERIALIZED_NAME_TAX_DISTRIBUTION_CODE1099_R)
  private String taxDistributionCode1099R;

  public static final String SERIALIZED_NAME_TAX_FORM = "taxForm";
  @SerializedName(SERIALIZED_NAME_TAX_FORM)
  private String taxForm;

  public static final String SERIALIZED_NAME_TIPPED = "tipped";
  @SerializedName(SERIALIZED_NAME_TIPPED)
  private String tipped;

  public static final String SERIALIZED_NAME_UNION_CODE = "unionCode";
  @SerializedName(SERIALIZED_NAME_UNION_CODE)
  private String unionCode;

  public static final String SERIALIZED_NAME_UNION_DATE = "unionDate";
  @SerializedName(SERIALIZED_NAME_UNION_DATE)
  private LocalDate unionDate;

  public static final String SERIALIZED_NAME_UNION_DUES = "unionDues";
  @SerializedName(SERIALIZED_NAME_UNION_DUES)
  private Boolean unionDues;

  public static final String SERIALIZED_NAME_UNION_INIT_FEES = "unionInitFees";
  @SerializedName(SERIALIZED_NAME_UNION_INIT_FEES)
  private Boolean unionInitFees;

  public static final String SERIALIZED_NAME_UNION_POSITION = "unionPosition";
  @SerializedName(SERIALIZED_NAME_UNION_POSITION)
  private String unionPosition;

  public static final String SERIALIZED_NAME_VETERAN = "veteran";
  @SerializedName(SERIALIZED_NAME_VETERAN)
  private Boolean veteran;

  public static final String SERIALIZED_NAME_WALI_EXEMPT = "waliExempt";
  @SerializedName(SERIALIZED_NAME_WALI_EXEMPT)
  private Boolean waliExempt;

  public static final String SERIALIZED_NAME_WALI_EXEMPT_NOTES = "waliExemptNotes";
  @SerializedName(SERIALIZED_NAME_WALI_EXEMPT_NOTES)
  private String waliExemptNotes;

  public static final String SERIALIZED_NAME_WALI_EXEMPT_REASON = "waliExemptReason";
  @SerializedName(SERIALIZED_NAME_WALI_EXEMPT_REASON)
  private String waliExemptReason;

  public static final String SERIALIZED_NAME_WORK_ADDRESS1 = "workAddress1";
  @SerializedName(SERIALIZED_NAME_WORK_ADDRESS1)
  private String workAddress1;

  public static final String SERIALIZED_NAME_WORK_ADDRESS2 = "workAddress2";
  @SerializedName(SERIALIZED_NAME_WORK_ADDRESS2)
  private String workAddress2;

  public static final String SERIALIZED_NAME_WORK_CITY = "workCity";
  @SerializedName(SERIALIZED_NAME_WORK_CITY)
  private String workCity;

  public static final String SERIALIZED_NAME_WORK_COUNTRY = "workCountry";
  @SerializedName(SERIALIZED_NAME_WORK_COUNTRY)
  private String workCountry;

  public static final String SERIALIZED_NAME_WORK_COUNTY = "workCounty";
  @SerializedName(SERIALIZED_NAME_WORK_COUNTY)
  private String workCounty;

  public static final String SERIALIZED_NAME_WORK_EMAIL_ADDRESS = "workEmailAddress";
  @SerializedName(SERIALIZED_NAME_WORK_EMAIL_ADDRESS)
  private String workEmailAddress;

  public static final String SERIALIZED_NAME_WORKERS_COMP = "workersComp";
  @SerializedName(SERIALIZED_NAME_WORKERS_COMP)
  private String workersComp;

  public static final String SERIALIZED_NAME_WORK_EXT = "workExt";
  @SerializedName(SERIALIZED_NAME_WORK_EXT)
  private String workExt;

  public static final String SERIALIZED_NAME_WORK_LOCATION = "workLocation";
  @SerializedName(SERIALIZED_NAME_WORK_LOCATION)
  private String workLocation;

  public static final String SERIALIZED_NAME_WORK_MAIL_STOP = "workMailStop";
  @SerializedName(SERIALIZED_NAME_WORK_MAIL_STOP)
  private String workMailStop;

  public static final String SERIALIZED_NAME_WORK_MOBILE_PHONE = "workMobilePhone";
  @SerializedName(SERIALIZED_NAME_WORK_MOBILE_PHONE)
  private String workMobilePhone;

  public static final String SERIALIZED_NAME_WORK_PAGER = "workPager";
  @SerializedName(SERIALIZED_NAME_WORK_PAGER)
  private String workPager;

  public static final String SERIALIZED_NAME_WORK_PHONE = "workPhone";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE)
  private String workPhone;

  public static final String SERIALIZED_NAME_WORK_STATE = "workState";
  @SerializedName(SERIALIZED_NAME_WORK_STATE)
  private String workState;

  public static final String SERIALIZED_NAME_WORK_ZIP = "workZip";
  @SerializedName(SERIALIZED_NAME_WORK_ZIP)
  private String workZip;

  public static final String SERIALIZED_NAME_ZIP = "zip";
  @SerializedName(SERIALIZED_NAME_ZIP)
  private String zip;

  public static final String SERIALIZED_NAME_SYNC_WEB_TIME_RECORD = "syncWebTimeRecord";
  @SerializedName(SERIALIZED_NAME_SYNC_WEB_TIME_RECORD)
  private Boolean syncWebTimeRecord;

  public static final String SERIALIZED_NAME_NEW_BENEFIT_CLASS_SETUP = "newBenefitClassSetup";
  @SerializedName(SERIALIZED_NAME_NEW_BENEFIT_CLASS_SETUP)
  private List<NewBenefitClassSetup> newBenefitClassSetup = null;

  public static final String SERIALIZED_NAME_NEW_MAIN_DIRECT_DEPOSIT = "newMainDirectDeposit";
  @SerializedName(SERIALIZED_NAME_NEW_MAIN_DIRECT_DEPOSIT)
  private List<NewMainDirectDeposit> newMainDirectDeposit = null;

  public static final String SERIALIZED_NAME_NEW_ADDITIONAL_DIRECT_DEPOSIT = "newAdditionalDirectDeposit";
  @SerializedName(SERIALIZED_NAME_NEW_ADDITIONAL_DIRECT_DEPOSIT)
  private List<NewAdditionalDirectDeposit> newAdditionalDirectDeposit = null;

  public static final String SERIALIZED_NAME_NEW_FED_TAX = "newFedTax";
  @SerializedName(SERIALIZED_NAME_NEW_FED_TAX)
  private List<NewFedTax> newFedTax = null;

  public static final String SERIALIZED_NAME_NEW_LOCAL_TAX = "newLocalTax";
  @SerializedName(SERIALIZED_NAME_NEW_LOCAL_TAX)
  private List<NewLocalTax> newLocalTax = null;

  public static final String SERIALIZED_NAME_NEW_STATE_TAX = "newStateTax";
  @SerializedName(SERIALIZED_NAME_NEW_STATE_TAX)
  private List<NewStateTax> newStateTax = null;

  public static final String SERIALIZED_NAME_NEW_WORK_ELIGIBILITY = "newWorkEligibility";
  @SerializedName(SERIALIZED_NAME_NEW_WORK_ELIGIBILITY)
  private List<NewWorkEligibility> newWorkEligibility = null;

  public NewEmployee() {
  }

  public NewEmployee title(String title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Employee current job title.&lt;br  /&gt;Max length: 50
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee current job title.<br  />Max length: 50")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    
    
    
    this.title = title;
  }


  public NewEmployee address1(String address1) {
    
    
    
    
    this.address1 = address1;
    return this;
  }

   /**
   * Employee home 1st address line. &lt;br  /&gt;Max length: 40
   * @return address1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee home 1st address line. <br  />Max length: 40")

  public String getAddress1() {
    return address1;
  }


  public void setAddress1(String address1) {
    
    
    
    this.address1 = address1;
  }


  public NewEmployee address2(String address2) {
    
    
    
    
    this.address2 = address2;
    return this;
  }

   /**
   * Employee home 2nd address line. &lt;br  /&gt;Max length: 40
   * @return address2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee home 2nd address line. <br  />Max length: 40")

  public String getAddress2() {
    return address2;
  }


  public void setAddress2(String address2) {
    
    
    
    this.address2 = address2;
  }


  public NewEmployee adjSeniorityDate(LocalDate adjSeniorityDate) {
    
    
    
    
    this.adjSeniorityDate = adjSeniorityDate;
    return this;
  }

   /**
   * Adjusted seniority date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
   * @return adjSeniorityDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Adjusted seniority date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.")

  public LocalDate getAdjSeniorityDate() {
    return adjSeniorityDate;
  }


  public void setAdjSeniorityDate(LocalDate adjSeniorityDate) {
    
    
    
    this.adjSeniorityDate = adjSeniorityDate;
  }


  public NewEmployee annualSalary(Double annualSalary) {
    
    
    
    
    this.annualSalary = annualSalary;
    return this;
  }

  public NewEmployee annualSalary(Integer annualSalary) {
    
    
    
    
    this.annualSalary = annualSalary.doubleValue();
    return this;
  }

   /**
   * Employee annual salary. &lt;br  /&gt;Decimal (12,2)
   * @return annualSalary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee annual salary. <br  />Decimal (12,2)")

  public Double getAnnualSalary() {
    return annualSalary;
  }


  public void setAnnualSalary(Double annualSalary) {
    
    
    
    this.annualSalary = annualSalary;
  }


  public NewEmployee autoGenerateEmployeeId(Boolean autoGenerateEmployeeId) {
    
    
    
    
    this.autoGenerateEmployeeId = autoGenerateEmployeeId;
    return this;
  }

   /**
   * *True* to have Paylocity Payroll/HR solution automatically assign the next available employee ID.&lt;br  /&gt;*False* when providing a value in the employeeId field.
   * @return autoGenerateEmployeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "*True* to have Paylocity Payroll/HR solution automatically assign the next available employee ID.<br  />*False* when providing a value in the employeeId field.")

  public Boolean getAutoGenerateEmployeeId() {
    return autoGenerateEmployeeId;
  }


  public void setAutoGenerateEmployeeId(Boolean autoGenerateEmployeeId) {
    
    
    
    this.autoGenerateEmployeeId = autoGenerateEmployeeId;
  }


  public NewEmployee autoPay(Boolean autoPay) {
    
    
    
    
    this.autoPay = autoPay;
    return this;
  }

   /**
   * If set to *True*, employee will be paid automatically using deafultHours.
   * @return autoPay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set to *True*, employee will be paid automatically using deafultHours.")

  public Boolean getAutoPay() {
    return autoPay;
  }


  public void setAutoPay(Boolean autoPay) {
    
    
    
    this.autoPay = autoPay;
  }


  public NewEmployee autoPayType(String autoPayType) {
    
    
    
    
    this.autoPayType = autoPayType;
    return this;
  }

   /**
   * Valid values are *N, D, S*. (N- employee won&#39;t automatically receive a salary or hours during payroll, D - employee will be automatically paid in defaultHours during payroll, S - employee will be automatically paid Salary
   * @return autoPayType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Valid values are *N, D, S*. (N- employee won't automatically receive a salary or hours during payroll, D - employee will be automatically paid in defaultHours during payroll, S - employee will be automatically paid Salary")

  public String getAutoPayType() {
    return autoPayType;
  }


  public void setAutoPayType(String autoPayType) {
    
    
    
    this.autoPayType = autoPayType;
  }


  public NewEmployee baseRate(Double baseRate) {
    
    
    
    
    this.baseRate = baseRate;
    return this;
  }

  public NewEmployee baseRate(Integer baseRate) {
    
    
    
    
    this.baseRate = baseRate.doubleValue();
    return this;
  }

   /**
   * Employee base rate, used for Hourly employees. &lt;br  /&gt;Decimal (12,2)
   * @return baseRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee base rate, used for Hourly employees. <br  />Decimal (12,2)")

  public Double getBaseRate() {
    return baseRate;
  }


  public void setBaseRate(Double baseRate) {
    
    
    
    this.baseRate = baseRate;
  }


  public NewEmployee birthDate(LocalDate birthDate) {
    
    
    
    
    this.birthDate = birthDate;
    return this;
  }

   /**
   * Employee birthdate. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
   * @return birthDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee birthdate. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.")

  public LocalDate getBirthDate() {
    return birthDate;
  }


  public void setBirthDate(LocalDate birthDate) {
    
    
    
    this.birthDate = birthDate;
  }


  public NewEmployee city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * Employee home city. &lt;br  /&gt;Max length: 40
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee home city. <br  />Max length: 40")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public NewEmployee clockBadge(String clockBadge) {
    
    
    
    
    this.clockBadge = clockBadge;
    return this;
  }

   /**
   * Employee clock badge number. Deafults to employeeId. &lt;br  /&gt;Max length: 10
   * @return clockBadge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee clock badge number. Deafults to employeeId. <br  />Max length: 10")

  public String getClockBadge() {
    return clockBadge;
  }


  public void setClockBadge(String clockBadge) {
    
    
    
    this.clockBadge = clockBadge;
  }


  public NewEmployee companyNumber(String companyNumber) {
    
    
    
    
    this.companyNumber = companyNumber;
    return this;
  }

   /**
   * Paylocity assigned company number.&lt;br  /&gt; Max length: 9
   * @return companyNumber
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Paylocity assigned company number.<br  /> Max length: 9")

  public String getCompanyNumber() {
    return companyNumber;
  }


  public void setCompanyNumber(String companyNumber) {
    
    
    
    this.companyNumber = companyNumber;
  }


  public NewEmployee costCenter1(String costCenter1) {
    
    
    
    
    this.costCenter1 = costCenter1;
    return this;
  }

   /**
   * Employer defined location, like *branch, division, department*, etc. Must match Company setup. &lt;br  /&gt;Max length: 10
   * @return costCenter1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10")

  public String getCostCenter1() {
    return costCenter1;
  }


  public void setCostCenter1(String costCenter1) {
    
    
    
    this.costCenter1 = costCenter1;
  }


  public NewEmployee costCenter2(String costCenter2) {
    
    
    
    
    this.costCenter2 = costCenter2;
    return this;
  }

   /**
   * Employer defined location, like *branch, division, department*, etc. Must match Company setup. &lt;br  /&gt;Max length: 10
   * @return costCenter2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10")

  public String getCostCenter2() {
    return costCenter2;
  }


  public void setCostCenter2(String costCenter2) {
    
    
    
    this.costCenter2 = costCenter2;
  }


  public NewEmployee costCenter3(String costCenter3) {
    
    
    
    
    this.costCenter3 = costCenter3;
    return this;
  }

   /**
   * Employer defined location, like *branch, division, department*, etc. Must match Company setup. &lt;br  /&gt;Max length: 10
   * @return costCenter3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10")

  public String getCostCenter3() {
    return costCenter3;
  }


  public void setCostCenter3(String costCenter3) {
    
    
    
    this.costCenter3 = costCenter3;
  }


  public NewEmployee country(String country) {
    
    
    
    
    this.country = country;
    return this;
  }

   /**
   * Employee country. &lt;br  /&gt; Max length: 30
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee country. <br  /> Max length: 30")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    
    
    
    this.country = country;
  }


  public NewEmployee county(String county) {
    
    
    
    
    this.county = county;
    return this;
  }

   /**
   * Employee county.&lt;br  /&gt; Max length: 30 
   * @return county
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee county.<br  /> Max length: 30 ")

  public String getCounty() {
    return county;
  }


  public void setCounty(String county) {
    
    
    
    this.county = county;
  }


  public NewEmployee defaultHours(Double defaultHours) {
    
    
    
    
    this.defaultHours = defaultHours;
    return this;
  }

  public NewEmployee defaultHours(Integer defaultHours) {
    
    
    
    
    this.defaultHours = defaultHours.doubleValue();
    return this;
  }

   /**
   * Employee default hours consistently worked. If autoPayType is set to D, employee will be paid hourly base rate for the defaultHours. &lt;br  /&gt;Decimal (12,2)
   * @return defaultHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee default hours consistently worked. If autoPayType is set to D, employee will be paid hourly base rate for the defaultHours. <br  />Decimal (12,2)")

  public Double getDefaultHours() {
    return defaultHours;
  }


  public void setDefaultHours(Double defaultHours) {
    
    
    
    this.defaultHours = defaultHours;
  }


  public NewEmployee disability(Boolean disability) {
    
    
    
    
    this.disability = disability;
    return this;
  }

   /**
   * Indicates if employee has disability status.
   * @return disability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee has disability status.")

  public Boolean getDisability() {
    return disability;
  }


  public void setDisability(Boolean disability) {
    
    
    
    this.disability = disability;
  }


  public NewEmployee eligibleForRehire(Boolean eligibleForRehire) {
    
    
    
    
    this.eligibleForRehire = eligibleForRehire;
    return this;
  }

   /**
   * Indicates if employee eligible for rehire.
   * @return eligibleForRehire
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee eligible for rehire.")

  public Boolean getEligibleForRehire() {
    return eligibleForRehire;
  }


  public void setEligibleForRehire(Boolean eligibleForRehire) {
    
    
    
    this.eligibleForRehire = eligibleForRehire;
  }


  public NewEmployee employee943(Boolean employee943) {
    
    
    
    
    this.employee943 = employee943;
    return this;
  }

   /**
   * Indicates if employee in agriculture or farming.
   * @return employee943
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee in agriculture or farming.")

  public Boolean getEmployee943() {
    return employee943;
  }


  public void setEmployee943(Boolean employee943) {
    
    
    
    this.employee943 = employee943;
  }


  public NewEmployee employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Leave blank to have Paylocity Payroll/HR solution automatically assign the next available employee ID.&lt;br  /&gt; Max length: 10
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Leave blank to have Paylocity Payroll/HR solution automatically assign the next available employee ID.<br  /> Max length: 10")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public NewEmployee employeeStatus(String employeeStatus) {
    
    
    
    
    this.employeeStatus = employeeStatus;
    return this;
  }

   /**
   * Employee current work status. Common values are *A* (Active), *L* (Leave of Absence), *T* (Terminated). &lt;br  /&gt;Max length: 20
   * @return employeeStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee current work status. Common values are *A* (Active), *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20")

  public String getEmployeeStatus() {
    return employeeStatus;
  }


  public void setEmployeeStatus(String employeeStatus) {
    
    
    
    this.employeeStatus = employeeStatus;
  }


  public NewEmployee employmentType(String employmentType) {
    
    
    
    
    this.employmentType = employmentType;
    return this;
  }

   /**
   * Employee current employment type. Common values *RFT (Regular Full Time), RPT (Regular Part Time), SNL (Seasonal), TFT (Temporary Full Time), TPT (Temporary Part Time)*. &lt;br  /&gt;Max length: 10
   * @return employmentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee current employment type. Common values *RFT (Regular Full Time), RPT (Regular Part Time), SNL (Seasonal), TFT (Temporary Full Time), TPT (Temporary Part Time)*. <br  />Max length: 10")

  public String getEmploymentType() {
    return employmentType;
  }


  public void setEmploymentType(String employmentType) {
    
    
    
    this.employmentType = employmentType;
  }


  public NewEmployee equalEmploymentOpportunityClass(String equalEmploymentOpportunityClass) {
    
    
    
    
    this.equalEmploymentOpportunityClass = equalEmploymentOpportunityClass;
    return this;
  }

   /**
   * Values are configured in Company &gt; Setup &gt; HR &gt; EEO Classes.&lt;br  /&gt; Max length: 10
   * @return equalEmploymentOpportunityClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Values are configured in Company > Setup > HR > EEO Classes.<br  /> Max length: 10")

  public String getEqualEmploymentOpportunityClass() {
    return equalEmploymentOpportunityClass;
  }


  public void setEqualEmploymentOpportunityClass(String equalEmploymentOpportunityClass) {
    
    
    
    this.equalEmploymentOpportunityClass = equalEmploymentOpportunityClass;
  }


  public NewEmployee ethnicity(String ethnicity) {
    
    
    
    
    this.ethnicity = ethnicity;
    return this;
  }

   /**
   * Employee ethnicity.&lt;br  /&gt; Max length: 10
   * @return ethnicity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee ethnicity.<br  /> Max length: 10")

  public String getEthnicity() {
    return ethnicity;
  }


  public void setEthnicity(String ethnicity) {
    
    
    
    this.ethnicity = ethnicity;
  }


  public NewEmployee firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Employee first name. &lt;br  /&gt;Max length: 40
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee first name. <br  />Max length: 40")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public NewEmployee fitwExempt(Boolean fitwExempt) {
    
    
    
    
    this.fitwExempt = fitwExempt;
    return this;
  }

   /**
   * Indicates if employee exempt from federal income tax.
   * @return fitwExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee exempt from federal income tax.")

  public Boolean getFitwExempt() {
    return fitwExempt;
  }


  public void setFitwExempt(Boolean fitwExempt) {
    
    
    
    this.fitwExempt = fitwExempt;
  }


  public NewEmployee fitwExemptNotes(String fitwExemptNotes) {
    
    
    
    
    this.fitwExemptNotes = fitwExemptNotes;
    return this;
  }

   /**
   * Notes for FITW exempt.&lt;br  /&gt; Max length: 250
   * @return fitwExemptNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Notes for FITW exempt.<br  /> Max length: 250")

  public String getFitwExemptNotes() {
    return fitwExemptNotes;
  }


  public void setFitwExemptNotes(String fitwExemptNotes) {
    
    
    
    this.fitwExemptNotes = fitwExemptNotes;
  }


  public NewEmployee fitwExemptReason(String fitwExemptReason) {
    
    
    
    
    this.fitwExemptReason = fitwExemptReason;
    return this;
  }

   /**
   * Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
   * @return fitwExemptReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30")

  public String getFitwExemptReason() {
    return fitwExemptReason;
  }


  public void setFitwExemptReason(String fitwExemptReason) {
    
    
    
    this.fitwExemptReason = fitwExemptReason;
  }


  public NewEmployee futaExempt(Boolean futaExempt) {
    
    
    
    
    this.futaExempt = futaExempt;
    return this;
  }

   /**
   * Indicates if employee is exempt from Federal Unemployment Tax Act.
   * @return futaExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is exempt from Federal Unemployment Tax Act.")

  public Boolean getFutaExempt() {
    return futaExempt;
  }


  public void setFutaExempt(Boolean futaExempt) {
    
    
    
    this.futaExempt = futaExempt;
  }


  public NewEmployee futaExemptNotes(String futaExemptNotes) {
    
    
    
    
    this.futaExemptNotes = futaExemptNotes;
    return this;
  }

   /**
   * FUTA exempt note. &lt;br  /&gt; Max length: 250
   * @return futaExemptNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "FUTA exempt note. <br  /> Max length: 250")

  public String getFutaExemptNotes() {
    return futaExemptNotes;
  }


  public void setFutaExemptNotes(String futaExemptNotes) {
    
    
    
    this.futaExemptNotes = futaExemptNotes;
  }


  public NewEmployee futaExemptReason(String futaExemptReason) {
    
    
    
    
    this.futaExemptReason = futaExemptReason;
    return this;
  }

   /**
   * Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).&lt;br  /&gt; Max length: 30
   * @return futaExemptReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30")

  public String getFutaExemptReason() {
    return futaExemptReason;
  }


  public void setFutaExemptReason(String futaExemptReason) {
    
    
    
    this.futaExemptReason = futaExemptReason;
  }


  public NewEmployee hireDate(LocalDate hireDate) {
    
    
    
    
    this.hireDate = hireDate;
    return this;
  }

   /**
   * Employee hired date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
   * @return hireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee hired date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.")

  public LocalDate getHireDate() {
    return hireDate;
  }


  public void setHireDate(LocalDate hireDate) {
    
    
    
    this.hireDate = hireDate;
  }


  public NewEmployee homePhone(String homePhone) {
    
    
    
    
    this.homePhone = homePhone;
    return this;
  }

   /**
   * Employee home phone number.&lt;br  /&gt;Max length: 12
   * @return homePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee home phone number.<br  />Max length: 12")

  public String getHomePhone() {
    return homePhone;
  }


  public void setHomePhone(String homePhone) {
    
    
    
    this.homePhone = homePhone;
  }


  public NewEmployee isSupervisorReviewer(Boolean isSupervisorReviewer) {
    
    
    
    
    this.isSupervisorReviewer = isSupervisorReviewer;
    return this;
  }

   /**
   * Indicates if employee is a supervisor or reviewer.
   * @return isSupervisorReviewer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is a supervisor or reviewer.")

  public Boolean getIsSupervisorReviewer() {
    return isSupervisorReviewer;
  }


  public void setIsSupervisorReviewer(Boolean isSupervisorReviewer) {
    
    
    
    this.isSupervisorReviewer = isSupervisorReviewer;
  }


  public NewEmployee lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Employee last name. &lt;br  /&gt;Max length: 40
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee last name. <br  />Max length: 40")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public NewEmployee maritalStatus(String maritalStatus) {
    
    
    
    
    this.maritalStatus = maritalStatus;
    return this;
  }

   /**
   * Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. &lt;br  /&gt;Max length: 10
   * @return maritalStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. <br  />Max length: 10")

  public String getMaritalStatus() {
    return maritalStatus;
  }


  public void setMaritalStatus(String maritalStatus) {
    
    
    
    this.maritalStatus = maritalStatus;
  }


  public NewEmployee medExempt(Boolean medExempt) {
    
    
    
    
    this.medExempt = medExempt;
    return this;
  }

   /**
   * Indicates if employee is Medicare exempt.
   * @return medExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is Medicare exempt.")

  public Boolean getMedExempt() {
    return medExempt;
  }


  public void setMedExempt(Boolean medExempt) {
    
    
    
    this.medExempt = medExempt;
  }


  public NewEmployee medExemptNotes(String medExemptNotes) {
    
    
    
    
    this.medExemptNotes = medExemptNotes;
    return this;
  }

   /**
   * Notes for Medicare exempt.
   * @return medExemptNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Notes for Medicare exempt.")

  public String getMedExemptNotes() {
    return medExemptNotes;
  }


  public void setMedExemptNotes(String medExemptNotes) {
    
    
    
    this.medExemptNotes = medExemptNotes;
  }


  public NewEmployee medExemptReason(String medExemptReason) {
    
    
    
    
    this.medExemptReason = medExemptReason;
    return this;
  }

   /**
   * Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).&lt;br  /&gt; Max length: 30
   * @return medExemptReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30")

  public String getMedExemptReason() {
    return medExemptReason;
  }


  public void setMedExemptReason(String medExemptReason) {
    
    
    
    this.medExemptReason = medExemptReason;
  }


  public NewEmployee middleName(String middleName) {
    
    
    
    
    this.middleName = middleName;
    return this;
  }

   /**
   * Employee middle name.&lt;br  /&gt; Max length: 20
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee middle name.<br  /> Max length: 20")

  public String getMiddleName() {
    return middleName;
  }


  public void setMiddleName(String middleName) {
    
    
    
    this.middleName = middleName;
  }


  public NewEmployee minimumWageExempt(Boolean minimumWageExempt) {
    
    
    
    
    this.minimumWageExempt = minimumWageExempt;
    return this;
  }

   /**
   * Indicates if employee is exempt from minimum wage.
   * @return minimumWageExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is exempt from minimum wage.")

  public Boolean getMinimumWageExempt() {
    return minimumWageExempt;
  }


  public void setMinimumWageExempt(Boolean minimumWageExempt) {
    
    
    
    this.minimumWageExempt = minimumWageExempt;
  }


  public NewEmployee nickname(String nickname) {
    
    
    
    
    this.nickname = nickname;
    return this;
  }

   /**
   * Employee preferred display name.&lt;br  /&gt; Max length: 20
   * @return nickname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee preferred display name.<br  /> Max length: 20")

  public String getNickname() {
    return nickname;
  }


  public void setNickname(String nickname) {
    
    
    
    this.nickname = nickname;
  }


  public NewEmployee overrideTitle(Boolean overrideTitle) {
    
    
    
    
    this.overrideTitle = overrideTitle;
    return this;
  }

   /**
   * Indicates override to the default Job Title. Use the title field to enter Employee job title.
   * @return overrideTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates override to the default Job Title. Use the title field to enter Employee job title.")

  public Boolean getOverrideTitle() {
    return overrideTitle;
  }


  public void setOverrideTitle(Boolean overrideTitle) {
    
    
    
    this.overrideTitle = overrideTitle;
  }


  public NewEmployee overtimeExempt(Boolean overtimeExempt) {
    
    
    
    
    this.overtimeExempt = overtimeExempt;
    return this;
  }

   /**
   * Indicates if employee is exempt from overtime.
   * @return overtimeExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is exempt from overtime.")

  public Boolean getOvertimeExempt() {
    return overtimeExempt;
  }


  public void setOvertimeExempt(Boolean overtimeExempt) {
    
    
    
    this.overtimeExempt = overtimeExempt;
  }


  public NewEmployee payFrequency(String payFrequency) {
    
    
    
    
    this.payFrequency = payFrequency;
    return this;
  }

   /**
   * Employee current pay frequency. Common values are *A (Annual), B (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q (Quarterly), W (Weekly)*. &lt;br  /&gt;Max length: 5
   * @return payFrequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee current pay frequency. Common values are *A (Annual), B (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q (Quarterly), W (Weekly)*. <br  />Max length: 5")

  public String getPayFrequency() {
    return payFrequency;
  }


  public void setPayFrequency(String payFrequency) {
    
    
    
    this.payFrequency = payFrequency;
  }


  public NewEmployee payGrade(String payGrade) {
    
    
    
    
    this.payGrade = payGrade;
    return this;
  }

   /**
   * Employee pay grade. Must match Company setup. &lt;br  /&gt; Max length: 10
   * @return payGrade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee pay grade. Must match Company setup. <br  /> Max length: 10")

  public String getPayGrade() {
    return payGrade;
  }


  public void setPayGrade(String payGrade) {
    
    
    
    this.payGrade = payGrade;
  }


  public NewEmployee payGroup(String payGroup) {
    
    
    
    
    this.payGroup = payGroup;
    return this;
  }

   /**
   * Employee pay group. Must match Company setup. &lt;br  /&gt; Max length: 20
   * @return payGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee pay group. Must match Company setup. <br  /> Max length: 20")

  public String getPayGroup() {
    return payGroup;
  }


  public void setPayGroup(String payGroup) {
    
    
    
    this.payGroup = payGroup;
  }


  public NewEmployee payRateNote(String payRateNote) {
    
    
    
    
    this.payRateNote = payRateNote;
    return this;
  }

   /**
   * Pay rate notes regarding employee.&lt;br  /&gt; Max length: 250
   * @return payRateNote
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pay rate notes regarding employee.<br  /> Max length: 250")

  public String getPayRateNote() {
    return payRateNote;
  }


  public void setPayRateNote(String payRateNote) {
    
    
    
    this.payRateNote = payRateNote;
  }


  public NewEmployee pension(Boolean pension) {
    
    
    
    
    this.pension = pension;
    return this;
  }

   /**
   * Indicates if employee is eligible for pension.
   * @return pension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is eligible for pension.")

  public Boolean getPension() {
    return pension;
  }


  public void setPension(Boolean pension) {
    
    
    
    this.pension = pension;
  }


  public NewEmployee personalEmailAddress(String personalEmailAddress) {
    
    
    
    
    this.personalEmailAddress = personalEmailAddress;
    return this;
  }

   /**
   * Employee personal email address. &lt;br  /&gt;Max length: 50
   * @return personalEmailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee personal email address. <br  />Max length: 50")

  public String getPersonalEmailAddress() {
    return personalEmailAddress;
  }


  public void setPersonalEmailAddress(String personalEmailAddress) {
    
    
    
    this.personalEmailAddress = personalEmailAddress;
  }


  public NewEmployee personalMobilePhone(String personalMobilePhone) {
    
    
    
    
    this.personalMobilePhone = personalMobilePhone;
    return this;
  }

   /**
   * Employee personal mobile phone number. &lt;br  /&gt;Max length: 12
   * @return personalMobilePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee personal mobile phone number. <br  />Max length: 12")

  public String getPersonalMobilePhone() {
    return personalMobilePhone;
  }


  public void setPersonalMobilePhone(String personalMobilePhone) {
    
    
    
    this.personalMobilePhone = personalMobilePhone;
  }


  public NewEmployee positionCode(String positionCode) {
    
    
    
    
    this.positionCode = positionCode;
    return this;
  }

   /**
   * Employee position code. Must match Company setup.&lt;br  /&gt;Max length: 20
   * @return positionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee position code. Must match Company setup.<br  />Max length: 20")

  public String getPositionCode() {
    return positionCode;
  }


  public void setPositionCode(String positionCode) {
    
    
    
    this.positionCode = positionCode;
  }


  public NewEmployee primaryPayRateEffectiveDate(LocalDate primaryPayRateEffectiveDate) {
    
    
    
    
    this.primaryPayRateEffectiveDate = primaryPayRateEffectiveDate;
    return this;
  }

   /**
   * Primary Pay Rate EffectiveDate
   * @return primaryPayRateEffectiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Primary Pay Rate EffectiveDate")

  public LocalDate getPrimaryPayRateEffectiveDate() {
    return primaryPayRateEffectiveDate;
  }


  public void setPrimaryPayRateEffectiveDate(LocalDate primaryPayRateEffectiveDate) {
    
    
    
    this.primaryPayRateEffectiveDate = primaryPayRateEffectiveDate;
  }


  public NewEmployee priorLastName(String priorLastName) {
    
    
    
    
    this.priorLastName = priorLastName;
    return this;
  }

   /**
   * Prior last name if applicable.&lt;br  /&gt;Max length: 40
   * @return priorLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Prior last name if applicable.<br  />Max length: 40")

  public String getPriorLastName() {
    return priorLastName;
  }


  public void setPriorLastName(String priorLastName) {
    
    
    
    this.priorLastName = priorLastName;
  }


  public NewEmployee rateCode(String rateCode) {
    
    
    
    
    this.rateCode = rateCode;
    return this;
  }

   /**
   * Employee rate (pay type) code.  Valid values are *Hourly* or *Salary*. &lt;br  /&gt;Max length: 10
   * @return rateCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee rate (pay type) code.  Valid values are *Hourly* or *Salary*. <br  />Max length: 10")

  public String getRateCode() {
    return rateCode;
  }


  public void setRateCode(String rateCode) {
    
    
    
    this.rateCode = rateCode;
  }


  public NewEmployee ratePer(String ratePer) {
    
    
    
    
    this.ratePer = ratePer;
    return this;
  }

   /**
   * Employee base rate frequency used with payType Hourly. Common values are *Hour, Week*. Default is Hour. &lt;br  /&gt;Max length: 10
   * @return ratePer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee base rate frequency used with payType Hourly. Common values are *Hour, Week*. Default is Hour. <br  />Max length: 10")

  public String getRatePer() {
    return ratePer;
  }


  public void setRatePer(String ratePer) {
    
    
    
    this.ratePer = ratePer;
  }


  public NewEmployee reviewerCo(String reviewerCo) {
    
    
    
    
    this.reviewerCo = reviewerCo;
    return this;
  }

   /**
   * Company number of reviewer. &lt;br  /&gt;Max length: 9
   * @return reviewerCo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Company number of reviewer. <br  />Max length: 9")

  public String getReviewerCo() {
    return reviewerCo;
  }


  public void setReviewerCo(String reviewerCo) {
    
    
    
    this.reviewerCo = reviewerCo;
  }


  public NewEmployee reviewerId(String reviewerId) {
    
    
    
    
    this.reviewerId = reviewerId;
    return this;
  }

   /**
   * Employee id of the reviewer. &lt;br  /&gt;Max length: 10
   * @return reviewerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee id of the reviewer. <br  />Max length: 10")

  public String getReviewerId() {
    return reviewerId;
  }


  public void setReviewerId(String reviewerId) {
    
    
    
    this.reviewerId = reviewerId;
  }


  public NewEmployee salary(Double salary) {
    
    
    
    
    this.salary = salary;
    return this;
  }

  public NewEmployee salary(Integer salary) {
    
    
    
    
    this.salary = salary.doubleValue();
    return this;
  }

   /**
   * Employee gross salary per pay period used with payType Salary.&lt;br  /&gt;Decimal (12,2)
   * @return salary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee gross salary per pay period used with payType Salary.<br  />Decimal (12,2)")

  public Double getSalary() {
    return salary;
  }


  public void setSalary(Double salary) {
    
    
    
    this.salary = salary;
  }


  public NewEmployee salutation(String salutation) {
    
    
    
    
    this.salutation = salutation;
    return this;
  }

   /**
   * Employee preferred salutation. &lt;br  /&gt;Max length: 10
   * @return salutation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee preferred salutation. <br  />Max length: 10")

  public String getSalutation() {
    return salutation;
  }


  public void setSalutation(String salutation) {
    
    
    
    this.salutation = salutation;
  }


  public NewEmployee sex(String sex) {
    
    
    
    
    this.sex = sex;
    return this;
  }

   /**
   * Employee gender. Common values *M* (Male), *F* (Female). &lt;br  /&gt;Max length: 1
   * @return sex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee gender. Common values *M* (Male), *F* (Female). <br  />Max length: 1")

  public String getSex() {
    return sex;
  }


  public void setSex(String sex) {
    
    
    
    this.sex = sex;
  }


  public NewEmployee shift(String shift) {
    
    
    
    
    this.shift = shift;
    return this;
  }

   /**
   * Employee work shift.&lt;br  /&gt;Max length: 255
   * @return shift
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work shift.<br  />Max length: 255")

  public String getShift() {
    return shift;
  }


  public void setShift(String shift) {
    
    
    
    this.shift = shift;
  }


  public NewEmployee sitwExempt(Boolean sitwExempt) {
    
    
    
    
    this.sitwExempt = sitwExempt;
    return this;
  }

   /**
   * Indicates if employee exempt from state income tax.
   * @return sitwExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee exempt from state income tax.")

  public Boolean getSitwExempt() {
    return sitwExempt;
  }


  public void setSitwExempt(Boolean sitwExempt) {
    
    
    
    this.sitwExempt = sitwExempt;
  }


  public NewEmployee sitwExemptNotes(String sitwExemptNotes) {
    
    
    
    
    this.sitwExemptNotes = sitwExemptNotes;
    return this;
  }

   /**
   * Notes for SITW exempt.&lt;br  /&gt; Max length: 250
   * @return sitwExemptNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Notes for SITW exempt.<br  /> Max length: 250")

  public String getSitwExemptNotes() {
    return sitwExemptNotes;
  }


  public void setSitwExemptNotes(String sitwExemptNotes) {
    
    
    
    this.sitwExemptNotes = sitwExemptNotes;
  }


  public NewEmployee sitwExemptReason(String sitwExemptReason) {
    
    
    
    
    this.sitwExemptReason = sitwExemptReason;
    return this;
  }

   /**
   * Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
   * @return sitwExemptReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30")

  public String getSitwExemptReason() {
    return sitwExemptReason;
  }


  public void setSitwExemptReason(String sitwExemptReason) {
    
    
    
    this.sitwExemptReason = sitwExemptReason;
  }


  public NewEmployee smoker(Boolean smoker) {
    
    
    
    
    this.smoker = smoker;
    return this;
  }

   /**
   * Indicates if employee is a smoker.
   * @return smoker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is a smoker.")

  public Boolean getSmoker() {
    return smoker;
  }


  public void setSmoker(Boolean smoker) {
    
    
    
    this.smoker = smoker;
  }


  public NewEmployee ssExempt(Boolean ssExempt) {
    
    
    
    
    this.ssExempt = ssExempt;
    return this;
  }

   /**
   * Indicates if employee is exempt from Social Security taxes.
   * @return ssExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is exempt from Social Security taxes.")

  public Boolean getSsExempt() {
    return ssExempt;
  }


  public void setSsExempt(Boolean ssExempt) {
    
    
    
    this.ssExempt = ssExempt;
  }


  public NewEmployee ssExemptNotes(String ssExemptNotes) {
    
    
    
    
    this.ssExemptNotes = ssExemptNotes;
    return this;
  }

   /**
   * Notes for Socal Security exemptions.&lt;br  /&gt; Max length: 250
   * @return ssExemptNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Notes for Socal Security exemptions.<br  /> Max length: 250")

  public String getSsExemptNotes() {
    return ssExemptNotes;
  }


  public void setSsExemptNotes(String ssExemptNotes) {
    
    
    
    this.ssExemptNotes = ssExemptNotes;
  }


  public NewEmployee ssExemptReason(String ssExemptReason) {
    
    
    
    
    this.ssExemptReason = ssExemptReason;
    return this;
  }

   /**
   * Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
   * @return ssExemptReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30")

  public String getSsExemptReason() {
    return ssExemptReason;
  }


  public void setSsExemptReason(String ssExemptReason) {
    
    
    
    this.ssExemptReason = ssExemptReason;
  }


  public NewEmployee ssn(String ssn) {
    
    
    
    
    this.ssn = ssn;
    return this;
  }

   /**
   * Employee social security number. Leave it blank if valid social security number not available. &lt;br  /&gt;Max length: 11
   * @return ssn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee social security number. Leave it blank if valid social security number not available. <br  />Max length: 11")

  public String getSsn() {
    return ssn;
  }


  public void setSsn(String ssn) {
    
    
    
    this.ssn = ssn;
  }


  public NewEmployee state(String state) {
    
    
    
    
    this.state = state;
    return this;
  }

   /**
   * Employee home state. &lt;br  /&gt;Max length: 2
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee home state. <br  />Max length: 2")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    
    
    
    this.state = state;
  }


  public NewEmployee statutory(Boolean statutory) {
    
    
    
    
    this.statutory = statutory;
    return this;
  }

   /**
   * Indicates if employee is statutory.
   * @return statutory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is statutory.")

  public Boolean getStatutory() {
    return statutory;
  }


  public void setStatutory(Boolean statutory) {
    
    
    
    this.statutory = statutory;
  }


  public NewEmployee suffix(String suffix) {
    
    
    
    
    this.suffix = suffix;
    return this;
  }

   /**
   * Employee name suffix. Common values are *Jr, Sr, II*.&lt;br  /&gt;Max length: 30
   * @return suffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee name suffix. Common values are *Jr, Sr, II*.<br  />Max length: 30")

  public String getSuffix() {
    return suffix;
  }


  public void setSuffix(String suffix) {
    
    
    
    this.suffix = suffix;
  }


  public NewEmployee suiExempt(Boolean suiExempt) {
    
    
    
    
    this.suiExempt = suiExempt;
    return this;
  }

   /**
   * Indicates if employee is exempt from state unemployment insurance.
   * @return suiExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is exempt from state unemployment insurance.")

  public Boolean getSuiExempt() {
    return suiExempt;
  }


  public void setSuiExempt(Boolean suiExempt) {
    
    
    
    this.suiExempt = suiExempt;
  }


  public NewEmployee suiExemptNotes(String suiExemptNotes) {
    
    
    
    
    this.suiExemptNotes = suiExemptNotes;
    return this;
  }

   /**
   * Notes for SUI exempt.&lt;br  /&gt; Max length: 250
   * @return suiExemptNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Notes for SUI exempt.<br  /> Max length: 250")

  public String getSuiExemptNotes() {
    return suiExemptNotes;
  }


  public void setSuiExemptNotes(String suiExemptNotes) {
    
    
    
    this.suiExemptNotes = suiExemptNotes;
  }


  public NewEmployee suiExemptReason(String suiExemptReason) {
    
    
    
    
    this.suiExemptReason = suiExemptReason;
    return this;
  }

   /**
   * Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
   * @return suiExemptReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30")

  public String getSuiExemptReason() {
    return suiExemptReason;
  }


  public void setSuiExemptReason(String suiExemptReason) {
    
    
    
    this.suiExemptReason = suiExemptReason;
  }


  public NewEmployee suiState(String suiState) {
    
    
    
    
    this.suiState = suiState;
    return this;
  }

   /**
   * Employee SUI (State Unemployment Insurance) state. &lt;br  /&gt;Max length: 2
   * @return suiState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee SUI (State Unemployment Insurance) state. <br  />Max length: 2")

  public String getSuiState() {
    return suiState;
  }


  public void setSuiState(String suiState) {
    
    
    
    this.suiState = suiState;
  }


  public NewEmployee supervisorCo(String supervisorCo) {
    
    
    
    
    this.supervisorCo = supervisorCo;
    return this;
  }

   /**
   * Supervisor&#39;s company number. Defaults to employee company number.&lt;br  /&gt;Max length: 9
   * @return supervisorCo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Supervisor's company number. Defaults to employee company number.<br  />Max length: 9")

  public String getSupervisorCo() {
    return supervisorCo;
  }


  public void setSupervisorCo(String supervisorCo) {
    
    
    
    this.supervisorCo = supervisorCo;
  }


  public NewEmployee supervisorID(String supervisorID) {
    
    
    
    
    this.supervisorID = supervisorID;
    return this;
  }

   /**
   * EmployeeId of the supervisor. &lt;br  /&gt;Max length: 10
   * @return supervisorID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "EmployeeId of the supervisor. <br  />Max length: 10")

  public String getSupervisorID() {
    return supervisorID;
  }


  public void setSupervisorID(String supervisorID) {
    
    
    
    this.supervisorID = supervisorID;
  }


  public NewEmployee taxDistributionCode1099R(String taxDistributionCode1099R) {
    
    
    
    
    this.taxDistributionCode1099R = taxDistributionCode1099R;
    return this;
  }

   /**
   * Emplopyee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). &lt;br  /&gt;Max length: 1
   * @return taxDistributionCode1099R
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Emplopyee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1")

  public String getTaxDistributionCode1099R() {
    return taxDistributionCode1099R;
  }


  public void setTaxDistributionCode1099R(String taxDistributionCode1099R) {
    
    
    
    this.taxDistributionCode1099R = taxDistributionCode1099R;
  }


  public NewEmployee taxForm(String taxForm) {
    
    
    
    
    this.taxForm = taxForm;
    return this;
  }

   /**
   * Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. &lt;br  /&gt;Max length: 15
   * @return taxForm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15")

  public String getTaxForm() {
    return taxForm;
  }


  public void setTaxForm(String taxForm) {
    
    
    
    this.taxForm = taxForm;
  }


  public NewEmployee tipped(String tipped) {
    
    
    
    
    this.tipped = tipped;
    return this;
  }

   /**
   * Indicates if employee receives tips.
   * @return tipped
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee receives tips.")

  public String getTipped() {
    return tipped;
  }


  public void setTipped(String tipped) {
    
    
    
    this.tipped = tipped;
  }


  public NewEmployee unionCode(String unionCode) {
    
    
    
    
    this.unionCode = unionCode;
    return this;
  }

   /**
   * Employee union code. Must match Company setup. &lt;br  /&gt;Max length: 10
   * @return unionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee union code. Must match Company setup. <br  />Max length: 10")

  public String getUnionCode() {
    return unionCode;
  }


  public void setUnionCode(String unionCode) {
    
    
    
    this.unionCode = unionCode;
  }


  public NewEmployee unionDate(LocalDate unionDate) {
    
    
    
    
    this.unionDate = unionDate;
    return this;
  }

   /**
   * Employee union affiliation effective date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
   * @return unionDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee union affiliation effective date. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.")

  public LocalDate getUnionDate() {
    return unionDate;
  }


  public void setUnionDate(LocalDate unionDate) {
    
    
    
    this.unionDate = unionDate;
  }


  public NewEmployee unionDues(Boolean unionDues) {
    
    
    
    
    this.unionDues = unionDues;
    return this;
  }

   /**
   * Indicates if union dues are collected.
   * @return unionDues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if union dues are collected.")

  public Boolean getUnionDues() {
    return unionDues;
  }


  public void setUnionDues(Boolean unionDues) {
    
    
    
    this.unionDues = unionDues;
  }


  public NewEmployee unionInitFees(Boolean unionInitFees) {
    
    
    
    
    this.unionInitFees = unionInitFees;
    return this;
  }

   /**
   * Indicates if initiations fees are collected.
   * @return unionInitFees
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if initiations fees are collected.")

  public Boolean getUnionInitFees() {
    return unionInitFees;
  }


  public void setUnionInitFees(Boolean unionInitFees) {
    
    
    
    this.unionInitFees = unionInitFees;
  }


  public NewEmployee unionPosition(String unionPosition) {
    
    
    
    
    this.unionPosition = unionPosition;
    return this;
  }

   /**
   * Employee union position. Must match Company setup. &lt;br  /&gt;Max length: 30
   * @return unionPosition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee union position. Must match Company setup. <br  />Max length: 30")

  public String getUnionPosition() {
    return unionPosition;
  }


  public void setUnionPosition(String unionPosition) {
    
    
    
    this.unionPosition = unionPosition;
  }


  public NewEmployee veteran(Boolean veteran) {
    
    
    
    
    this.veteran = veteran;
    return this;
  }

   /**
   * Indicates if employee is a veteran.
   * @return veteran
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is a veteran.")

  public Boolean getVeteran() {
    return veteran;
  }


  public void setVeteran(Boolean veteran) {
    
    
    
    this.veteran = veteran;
  }


  public NewEmployee waliExempt(Boolean waliExempt) {
    
    
    
    
    this.waliExempt = waliExempt;
    return this;
  }

   /**
   * Indicates if employee is exempt from Washington state Liability Insurance.
   * @return waliExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if employee is exempt from Washington state Liability Insurance.")

  public Boolean getWaliExempt() {
    return waliExempt;
  }


  public void setWaliExempt(Boolean waliExempt) {
    
    
    
    this.waliExempt = waliExempt;
  }


  public NewEmployee waliExemptNotes(String waliExemptNotes) {
    
    
    
    
    this.waliExemptNotes = waliExemptNotes;
    return this;
  }

   /**
   * Notes for WALI exemption.
   * @return waliExemptNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Notes for WALI exemption.")

  public String getWaliExemptNotes() {
    return waliExemptNotes;
  }


  public void setWaliExemptNotes(String waliExemptNotes) {
    
    
    
    this.waliExemptNotes = waliExemptNotes;
  }


  public NewEmployee waliExemptReason(String waliExemptReason) {
    
    
    
    
    this.waliExemptReason = waliExemptReason;
    return this;
  }

   /**
   * Reason code for WALI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
   * @return waliExemptReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reason code for WALI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30")

  public String getWaliExemptReason() {
    return waliExemptReason;
  }


  public void setWaliExemptReason(String waliExemptReason) {
    
    
    
    this.waliExemptReason = waliExemptReason;
  }


  public NewEmployee workAddress1(String workAddress1) {
    
    
    
    
    this.workAddress1 = workAddress1;
    return this;
  }

   /**
   * Employee work 1st address line.&lt;br  /&gt; Max length: 40
   * @return workAddress1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work 1st address line.<br  /> Max length: 40")

  public String getWorkAddress1() {
    return workAddress1;
  }


  public void setWorkAddress1(String workAddress1) {
    
    
    
    this.workAddress1 = workAddress1;
  }


  public NewEmployee workAddress2(String workAddress2) {
    
    
    
    
    this.workAddress2 = workAddress2;
    return this;
  }

   /**
   * Employee work 2nd address line. &lt;br  /&gt; Max length: 40
   * @return workAddress2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work 2nd address line. <br  /> Max length: 40")

  public String getWorkAddress2() {
    return workAddress2;
  }


  public void setWorkAddress2(String workAddress2) {
    
    
    
    this.workAddress2 = workAddress2;
  }


  public NewEmployee workCity(String workCity) {
    
    
    
    
    this.workCity = workCity;
    return this;
  }

   /**
   * Employee work city.&lt;br  /&gt; Max length: 40
   * @return workCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work city.<br  /> Max length: 40")

  public String getWorkCity() {
    return workCity;
  }


  public void setWorkCity(String workCity) {
    
    
    
    this.workCity = workCity;
  }


  public NewEmployee workCountry(String workCountry) {
    
    
    
    
    this.workCountry = workCountry;
    return this;
  }

   /**
   * Employee work country.&lt;br  /&gt; Max length: 30
   * @return workCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work country.<br  /> Max length: 30")

  public String getWorkCountry() {
    return workCountry;
  }


  public void setWorkCountry(String workCountry) {
    
    
    
    this.workCountry = workCountry;
  }


  public NewEmployee workCounty(String workCounty) {
    
    
    
    
    this.workCounty = workCounty;
    return this;
  }

   /**
   * Employee work county.&lt;br  /&gt; Max length: 30
   * @return workCounty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work county.<br  /> Max length: 30")

  public String getWorkCounty() {
    return workCounty;
  }


  public void setWorkCounty(String workCounty) {
    
    
    
    this.workCounty = workCounty;
  }


  public NewEmployee workEmailAddress(String workEmailAddress) {
    
    
    
    
    this.workEmailAddress = workEmailAddress;
    return this;
  }

   /**
   * Employee work email. &lt;br  /&gt;Max length: 50
   * @return workEmailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work email. <br  />Max length: 50")

  public String getWorkEmailAddress() {
    return workEmailAddress;
  }


  public void setWorkEmailAddress(String workEmailAddress) {
    
    
    
    this.workEmailAddress = workEmailAddress;
  }


  public NewEmployee workersComp(String workersComp) {
    
    
    
    
    this.workersComp = workersComp;
    return this;
  }

   /**
   * Employee worker compensation code. Must match Company setup.&lt;br  /&gt; Max length: 10
   * @return workersComp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee worker compensation code. Must match Company setup.<br  /> Max length: 10")

  public String getWorkersComp() {
    return workersComp;
  }


  public void setWorkersComp(String workersComp) {
    
    
    
    this.workersComp = workersComp;
  }


  public NewEmployee workExt(String workExt) {
    
    
    
    
    this.workExt = workExt;
    return this;
  }

   /**
   * Employee work phone extension number.&lt;br  /&gt; Max length: 10
   * @return workExt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work phone extension number.<br  /> Max length: 10")

  public String getWorkExt() {
    return workExt;
  }


  public void setWorkExt(String workExt) {
    
    
    
    this.workExt = workExt;
  }


  public NewEmployee workLocation(String workLocation) {
    
    
    
    
    this.workLocation = workLocation;
    return this;
  }

   /**
   * Employee work location. &lt;br  /&gt; Max length: 50
   * @return workLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work location. <br  /> Max length: 50")

  public String getWorkLocation() {
    return workLocation;
  }


  public void setWorkLocation(String workLocation) {
    
    
    
    this.workLocation = workLocation;
  }


  public NewEmployee workMailStop(String workMailStop) {
    
    
    
    
    this.workMailStop = workMailStop;
    return this;
  }

   /**
   * Employee physical mail box location.&lt;br  /&gt; Max length: 10
   * @return workMailStop
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee physical mail box location.<br  /> Max length: 10")

  public String getWorkMailStop() {
    return workMailStop;
  }


  public void setWorkMailStop(String workMailStop) {
    
    
    
    this.workMailStop = workMailStop;
  }


  public NewEmployee workMobilePhone(String workMobilePhone) {
    
    
    
    
    this.workMobilePhone = workMobilePhone;
    return this;
  }

   /**
   * Employee work mobile phone number.&lt;br  /&gt; Max length: 12
   * @return workMobilePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work mobile phone number.<br  /> Max length: 12")

  public String getWorkMobilePhone() {
    return workMobilePhone;
  }


  public void setWorkMobilePhone(String workMobilePhone) {
    
    
    
    this.workMobilePhone = workMobilePhone;
  }


  public NewEmployee workPager(String workPager) {
    
    
    
    
    this.workPager = workPager;
    return this;
  }

   /**
   * Employee work pager number.&lt;br  /&gt; Max length: 20
   * @return workPager
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work pager number.<br  /> Max length: 20")

  public String getWorkPager() {
    return workPager;
  }


  public void setWorkPager(String workPager) {
    
    
    
    this.workPager = workPager;
  }


  public NewEmployee workPhone(String workPhone) {
    
    
    
    
    this.workPhone = workPhone;
    return this;
  }

   /**
   * Employee work phone number.&lt;br  /&gt; Max length: 12
   * @return workPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work phone number.<br  /> Max length: 12")

  public String getWorkPhone() {
    return workPhone;
  }


  public void setWorkPhone(String workPhone) {
    
    
    
    this.workPhone = workPhone;
  }


  public NewEmployee workState(String workState) {
    
    
    
    
    this.workState = workState;
    return this;
  }

   /**
   * Employee work state.&lt;br  /&gt; Max length: 2
   * @return workState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work state.<br  /> Max length: 2")

  public String getWorkState() {
    return workState;
  }


  public void setWorkState(String workState) {
    
    
    
    this.workState = workState;
  }


  public NewEmployee workZip(String workZip) {
    
    
    
    
    this.workZip = workZip;
    return this;
  }

   /**
   * Employee work zip code.&lt;br  /&gt; Max length: 10
   * @return workZip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee work zip code.<br  /> Max length: 10")

  public String getWorkZip() {
    return workZip;
  }


  public void setWorkZip(String workZip) {
    
    
    
    this.workZip = workZip;
  }


  public NewEmployee zip(String zip) {
    
    
    
    
    this.zip = zip;
    return this;
  }

   /**
   * Employee home zip code. &lt;br  /&gt;Max length: 10
   * @return zip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee home zip code. <br  />Max length: 10")

  public String getZip() {
    return zip;
  }


  public void setZip(String zip) {
    
    
    
    this.zip = zip;
  }


  public NewEmployee syncWebTimeRecord(Boolean syncWebTimeRecord) {
    
    
    
    
    this.syncWebTimeRecord = syncWebTimeRecord;
    return this;
  }

   /**
   * If set to *True*, employee will be synced with Web Time.
   * @return syncWebTimeRecord
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If set to *True*, employee will be synced with Web Time.")

  public Boolean getSyncWebTimeRecord() {
    return syncWebTimeRecord;
  }


  public void setSyncWebTimeRecord(Boolean syncWebTimeRecord) {
    
    
    
    this.syncWebTimeRecord = syncWebTimeRecord;
  }


  public NewEmployee newBenefitClassSetup(List<NewBenefitClassSetup> newBenefitClassSetup) {
    
    
    
    
    this.newBenefitClassSetup = newBenefitClassSetup;
    return this;
  }

  public NewEmployee addNewBenefitClassSetupItem(NewBenefitClassSetup newBenefitClassSetupItem) {
    if (this.newBenefitClassSetup == null) {
      this.newBenefitClassSetup = new ArrayList<>();
    }
    this.newBenefitClassSetup.add(newBenefitClassSetupItem);
    return this;
  }

   /**
   * Get newBenefitClassSetup
   * @return newBenefitClassSetup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NewBenefitClassSetup> getNewBenefitClassSetup() {
    return newBenefitClassSetup;
  }


  public void setNewBenefitClassSetup(List<NewBenefitClassSetup> newBenefitClassSetup) {
    
    
    
    this.newBenefitClassSetup = newBenefitClassSetup;
  }


  public NewEmployee newMainDirectDeposit(List<NewMainDirectDeposit> newMainDirectDeposit) {
    
    
    
    
    this.newMainDirectDeposit = newMainDirectDeposit;
    return this;
  }

  public NewEmployee addNewMainDirectDepositItem(NewMainDirectDeposit newMainDirectDepositItem) {
    if (this.newMainDirectDeposit == null) {
      this.newMainDirectDeposit = new ArrayList<>();
    }
    this.newMainDirectDeposit.add(newMainDirectDepositItem);
    return this;
  }

   /**
   * Get newMainDirectDeposit
   * @return newMainDirectDeposit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NewMainDirectDeposit> getNewMainDirectDeposit() {
    return newMainDirectDeposit;
  }


  public void setNewMainDirectDeposit(List<NewMainDirectDeposit> newMainDirectDeposit) {
    
    
    
    this.newMainDirectDeposit = newMainDirectDeposit;
  }


  public NewEmployee newAdditionalDirectDeposit(List<NewAdditionalDirectDeposit> newAdditionalDirectDeposit) {
    
    
    
    
    this.newAdditionalDirectDeposit = newAdditionalDirectDeposit;
    return this;
  }

  public NewEmployee addNewAdditionalDirectDepositItem(NewAdditionalDirectDeposit newAdditionalDirectDepositItem) {
    if (this.newAdditionalDirectDeposit == null) {
      this.newAdditionalDirectDeposit = new ArrayList<>();
    }
    this.newAdditionalDirectDeposit.add(newAdditionalDirectDepositItem);
    return this;
  }

   /**
   * Get newAdditionalDirectDeposit
   * @return newAdditionalDirectDeposit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NewAdditionalDirectDeposit> getNewAdditionalDirectDeposit() {
    return newAdditionalDirectDeposit;
  }


  public void setNewAdditionalDirectDeposit(List<NewAdditionalDirectDeposit> newAdditionalDirectDeposit) {
    
    
    
    this.newAdditionalDirectDeposit = newAdditionalDirectDeposit;
  }


  public NewEmployee newFedTax(List<NewFedTax> newFedTax) {
    
    
    
    
    this.newFedTax = newFedTax;
    return this;
  }

  public NewEmployee addNewFedTaxItem(NewFedTax newFedTaxItem) {
    if (this.newFedTax == null) {
      this.newFedTax = new ArrayList<>();
    }
    this.newFedTax.add(newFedTaxItem);
    return this;
  }

   /**
   * Get newFedTax
   * @return newFedTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NewFedTax> getNewFedTax() {
    return newFedTax;
  }


  public void setNewFedTax(List<NewFedTax> newFedTax) {
    
    
    
    this.newFedTax = newFedTax;
  }


  public NewEmployee newLocalTax(List<NewLocalTax> newLocalTax) {
    
    
    
    
    this.newLocalTax = newLocalTax;
    return this;
  }

  public NewEmployee addNewLocalTaxItem(NewLocalTax newLocalTaxItem) {
    if (this.newLocalTax == null) {
      this.newLocalTax = new ArrayList<>();
    }
    this.newLocalTax.add(newLocalTaxItem);
    return this;
  }

   /**
   * Get newLocalTax
   * @return newLocalTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NewLocalTax> getNewLocalTax() {
    return newLocalTax;
  }


  public void setNewLocalTax(List<NewLocalTax> newLocalTax) {
    
    
    
    this.newLocalTax = newLocalTax;
  }


  public NewEmployee newStateTax(List<NewStateTax> newStateTax) {
    
    
    
    
    this.newStateTax = newStateTax;
    return this;
  }

  public NewEmployee addNewStateTaxItem(NewStateTax newStateTaxItem) {
    if (this.newStateTax == null) {
      this.newStateTax = new ArrayList<>();
    }
    this.newStateTax.add(newStateTaxItem);
    return this;
  }

   /**
   * Get newStateTax
   * @return newStateTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NewStateTax> getNewStateTax() {
    return newStateTax;
  }


  public void setNewStateTax(List<NewStateTax> newStateTax) {
    
    
    
    this.newStateTax = newStateTax;
  }


  public NewEmployee newWorkEligibility(List<NewWorkEligibility> newWorkEligibility) {
    
    
    
    
    this.newWorkEligibility = newWorkEligibility;
    return this;
  }

  public NewEmployee addNewWorkEligibilityItem(NewWorkEligibility newWorkEligibilityItem) {
    if (this.newWorkEligibility == null) {
      this.newWorkEligibility = new ArrayList<>();
    }
    this.newWorkEligibility.add(newWorkEligibilityItem);
    return this;
  }

   /**
   * Get newWorkEligibility
   * @return newWorkEligibility
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<NewWorkEligibility> getNewWorkEligibility() {
    return newWorkEligibility;
  }


  public void setNewWorkEligibility(List<NewWorkEligibility> newWorkEligibility) {
    
    
    
    this.newWorkEligibility = newWorkEligibility;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the NewEmployee instance itself
   */
  public NewEmployee putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewEmployee newEmployee = (NewEmployee) o;
    return Objects.equals(this.title, newEmployee.title) &&
        Objects.equals(this.address1, newEmployee.address1) &&
        Objects.equals(this.address2, newEmployee.address2) &&
        Objects.equals(this.adjSeniorityDate, newEmployee.adjSeniorityDate) &&
        Objects.equals(this.annualSalary, newEmployee.annualSalary) &&
        Objects.equals(this.autoGenerateEmployeeId, newEmployee.autoGenerateEmployeeId) &&
        Objects.equals(this.autoPay, newEmployee.autoPay) &&
        Objects.equals(this.autoPayType, newEmployee.autoPayType) &&
        Objects.equals(this.baseRate, newEmployee.baseRate) &&
        Objects.equals(this.birthDate, newEmployee.birthDate) &&
        Objects.equals(this.city, newEmployee.city) &&
        Objects.equals(this.clockBadge, newEmployee.clockBadge) &&
        Objects.equals(this.companyNumber, newEmployee.companyNumber) &&
        Objects.equals(this.costCenter1, newEmployee.costCenter1) &&
        Objects.equals(this.costCenter2, newEmployee.costCenter2) &&
        Objects.equals(this.costCenter3, newEmployee.costCenter3) &&
        Objects.equals(this.country, newEmployee.country) &&
        Objects.equals(this.county, newEmployee.county) &&
        Objects.equals(this.defaultHours, newEmployee.defaultHours) &&
        Objects.equals(this.disability, newEmployee.disability) &&
        Objects.equals(this.eligibleForRehire, newEmployee.eligibleForRehire) &&
        Objects.equals(this.employee943, newEmployee.employee943) &&
        Objects.equals(this.employeeId, newEmployee.employeeId) &&
        Objects.equals(this.employeeStatus, newEmployee.employeeStatus) &&
        Objects.equals(this.employmentType, newEmployee.employmentType) &&
        Objects.equals(this.equalEmploymentOpportunityClass, newEmployee.equalEmploymentOpportunityClass) &&
        Objects.equals(this.ethnicity, newEmployee.ethnicity) &&
        Objects.equals(this.firstName, newEmployee.firstName) &&
        Objects.equals(this.fitwExempt, newEmployee.fitwExempt) &&
        Objects.equals(this.fitwExemptNotes, newEmployee.fitwExemptNotes) &&
        Objects.equals(this.fitwExemptReason, newEmployee.fitwExemptReason) &&
        Objects.equals(this.futaExempt, newEmployee.futaExempt) &&
        Objects.equals(this.futaExemptNotes, newEmployee.futaExemptNotes) &&
        Objects.equals(this.futaExemptReason, newEmployee.futaExemptReason) &&
        Objects.equals(this.hireDate, newEmployee.hireDate) &&
        Objects.equals(this.homePhone, newEmployee.homePhone) &&
        Objects.equals(this.isSupervisorReviewer, newEmployee.isSupervisorReviewer) &&
        Objects.equals(this.lastName, newEmployee.lastName) &&
        Objects.equals(this.maritalStatus, newEmployee.maritalStatus) &&
        Objects.equals(this.medExempt, newEmployee.medExempt) &&
        Objects.equals(this.medExemptNotes, newEmployee.medExemptNotes) &&
        Objects.equals(this.medExemptReason, newEmployee.medExemptReason) &&
        Objects.equals(this.middleName, newEmployee.middleName) &&
        Objects.equals(this.minimumWageExempt, newEmployee.minimumWageExempt) &&
        Objects.equals(this.nickname, newEmployee.nickname) &&
        Objects.equals(this.overrideTitle, newEmployee.overrideTitle) &&
        Objects.equals(this.overtimeExempt, newEmployee.overtimeExempt) &&
        Objects.equals(this.payFrequency, newEmployee.payFrequency) &&
        Objects.equals(this.payGrade, newEmployee.payGrade) &&
        Objects.equals(this.payGroup, newEmployee.payGroup) &&
        Objects.equals(this.payRateNote, newEmployee.payRateNote) &&
        Objects.equals(this.pension, newEmployee.pension) &&
        Objects.equals(this.personalEmailAddress, newEmployee.personalEmailAddress) &&
        Objects.equals(this.personalMobilePhone, newEmployee.personalMobilePhone) &&
        Objects.equals(this.positionCode, newEmployee.positionCode) &&
        Objects.equals(this.primaryPayRateEffectiveDate, newEmployee.primaryPayRateEffectiveDate) &&
        Objects.equals(this.priorLastName, newEmployee.priorLastName) &&
        Objects.equals(this.rateCode, newEmployee.rateCode) &&
        Objects.equals(this.ratePer, newEmployee.ratePer) &&
        Objects.equals(this.reviewerCo, newEmployee.reviewerCo) &&
        Objects.equals(this.reviewerId, newEmployee.reviewerId) &&
        Objects.equals(this.salary, newEmployee.salary) &&
        Objects.equals(this.salutation, newEmployee.salutation) &&
        Objects.equals(this.sex, newEmployee.sex) &&
        Objects.equals(this.shift, newEmployee.shift) &&
        Objects.equals(this.sitwExempt, newEmployee.sitwExempt) &&
        Objects.equals(this.sitwExemptNotes, newEmployee.sitwExemptNotes) &&
        Objects.equals(this.sitwExemptReason, newEmployee.sitwExemptReason) &&
        Objects.equals(this.smoker, newEmployee.smoker) &&
        Objects.equals(this.ssExempt, newEmployee.ssExempt) &&
        Objects.equals(this.ssExemptNotes, newEmployee.ssExemptNotes) &&
        Objects.equals(this.ssExemptReason, newEmployee.ssExemptReason) &&
        Objects.equals(this.ssn, newEmployee.ssn) &&
        Objects.equals(this.state, newEmployee.state) &&
        Objects.equals(this.statutory, newEmployee.statutory) &&
        Objects.equals(this.suffix, newEmployee.suffix) &&
        Objects.equals(this.suiExempt, newEmployee.suiExempt) &&
        Objects.equals(this.suiExemptNotes, newEmployee.suiExemptNotes) &&
        Objects.equals(this.suiExemptReason, newEmployee.suiExemptReason) &&
        Objects.equals(this.suiState, newEmployee.suiState) &&
        Objects.equals(this.supervisorCo, newEmployee.supervisorCo) &&
        Objects.equals(this.supervisorID, newEmployee.supervisorID) &&
        Objects.equals(this.taxDistributionCode1099R, newEmployee.taxDistributionCode1099R) &&
        Objects.equals(this.taxForm, newEmployee.taxForm) &&
        Objects.equals(this.tipped, newEmployee.tipped) &&
        Objects.equals(this.unionCode, newEmployee.unionCode) &&
        Objects.equals(this.unionDate, newEmployee.unionDate) &&
        Objects.equals(this.unionDues, newEmployee.unionDues) &&
        Objects.equals(this.unionInitFees, newEmployee.unionInitFees) &&
        Objects.equals(this.unionPosition, newEmployee.unionPosition) &&
        Objects.equals(this.veteran, newEmployee.veteran) &&
        Objects.equals(this.waliExempt, newEmployee.waliExempt) &&
        Objects.equals(this.waliExemptNotes, newEmployee.waliExemptNotes) &&
        Objects.equals(this.waliExemptReason, newEmployee.waliExemptReason) &&
        Objects.equals(this.workAddress1, newEmployee.workAddress1) &&
        Objects.equals(this.workAddress2, newEmployee.workAddress2) &&
        Objects.equals(this.workCity, newEmployee.workCity) &&
        Objects.equals(this.workCountry, newEmployee.workCountry) &&
        Objects.equals(this.workCounty, newEmployee.workCounty) &&
        Objects.equals(this.workEmailAddress, newEmployee.workEmailAddress) &&
        Objects.equals(this.workersComp, newEmployee.workersComp) &&
        Objects.equals(this.workExt, newEmployee.workExt) &&
        Objects.equals(this.workLocation, newEmployee.workLocation) &&
        Objects.equals(this.workMailStop, newEmployee.workMailStop) &&
        Objects.equals(this.workMobilePhone, newEmployee.workMobilePhone) &&
        Objects.equals(this.workPager, newEmployee.workPager) &&
        Objects.equals(this.workPhone, newEmployee.workPhone) &&
        Objects.equals(this.workState, newEmployee.workState) &&
        Objects.equals(this.workZip, newEmployee.workZip) &&
        Objects.equals(this.zip, newEmployee.zip) &&
        Objects.equals(this.syncWebTimeRecord, newEmployee.syncWebTimeRecord) &&
        Objects.equals(this.newBenefitClassSetup, newEmployee.newBenefitClassSetup) &&
        Objects.equals(this.newMainDirectDeposit, newEmployee.newMainDirectDeposit) &&
        Objects.equals(this.newAdditionalDirectDeposit, newEmployee.newAdditionalDirectDeposit) &&
        Objects.equals(this.newFedTax, newEmployee.newFedTax) &&
        Objects.equals(this.newLocalTax, newEmployee.newLocalTax) &&
        Objects.equals(this.newStateTax, newEmployee.newStateTax) &&
        Objects.equals(this.newWorkEligibility, newEmployee.newWorkEligibility)&&
        Objects.equals(this.additionalProperties, newEmployee.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, address1, address2, adjSeniorityDate, annualSalary, autoGenerateEmployeeId, autoPay, autoPayType, baseRate, birthDate, city, clockBadge, companyNumber, costCenter1, costCenter2, costCenter3, country, county, defaultHours, disability, eligibleForRehire, employee943, employeeId, employeeStatus, employmentType, equalEmploymentOpportunityClass, ethnicity, firstName, fitwExempt, fitwExemptNotes, fitwExemptReason, futaExempt, futaExemptNotes, futaExemptReason, hireDate, homePhone, isSupervisorReviewer, lastName, maritalStatus, medExempt, medExemptNotes, medExemptReason, middleName, minimumWageExempt, nickname, overrideTitle, overtimeExempt, payFrequency, payGrade, payGroup, payRateNote, pension, personalEmailAddress, personalMobilePhone, positionCode, primaryPayRateEffectiveDate, priorLastName, rateCode, ratePer, reviewerCo, reviewerId, salary, salutation, sex, shift, sitwExempt, sitwExemptNotes, sitwExemptReason, smoker, ssExempt, ssExemptNotes, ssExemptReason, ssn, state, statutory, suffix, suiExempt, suiExemptNotes, suiExemptReason, suiState, supervisorCo, supervisorID, taxDistributionCode1099R, taxForm, tipped, unionCode, unionDate, unionDues, unionInitFees, unionPosition, veteran, waliExempt, waliExemptNotes, waliExemptReason, workAddress1, workAddress2, workCity, workCountry, workCounty, workEmailAddress, workersComp, workExt, workLocation, workMailStop, workMobilePhone, workPager, workPhone, workState, workZip, zip, syncWebTimeRecord, newBenefitClassSetup, newMainDirectDeposit, newAdditionalDirectDeposit, newFedTax, newLocalTax, newStateTax, newWorkEligibility, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewEmployee {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    adjSeniorityDate: ").append(toIndentedString(adjSeniorityDate)).append("\n");
    sb.append("    annualSalary: ").append(toIndentedString(annualSalary)).append("\n");
    sb.append("    autoGenerateEmployeeId: ").append(toIndentedString(autoGenerateEmployeeId)).append("\n");
    sb.append("    autoPay: ").append(toIndentedString(autoPay)).append("\n");
    sb.append("    autoPayType: ").append(toIndentedString(autoPayType)).append("\n");
    sb.append("    baseRate: ").append(toIndentedString(baseRate)).append("\n");
    sb.append("    birthDate: ").append(toIndentedString(birthDate)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    clockBadge: ").append(toIndentedString(clockBadge)).append("\n");
    sb.append("    companyNumber: ").append(toIndentedString(companyNumber)).append("\n");
    sb.append("    costCenter1: ").append(toIndentedString(costCenter1)).append("\n");
    sb.append("    costCenter2: ").append(toIndentedString(costCenter2)).append("\n");
    sb.append("    costCenter3: ").append(toIndentedString(costCenter3)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    county: ").append(toIndentedString(county)).append("\n");
    sb.append("    defaultHours: ").append(toIndentedString(defaultHours)).append("\n");
    sb.append("    disability: ").append(toIndentedString(disability)).append("\n");
    sb.append("    eligibleForRehire: ").append(toIndentedString(eligibleForRehire)).append("\n");
    sb.append("    employee943: ").append(toIndentedString(employee943)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    employeeStatus: ").append(toIndentedString(employeeStatus)).append("\n");
    sb.append("    employmentType: ").append(toIndentedString(employmentType)).append("\n");
    sb.append("    equalEmploymentOpportunityClass: ").append(toIndentedString(equalEmploymentOpportunityClass)).append("\n");
    sb.append("    ethnicity: ").append(toIndentedString(ethnicity)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    fitwExempt: ").append(toIndentedString(fitwExempt)).append("\n");
    sb.append("    fitwExemptNotes: ").append(toIndentedString(fitwExemptNotes)).append("\n");
    sb.append("    fitwExemptReason: ").append(toIndentedString(fitwExemptReason)).append("\n");
    sb.append("    futaExempt: ").append(toIndentedString(futaExempt)).append("\n");
    sb.append("    futaExemptNotes: ").append(toIndentedString(futaExemptNotes)).append("\n");
    sb.append("    futaExemptReason: ").append(toIndentedString(futaExemptReason)).append("\n");
    sb.append("    hireDate: ").append(toIndentedString(hireDate)).append("\n");
    sb.append("    homePhone: ").append(toIndentedString(homePhone)).append("\n");
    sb.append("    isSupervisorReviewer: ").append(toIndentedString(isSupervisorReviewer)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    maritalStatus: ").append(toIndentedString(maritalStatus)).append("\n");
    sb.append("    medExempt: ").append(toIndentedString(medExempt)).append("\n");
    sb.append("    medExemptNotes: ").append(toIndentedString(medExemptNotes)).append("\n");
    sb.append("    medExemptReason: ").append(toIndentedString(medExemptReason)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    minimumWageExempt: ").append(toIndentedString(minimumWageExempt)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    overrideTitle: ").append(toIndentedString(overrideTitle)).append("\n");
    sb.append("    overtimeExempt: ").append(toIndentedString(overtimeExempt)).append("\n");
    sb.append("    payFrequency: ").append(toIndentedString(payFrequency)).append("\n");
    sb.append("    payGrade: ").append(toIndentedString(payGrade)).append("\n");
    sb.append("    payGroup: ").append(toIndentedString(payGroup)).append("\n");
    sb.append("    payRateNote: ").append(toIndentedString(payRateNote)).append("\n");
    sb.append("    pension: ").append(toIndentedString(pension)).append("\n");
    sb.append("    personalEmailAddress: ").append(toIndentedString(personalEmailAddress)).append("\n");
    sb.append("    personalMobilePhone: ").append(toIndentedString(personalMobilePhone)).append("\n");
    sb.append("    positionCode: ").append(toIndentedString(positionCode)).append("\n");
    sb.append("    primaryPayRateEffectiveDate: ").append(toIndentedString(primaryPayRateEffectiveDate)).append("\n");
    sb.append("    priorLastName: ").append(toIndentedString(priorLastName)).append("\n");
    sb.append("    rateCode: ").append(toIndentedString(rateCode)).append("\n");
    sb.append("    ratePer: ").append(toIndentedString(ratePer)).append("\n");
    sb.append("    reviewerCo: ").append(toIndentedString(reviewerCo)).append("\n");
    sb.append("    reviewerId: ").append(toIndentedString(reviewerId)).append("\n");
    sb.append("    salary: ").append(toIndentedString(salary)).append("\n");
    sb.append("    salutation: ").append(toIndentedString(salutation)).append("\n");
    sb.append("    sex: ").append(toIndentedString(sex)).append("\n");
    sb.append("    shift: ").append(toIndentedString(shift)).append("\n");
    sb.append("    sitwExempt: ").append(toIndentedString(sitwExempt)).append("\n");
    sb.append("    sitwExemptNotes: ").append(toIndentedString(sitwExemptNotes)).append("\n");
    sb.append("    sitwExemptReason: ").append(toIndentedString(sitwExemptReason)).append("\n");
    sb.append("    smoker: ").append(toIndentedString(smoker)).append("\n");
    sb.append("    ssExempt: ").append(toIndentedString(ssExempt)).append("\n");
    sb.append("    ssExemptNotes: ").append(toIndentedString(ssExemptNotes)).append("\n");
    sb.append("    ssExemptReason: ").append(toIndentedString(ssExemptReason)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    statutory: ").append(toIndentedString(statutory)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    suiExempt: ").append(toIndentedString(suiExempt)).append("\n");
    sb.append("    suiExemptNotes: ").append(toIndentedString(suiExemptNotes)).append("\n");
    sb.append("    suiExemptReason: ").append(toIndentedString(suiExemptReason)).append("\n");
    sb.append("    suiState: ").append(toIndentedString(suiState)).append("\n");
    sb.append("    supervisorCo: ").append(toIndentedString(supervisorCo)).append("\n");
    sb.append("    supervisorID: ").append(toIndentedString(supervisorID)).append("\n");
    sb.append("    taxDistributionCode1099R: ").append(toIndentedString(taxDistributionCode1099R)).append("\n");
    sb.append("    taxForm: ").append(toIndentedString(taxForm)).append("\n");
    sb.append("    tipped: ").append(toIndentedString(tipped)).append("\n");
    sb.append("    unionCode: ").append(toIndentedString(unionCode)).append("\n");
    sb.append("    unionDate: ").append(toIndentedString(unionDate)).append("\n");
    sb.append("    unionDues: ").append(toIndentedString(unionDues)).append("\n");
    sb.append("    unionInitFees: ").append(toIndentedString(unionInitFees)).append("\n");
    sb.append("    unionPosition: ").append(toIndentedString(unionPosition)).append("\n");
    sb.append("    veteran: ").append(toIndentedString(veteran)).append("\n");
    sb.append("    waliExempt: ").append(toIndentedString(waliExempt)).append("\n");
    sb.append("    waliExemptNotes: ").append(toIndentedString(waliExemptNotes)).append("\n");
    sb.append("    waliExemptReason: ").append(toIndentedString(waliExemptReason)).append("\n");
    sb.append("    workAddress1: ").append(toIndentedString(workAddress1)).append("\n");
    sb.append("    workAddress2: ").append(toIndentedString(workAddress2)).append("\n");
    sb.append("    workCity: ").append(toIndentedString(workCity)).append("\n");
    sb.append("    workCountry: ").append(toIndentedString(workCountry)).append("\n");
    sb.append("    workCounty: ").append(toIndentedString(workCounty)).append("\n");
    sb.append("    workEmailAddress: ").append(toIndentedString(workEmailAddress)).append("\n");
    sb.append("    workersComp: ").append(toIndentedString(workersComp)).append("\n");
    sb.append("    workExt: ").append(toIndentedString(workExt)).append("\n");
    sb.append("    workLocation: ").append(toIndentedString(workLocation)).append("\n");
    sb.append("    workMailStop: ").append(toIndentedString(workMailStop)).append("\n");
    sb.append("    workMobilePhone: ").append(toIndentedString(workMobilePhone)).append("\n");
    sb.append("    workPager: ").append(toIndentedString(workPager)).append("\n");
    sb.append("    workPhone: ").append(toIndentedString(workPhone)).append("\n");
    sb.append("    workState: ").append(toIndentedString(workState)).append("\n");
    sb.append("    workZip: ").append(toIndentedString(workZip)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("    syncWebTimeRecord: ").append(toIndentedString(syncWebTimeRecord)).append("\n");
    sb.append("    newBenefitClassSetup: ").append(toIndentedString(newBenefitClassSetup)).append("\n");
    sb.append("    newMainDirectDeposit: ").append(toIndentedString(newMainDirectDeposit)).append("\n");
    sb.append("    newAdditionalDirectDeposit: ").append(toIndentedString(newAdditionalDirectDeposit)).append("\n");
    sb.append("    newFedTax: ").append(toIndentedString(newFedTax)).append("\n");
    sb.append("    newLocalTax: ").append(toIndentedString(newLocalTax)).append("\n");
    sb.append("    newStateTax: ").append(toIndentedString(newStateTax)).append("\n");
    sb.append("    newWorkEligibility: ").append(toIndentedString(newWorkEligibility)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("address1");
    openapiFields.add("address2");
    openapiFields.add("adjSeniorityDate");
    openapiFields.add("annualSalary");
    openapiFields.add("autoGenerateEmployeeId");
    openapiFields.add("autoPay");
    openapiFields.add("autoPayType");
    openapiFields.add("baseRate");
    openapiFields.add("birthDate");
    openapiFields.add("city");
    openapiFields.add("clockBadge");
    openapiFields.add("companyNumber");
    openapiFields.add("costCenter1");
    openapiFields.add("costCenter2");
    openapiFields.add("costCenter3");
    openapiFields.add("country");
    openapiFields.add("county");
    openapiFields.add("defaultHours");
    openapiFields.add("disability");
    openapiFields.add("eligibleForRehire");
    openapiFields.add("employee943");
    openapiFields.add("employeeId");
    openapiFields.add("employeeStatus");
    openapiFields.add("employmentType");
    openapiFields.add("equalEmploymentOpportunityClass");
    openapiFields.add("ethnicity");
    openapiFields.add("firstName");
    openapiFields.add("fitwExempt");
    openapiFields.add("fitwExemptNotes");
    openapiFields.add("fitwExemptReason");
    openapiFields.add("futaExempt");
    openapiFields.add("futaExemptNotes");
    openapiFields.add("futaExemptReason");
    openapiFields.add("hireDate");
    openapiFields.add("homePhone");
    openapiFields.add("isSupervisorReviewer");
    openapiFields.add("lastName");
    openapiFields.add("maritalStatus");
    openapiFields.add("medExempt");
    openapiFields.add("medExemptNotes");
    openapiFields.add("medExemptReason");
    openapiFields.add("middleName");
    openapiFields.add("minimumWageExempt");
    openapiFields.add("nickname");
    openapiFields.add("overrideTitle");
    openapiFields.add("overtimeExempt");
    openapiFields.add("payFrequency");
    openapiFields.add("payGrade");
    openapiFields.add("payGroup");
    openapiFields.add("payRateNote");
    openapiFields.add("pension");
    openapiFields.add("personalEmailAddress");
    openapiFields.add("personalMobilePhone");
    openapiFields.add("positionCode");
    openapiFields.add("primaryPayRateEffectiveDate");
    openapiFields.add("priorLastName");
    openapiFields.add("rateCode");
    openapiFields.add("ratePer");
    openapiFields.add("reviewerCo");
    openapiFields.add("reviewerId");
    openapiFields.add("salary");
    openapiFields.add("salutation");
    openapiFields.add("sex");
    openapiFields.add("shift");
    openapiFields.add("sitwExempt");
    openapiFields.add("sitwExemptNotes");
    openapiFields.add("sitwExemptReason");
    openapiFields.add("smoker");
    openapiFields.add("ssExempt");
    openapiFields.add("ssExemptNotes");
    openapiFields.add("ssExemptReason");
    openapiFields.add("ssn");
    openapiFields.add("state");
    openapiFields.add("statutory");
    openapiFields.add("suffix");
    openapiFields.add("suiExempt");
    openapiFields.add("suiExemptNotes");
    openapiFields.add("suiExemptReason");
    openapiFields.add("suiState");
    openapiFields.add("supervisorCo");
    openapiFields.add("supervisorID");
    openapiFields.add("taxDistributionCode1099R");
    openapiFields.add("taxForm");
    openapiFields.add("tipped");
    openapiFields.add("unionCode");
    openapiFields.add("unionDate");
    openapiFields.add("unionDues");
    openapiFields.add("unionInitFees");
    openapiFields.add("unionPosition");
    openapiFields.add("veteran");
    openapiFields.add("waliExempt");
    openapiFields.add("waliExemptNotes");
    openapiFields.add("waliExemptReason");
    openapiFields.add("workAddress1");
    openapiFields.add("workAddress2");
    openapiFields.add("workCity");
    openapiFields.add("workCountry");
    openapiFields.add("workCounty");
    openapiFields.add("workEmailAddress");
    openapiFields.add("workersComp");
    openapiFields.add("workExt");
    openapiFields.add("workLocation");
    openapiFields.add("workMailStop");
    openapiFields.add("workMobilePhone");
    openapiFields.add("workPager");
    openapiFields.add("workPhone");
    openapiFields.add("workState");
    openapiFields.add("workZip");
    openapiFields.add("zip");
    openapiFields.add("syncWebTimeRecord");
    openapiFields.add("newBenefitClassSetup");
    openapiFields.add("newMainDirectDeposit");
    openapiFields.add("newAdditionalDirectDeposit");
    openapiFields.add("newFedTax");
    openapiFields.add("newLocalTax");
    openapiFields.add("newStateTax");
    openapiFields.add("newWorkEligibility");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("companyNumber");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to NewEmployee
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!NewEmployee.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NewEmployee is not found in the empty JSON string", NewEmployee.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NewEmployee.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("address1") != null && !jsonObj.get("address1").isJsonNull()) && !jsonObj.get("address1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address1").toString()));
      }
      if ((jsonObj.get("address2") != null && !jsonObj.get("address2").isJsonNull()) && !jsonObj.get("address2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address2").toString()));
      }
      if ((jsonObj.get("autoPayType") != null && !jsonObj.get("autoPayType").isJsonNull()) && !jsonObj.get("autoPayType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `autoPayType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("autoPayType").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("clockBadge") != null && !jsonObj.get("clockBadge").isJsonNull()) && !jsonObj.get("clockBadge").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clockBadge` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clockBadge").toString()));
      }
      if (!jsonObj.get("companyNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyNumber").toString()));
      }
      if ((jsonObj.get("costCenter1") != null && !jsonObj.get("costCenter1").isJsonNull()) && !jsonObj.get("costCenter1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `costCenter1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("costCenter1").toString()));
      }
      if ((jsonObj.get("costCenter2") != null && !jsonObj.get("costCenter2").isJsonNull()) && !jsonObj.get("costCenter2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `costCenter2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("costCenter2").toString()));
      }
      if ((jsonObj.get("costCenter3") != null && !jsonObj.get("costCenter3").isJsonNull()) && !jsonObj.get("costCenter3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `costCenter3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("costCenter3").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("county") != null && !jsonObj.get("county").isJsonNull()) && !jsonObj.get("county").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `county` to be a primitive type in the JSON string but got `%s`", jsonObj.get("county").toString()));
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("employeeStatus") != null && !jsonObj.get("employeeStatus").isJsonNull()) && !jsonObj.get("employeeStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeStatus").toString()));
      }
      if ((jsonObj.get("employmentType") != null && !jsonObj.get("employmentType").isJsonNull()) && !jsonObj.get("employmentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employmentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employmentType").toString()));
      }
      if ((jsonObj.get("equalEmploymentOpportunityClass") != null && !jsonObj.get("equalEmploymentOpportunityClass").isJsonNull()) && !jsonObj.get("equalEmploymentOpportunityClass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `equalEmploymentOpportunityClass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("equalEmploymentOpportunityClass").toString()));
      }
      if ((jsonObj.get("ethnicity") != null && !jsonObj.get("ethnicity").isJsonNull()) && !jsonObj.get("ethnicity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ethnicity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ethnicity").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("fitwExemptNotes") != null && !jsonObj.get("fitwExemptNotes").isJsonNull()) && !jsonObj.get("fitwExemptNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fitwExemptNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fitwExemptNotes").toString()));
      }
      if ((jsonObj.get("fitwExemptReason") != null && !jsonObj.get("fitwExemptReason").isJsonNull()) && !jsonObj.get("fitwExemptReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fitwExemptReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fitwExemptReason").toString()));
      }
      if ((jsonObj.get("futaExemptNotes") != null && !jsonObj.get("futaExemptNotes").isJsonNull()) && !jsonObj.get("futaExemptNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `futaExemptNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("futaExemptNotes").toString()));
      }
      if ((jsonObj.get("futaExemptReason") != null && !jsonObj.get("futaExemptReason").isJsonNull()) && !jsonObj.get("futaExemptReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `futaExemptReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("futaExemptReason").toString()));
      }
      if ((jsonObj.get("homePhone") != null && !jsonObj.get("homePhone").isJsonNull()) && !jsonObj.get("homePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homePhone").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("maritalStatus") != null && !jsonObj.get("maritalStatus").isJsonNull()) && !jsonObj.get("maritalStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maritalStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maritalStatus").toString()));
      }
      if ((jsonObj.get("medExemptNotes") != null && !jsonObj.get("medExemptNotes").isJsonNull()) && !jsonObj.get("medExemptNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `medExemptNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("medExemptNotes").toString()));
      }
      if ((jsonObj.get("medExemptReason") != null && !jsonObj.get("medExemptReason").isJsonNull()) && !jsonObj.get("medExemptReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `medExemptReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("medExemptReason").toString()));
      }
      if ((jsonObj.get("middleName") != null && !jsonObj.get("middleName").isJsonNull()) && !jsonObj.get("middleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middleName").toString()));
      }
      if ((jsonObj.get("nickname") != null && !jsonObj.get("nickname").isJsonNull()) && !jsonObj.get("nickname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nickname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nickname").toString()));
      }
      if ((jsonObj.get("payFrequency") != null && !jsonObj.get("payFrequency").isJsonNull()) && !jsonObj.get("payFrequency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payFrequency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payFrequency").toString()));
      }
      if ((jsonObj.get("payGrade") != null && !jsonObj.get("payGrade").isJsonNull()) && !jsonObj.get("payGrade").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGrade` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGrade").toString()));
      }
      if ((jsonObj.get("payGroup") != null && !jsonObj.get("payGroup").isJsonNull()) && !jsonObj.get("payGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroup").toString()));
      }
      if ((jsonObj.get("payRateNote") != null && !jsonObj.get("payRateNote").isJsonNull()) && !jsonObj.get("payRateNote").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payRateNote` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payRateNote").toString()));
      }
      if ((jsonObj.get("personalEmailAddress") != null && !jsonObj.get("personalEmailAddress").isJsonNull()) && !jsonObj.get("personalEmailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalEmailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalEmailAddress").toString()));
      }
      if ((jsonObj.get("personalMobilePhone") != null && !jsonObj.get("personalMobilePhone").isJsonNull()) && !jsonObj.get("personalMobilePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personalMobilePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personalMobilePhone").toString()));
      }
      if ((jsonObj.get("positionCode") != null && !jsonObj.get("positionCode").isJsonNull()) && !jsonObj.get("positionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `positionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("positionCode").toString()));
      }
      if ((jsonObj.get("priorLastName") != null && !jsonObj.get("priorLastName").isJsonNull()) && !jsonObj.get("priorLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priorLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priorLastName").toString()));
      }
      if ((jsonObj.get("rateCode") != null && !jsonObj.get("rateCode").isJsonNull()) && !jsonObj.get("rateCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rateCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rateCode").toString()));
      }
      if ((jsonObj.get("ratePer") != null && !jsonObj.get("ratePer").isJsonNull()) && !jsonObj.get("ratePer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ratePer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ratePer").toString()));
      }
      if ((jsonObj.get("reviewerCo") != null && !jsonObj.get("reviewerCo").isJsonNull()) && !jsonObj.get("reviewerCo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reviewerCo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reviewerCo").toString()));
      }
      if ((jsonObj.get("reviewerId") != null && !jsonObj.get("reviewerId").isJsonNull()) && !jsonObj.get("reviewerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reviewerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reviewerId").toString()));
      }
      if ((jsonObj.get("salutation") != null && !jsonObj.get("salutation").isJsonNull()) && !jsonObj.get("salutation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salutation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salutation").toString()));
      }
      if ((jsonObj.get("sex") != null && !jsonObj.get("sex").isJsonNull()) && !jsonObj.get("sex").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sex` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sex").toString()));
      }
      if ((jsonObj.get("shift") != null && !jsonObj.get("shift").isJsonNull()) && !jsonObj.get("shift").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shift` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shift").toString()));
      }
      if ((jsonObj.get("sitwExemptNotes") != null && !jsonObj.get("sitwExemptNotes").isJsonNull()) && !jsonObj.get("sitwExemptNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sitwExemptNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sitwExemptNotes").toString()));
      }
      if ((jsonObj.get("sitwExemptReason") != null && !jsonObj.get("sitwExemptReason").isJsonNull()) && !jsonObj.get("sitwExemptReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sitwExemptReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sitwExemptReason").toString()));
      }
      if ((jsonObj.get("ssExemptNotes") != null && !jsonObj.get("ssExemptNotes").isJsonNull()) && !jsonObj.get("ssExemptNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssExemptNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssExemptNotes").toString()));
      }
      if ((jsonObj.get("ssExemptReason") != null && !jsonObj.get("ssExemptReason").isJsonNull()) && !jsonObj.get("ssExemptReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssExemptReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssExemptReason").toString()));
      }
      if ((jsonObj.get("ssn") != null && !jsonObj.get("ssn").isJsonNull()) && !jsonObj.get("ssn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssn").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("suffix") != null && !jsonObj.get("suffix").isJsonNull()) && !jsonObj.get("suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suffix").toString()));
      }
      if ((jsonObj.get("suiExemptNotes") != null && !jsonObj.get("suiExemptNotes").isJsonNull()) && !jsonObj.get("suiExemptNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suiExemptNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suiExemptNotes").toString()));
      }
      if ((jsonObj.get("suiExemptReason") != null && !jsonObj.get("suiExemptReason").isJsonNull()) && !jsonObj.get("suiExemptReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suiExemptReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suiExemptReason").toString()));
      }
      if ((jsonObj.get("suiState") != null && !jsonObj.get("suiState").isJsonNull()) && !jsonObj.get("suiState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suiState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suiState").toString()));
      }
      if ((jsonObj.get("supervisorCo") != null && !jsonObj.get("supervisorCo").isJsonNull()) && !jsonObj.get("supervisorCo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorCo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorCo").toString()));
      }
      if ((jsonObj.get("supervisorID") != null && !jsonObj.get("supervisorID").isJsonNull()) && !jsonObj.get("supervisorID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorID").toString()));
      }
      if ((jsonObj.get("taxDistributionCode1099R") != null && !jsonObj.get("taxDistributionCode1099R").isJsonNull()) && !jsonObj.get("taxDistributionCode1099R").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxDistributionCode1099R` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxDistributionCode1099R").toString()));
      }
      if ((jsonObj.get("taxForm") != null && !jsonObj.get("taxForm").isJsonNull()) && !jsonObj.get("taxForm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxForm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxForm").toString()));
      }
      if ((jsonObj.get("tipped") != null && !jsonObj.get("tipped").isJsonNull()) && !jsonObj.get("tipped").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tipped` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tipped").toString()));
      }
      if ((jsonObj.get("unionCode") != null && !jsonObj.get("unionCode").isJsonNull()) && !jsonObj.get("unionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unionCode").toString()));
      }
      if ((jsonObj.get("unionPosition") != null && !jsonObj.get("unionPosition").isJsonNull()) && !jsonObj.get("unionPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unionPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unionPosition").toString()));
      }
      if ((jsonObj.get("waliExemptNotes") != null && !jsonObj.get("waliExemptNotes").isJsonNull()) && !jsonObj.get("waliExemptNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `waliExemptNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("waliExemptNotes").toString()));
      }
      if ((jsonObj.get("waliExemptReason") != null && !jsonObj.get("waliExemptReason").isJsonNull()) && !jsonObj.get("waliExemptReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `waliExemptReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("waliExemptReason").toString()));
      }
      if ((jsonObj.get("workAddress1") != null && !jsonObj.get("workAddress1").isJsonNull()) && !jsonObj.get("workAddress1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workAddress1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workAddress1").toString()));
      }
      if ((jsonObj.get("workAddress2") != null && !jsonObj.get("workAddress2").isJsonNull()) && !jsonObj.get("workAddress2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workAddress2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workAddress2").toString()));
      }
      if ((jsonObj.get("workCity") != null && !jsonObj.get("workCity").isJsonNull()) && !jsonObj.get("workCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workCity").toString()));
      }
      if ((jsonObj.get("workCountry") != null && !jsonObj.get("workCountry").isJsonNull()) && !jsonObj.get("workCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workCountry").toString()));
      }
      if ((jsonObj.get("workCounty") != null && !jsonObj.get("workCounty").isJsonNull()) && !jsonObj.get("workCounty").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workCounty` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workCounty").toString()));
      }
      if ((jsonObj.get("workEmailAddress") != null && !jsonObj.get("workEmailAddress").isJsonNull()) && !jsonObj.get("workEmailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workEmailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workEmailAddress").toString()));
      }
      if ((jsonObj.get("workersComp") != null && !jsonObj.get("workersComp").isJsonNull()) && !jsonObj.get("workersComp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workersComp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workersComp").toString()));
      }
      if ((jsonObj.get("workExt") != null && !jsonObj.get("workExt").isJsonNull()) && !jsonObj.get("workExt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workExt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workExt").toString()));
      }
      if ((jsonObj.get("workLocation") != null && !jsonObj.get("workLocation").isJsonNull()) && !jsonObj.get("workLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workLocation").toString()));
      }
      if ((jsonObj.get("workMailStop") != null && !jsonObj.get("workMailStop").isJsonNull()) && !jsonObj.get("workMailStop").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workMailStop` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workMailStop").toString()));
      }
      if ((jsonObj.get("workMobilePhone") != null && !jsonObj.get("workMobilePhone").isJsonNull()) && !jsonObj.get("workMobilePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workMobilePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workMobilePhone").toString()));
      }
      if ((jsonObj.get("workPager") != null && !jsonObj.get("workPager").isJsonNull()) && !jsonObj.get("workPager").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPager` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPager").toString()));
      }
      if ((jsonObj.get("workPhone") != null && !jsonObj.get("workPhone").isJsonNull()) && !jsonObj.get("workPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhone").toString()));
      }
      if ((jsonObj.get("workState") != null && !jsonObj.get("workState").isJsonNull()) && !jsonObj.get("workState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workState").toString()));
      }
      if ((jsonObj.get("workZip") != null && !jsonObj.get("workZip").isJsonNull()) && !jsonObj.get("workZip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workZip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workZip").toString()));
      }
      if ((jsonObj.get("zip") != null && !jsonObj.get("zip").isJsonNull()) && !jsonObj.get("zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zip").toString()));
      }
      if (jsonObj.get("newBenefitClassSetup") != null && !jsonObj.get("newBenefitClassSetup").isJsonNull()) {
        JsonArray jsonArraynewBenefitClassSetup = jsonObj.getAsJsonArray("newBenefitClassSetup");
        if (jsonArraynewBenefitClassSetup != null) {
          // ensure the json data is an array
          if (!jsonObj.get("newBenefitClassSetup").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `newBenefitClassSetup` to be an array in the JSON string but got `%s`", jsonObj.get("newBenefitClassSetup").toString()));
          }

          // validate the optional field `newBenefitClassSetup` (array)
          for (int i = 0; i < jsonArraynewBenefitClassSetup.size(); i++) {
            NewBenefitClassSetup.validateJsonObject(jsonArraynewBenefitClassSetup.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("newMainDirectDeposit") != null && !jsonObj.get("newMainDirectDeposit").isJsonNull()) {
        JsonArray jsonArraynewMainDirectDeposit = jsonObj.getAsJsonArray("newMainDirectDeposit");
        if (jsonArraynewMainDirectDeposit != null) {
          // ensure the json data is an array
          if (!jsonObj.get("newMainDirectDeposit").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `newMainDirectDeposit` to be an array in the JSON string but got `%s`", jsonObj.get("newMainDirectDeposit").toString()));
          }

          // validate the optional field `newMainDirectDeposit` (array)
          for (int i = 0; i < jsonArraynewMainDirectDeposit.size(); i++) {
            NewMainDirectDeposit.validateJsonObject(jsonArraynewMainDirectDeposit.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("newAdditionalDirectDeposit") != null && !jsonObj.get("newAdditionalDirectDeposit").isJsonNull()) {
        JsonArray jsonArraynewAdditionalDirectDeposit = jsonObj.getAsJsonArray("newAdditionalDirectDeposit");
        if (jsonArraynewAdditionalDirectDeposit != null) {
          // ensure the json data is an array
          if (!jsonObj.get("newAdditionalDirectDeposit").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `newAdditionalDirectDeposit` to be an array in the JSON string but got `%s`", jsonObj.get("newAdditionalDirectDeposit").toString()));
          }

          // validate the optional field `newAdditionalDirectDeposit` (array)
          for (int i = 0; i < jsonArraynewAdditionalDirectDeposit.size(); i++) {
            NewAdditionalDirectDeposit.validateJsonObject(jsonArraynewAdditionalDirectDeposit.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("newFedTax") != null && !jsonObj.get("newFedTax").isJsonNull()) {
        JsonArray jsonArraynewFedTax = jsonObj.getAsJsonArray("newFedTax");
        if (jsonArraynewFedTax != null) {
          // ensure the json data is an array
          if (!jsonObj.get("newFedTax").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `newFedTax` to be an array in the JSON string but got `%s`", jsonObj.get("newFedTax").toString()));
          }

          // validate the optional field `newFedTax` (array)
          for (int i = 0; i < jsonArraynewFedTax.size(); i++) {
            NewFedTax.validateJsonObject(jsonArraynewFedTax.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("newLocalTax") != null && !jsonObj.get("newLocalTax").isJsonNull()) {
        JsonArray jsonArraynewLocalTax = jsonObj.getAsJsonArray("newLocalTax");
        if (jsonArraynewLocalTax != null) {
          // ensure the json data is an array
          if (!jsonObj.get("newLocalTax").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `newLocalTax` to be an array in the JSON string but got `%s`", jsonObj.get("newLocalTax").toString()));
          }

          // validate the optional field `newLocalTax` (array)
          for (int i = 0; i < jsonArraynewLocalTax.size(); i++) {
            NewLocalTax.validateJsonObject(jsonArraynewLocalTax.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("newStateTax") != null && !jsonObj.get("newStateTax").isJsonNull()) {
        JsonArray jsonArraynewStateTax = jsonObj.getAsJsonArray("newStateTax");
        if (jsonArraynewStateTax != null) {
          // ensure the json data is an array
          if (!jsonObj.get("newStateTax").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `newStateTax` to be an array in the JSON string but got `%s`", jsonObj.get("newStateTax").toString()));
          }

          // validate the optional field `newStateTax` (array)
          for (int i = 0; i < jsonArraynewStateTax.size(); i++) {
            NewStateTax.validateJsonObject(jsonArraynewStateTax.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("newWorkEligibility") != null && !jsonObj.get("newWorkEligibility").isJsonNull()) {
        JsonArray jsonArraynewWorkEligibility = jsonObj.getAsJsonArray("newWorkEligibility");
        if (jsonArraynewWorkEligibility != null) {
          // ensure the json data is an array
          if (!jsonObj.get("newWorkEligibility").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `newWorkEligibility` to be an array in the JSON string but got `%s`", jsonObj.get("newWorkEligibility").toString()));
          }

          // validate the optional field `newWorkEligibility` (array)
          for (int i = 0; i < jsonArraynewWorkEligibility.size(); i++) {
            NewWorkEligibility.validateJsonObject(jsonArraynewWorkEligibility.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NewEmployee.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NewEmployee' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NewEmployee> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NewEmployee.class));

       return (TypeAdapter<T>) new TypeAdapter<NewEmployee>() {
           @Override
           public void write(JsonWriter out, NewEmployee value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public NewEmployee read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             NewEmployee instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of NewEmployee given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of NewEmployee
  * @throws IOException if the JSON string is invalid with respect to NewEmployee
  */
  public static NewEmployee fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NewEmployee.class);
  }

 /**
  * Convert an instance of NewEmployee to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

