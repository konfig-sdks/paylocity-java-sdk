/*
 * WebLink API
 * For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview
 *
 * The version of the OpenAPI document: v2
 * Contact: webservices@paylocity.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.NewAdditionalDirectDeposit;
import com.konfigthis.client.model.NewBenefitClassSetup;
import com.konfigthis.client.model.NewFedTax;
import com.konfigthis.client.model.NewLocalTax;
import com.konfigthis.client.model.NewMainDirectDeposit;
import com.konfigthis.client.model.NewStateTax;
import com.konfigthis.client.model.NewWorkEligibility;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for NewEmployee
 */
public class NewEmployeeTest {
    private final NewEmployee model = new NewEmployee();

    /**
     * Model tests for NewEmployee
     */
    @Test
    public void testNewEmployee() {
        // TODO: test NewEmployee
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'address1'
     */
    @Test
    public void address1Test() {
        // TODO: test address1
    }

    /**
     * Test the property 'address2'
     */
    @Test
    public void address2Test() {
        // TODO: test address2
    }

    /**
     * Test the property 'adjSeniorityDate'
     */
    @Test
    public void adjSeniorityDateTest() {
        // TODO: test adjSeniorityDate
    }

    /**
     * Test the property 'annualSalary'
     */
    @Test
    public void annualSalaryTest() {
        // TODO: test annualSalary
    }

    /**
     * Test the property 'autoGenerateEmployeeId'
     */
    @Test
    public void autoGenerateEmployeeIdTest() {
        // TODO: test autoGenerateEmployeeId
    }

    /**
     * Test the property 'autoPay'
     */
    @Test
    public void autoPayTest() {
        // TODO: test autoPay
    }

    /**
     * Test the property 'autoPayType'
     */
    @Test
    public void autoPayTypeTest() {
        // TODO: test autoPayType
    }

    /**
     * Test the property 'baseRate'
     */
    @Test
    public void baseRateTest() {
        // TODO: test baseRate
    }

    /**
     * Test the property 'birthDate'
     */
    @Test
    public void birthDateTest() {
        // TODO: test birthDate
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'clockBadge'
     */
    @Test
    public void clockBadgeTest() {
        // TODO: test clockBadge
    }

    /**
     * Test the property 'companyNumber'
     */
    @Test
    public void companyNumberTest() {
        // TODO: test companyNumber
    }

    /**
     * Test the property 'costCenter1'
     */
    @Test
    public void costCenter1Test() {
        // TODO: test costCenter1
    }

    /**
     * Test the property 'costCenter2'
     */
    @Test
    public void costCenter2Test() {
        // TODO: test costCenter2
    }

    /**
     * Test the property 'costCenter3'
     */
    @Test
    public void costCenter3Test() {
        // TODO: test costCenter3
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'county'
     */
    @Test
    public void countyTest() {
        // TODO: test county
    }

    /**
     * Test the property 'defaultHours'
     */
    @Test
    public void defaultHoursTest() {
        // TODO: test defaultHours
    }

    /**
     * Test the property 'disability'
     */
    @Test
    public void disabilityTest() {
        // TODO: test disability
    }

    /**
     * Test the property 'eligibleForRehire'
     */
    @Test
    public void eligibleForRehireTest() {
        // TODO: test eligibleForRehire
    }

    /**
     * Test the property 'employee943'
     */
    @Test
    public void employee943Test() {
        // TODO: test employee943
    }

    /**
     * Test the property 'employeeId'
     */
    @Test
    public void employeeIdTest() {
        // TODO: test employeeId
    }

    /**
     * Test the property 'employeeStatus'
     */
    @Test
    public void employeeStatusTest() {
        // TODO: test employeeStatus
    }

    /**
     * Test the property 'employmentType'
     */
    @Test
    public void employmentTypeTest() {
        // TODO: test employmentType
    }

    /**
     * Test the property 'equalEmploymentOpportunityClass'
     */
    @Test
    public void equalEmploymentOpportunityClassTest() {
        // TODO: test equalEmploymentOpportunityClass
    }

    /**
     * Test the property 'ethnicity'
     */
    @Test
    public void ethnicityTest() {
        // TODO: test ethnicity
    }

    /**
     * Test the property 'firstName'
     */
    @Test
    public void firstNameTest() {
        // TODO: test firstName
    }

    /**
     * Test the property 'fitwExempt'
     */
    @Test
    public void fitwExemptTest() {
        // TODO: test fitwExempt
    }

    /**
     * Test the property 'fitwExemptNotes'
     */
    @Test
    public void fitwExemptNotesTest() {
        // TODO: test fitwExemptNotes
    }

    /**
     * Test the property 'fitwExemptReason'
     */
    @Test
    public void fitwExemptReasonTest() {
        // TODO: test fitwExemptReason
    }

    /**
     * Test the property 'futaExempt'
     */
    @Test
    public void futaExemptTest() {
        // TODO: test futaExempt
    }

    /**
     * Test the property 'futaExemptNotes'
     */
    @Test
    public void futaExemptNotesTest() {
        // TODO: test futaExemptNotes
    }

    /**
     * Test the property 'futaExemptReason'
     */
    @Test
    public void futaExemptReasonTest() {
        // TODO: test futaExemptReason
    }

    /**
     * Test the property 'hireDate'
     */
    @Test
    public void hireDateTest() {
        // TODO: test hireDate
    }

    /**
     * Test the property 'homePhone'
     */
    @Test
    public void homePhoneTest() {
        // TODO: test homePhone
    }

    /**
     * Test the property 'isSupervisorReviewer'
     */
    @Test
    public void isSupervisorReviewerTest() {
        // TODO: test isSupervisorReviewer
    }

    /**
     * Test the property 'lastName'
     */
    @Test
    public void lastNameTest() {
        // TODO: test lastName
    }

    /**
     * Test the property 'maritalStatus'
     */
    @Test
    public void maritalStatusTest() {
        // TODO: test maritalStatus
    }

    /**
     * Test the property 'medExempt'
     */
    @Test
    public void medExemptTest() {
        // TODO: test medExempt
    }

    /**
     * Test the property 'medExemptNotes'
     */
    @Test
    public void medExemptNotesTest() {
        // TODO: test medExemptNotes
    }

    /**
     * Test the property 'medExemptReason'
     */
    @Test
    public void medExemptReasonTest() {
        // TODO: test medExemptReason
    }

    /**
     * Test the property 'middleName'
     */
    @Test
    public void middleNameTest() {
        // TODO: test middleName
    }

    /**
     * Test the property 'minimumWageExempt'
     */
    @Test
    public void minimumWageExemptTest() {
        // TODO: test minimumWageExempt
    }

    /**
     * Test the property 'nickname'
     */
    @Test
    public void nicknameTest() {
        // TODO: test nickname
    }

    /**
     * Test the property 'overrideTitle'
     */
    @Test
    public void overrideTitleTest() {
        // TODO: test overrideTitle
    }

    /**
     * Test the property 'overtimeExempt'
     */
    @Test
    public void overtimeExemptTest() {
        // TODO: test overtimeExempt
    }

    /**
     * Test the property 'payFrequency'
     */
    @Test
    public void payFrequencyTest() {
        // TODO: test payFrequency
    }

    /**
     * Test the property 'payGrade'
     */
    @Test
    public void payGradeTest() {
        // TODO: test payGrade
    }

    /**
     * Test the property 'payGroup'
     */
    @Test
    public void payGroupTest() {
        // TODO: test payGroup
    }

    /**
     * Test the property 'payRateNote'
     */
    @Test
    public void payRateNoteTest() {
        // TODO: test payRateNote
    }

    /**
     * Test the property 'pension'
     */
    @Test
    public void pensionTest() {
        // TODO: test pension
    }

    /**
     * Test the property 'personalEmailAddress'
     */
    @Test
    public void personalEmailAddressTest() {
        // TODO: test personalEmailAddress
    }

    /**
     * Test the property 'personalMobilePhone'
     */
    @Test
    public void personalMobilePhoneTest() {
        // TODO: test personalMobilePhone
    }

    /**
     * Test the property 'positionCode'
     */
    @Test
    public void positionCodeTest() {
        // TODO: test positionCode
    }

    /**
     * Test the property 'primaryPayRateEffectiveDate'
     */
    @Test
    public void primaryPayRateEffectiveDateTest() {
        // TODO: test primaryPayRateEffectiveDate
    }

    /**
     * Test the property 'priorLastName'
     */
    @Test
    public void priorLastNameTest() {
        // TODO: test priorLastName
    }

    /**
     * Test the property 'rateCode'
     */
    @Test
    public void rateCodeTest() {
        // TODO: test rateCode
    }

    /**
     * Test the property 'ratePer'
     */
    @Test
    public void ratePerTest() {
        // TODO: test ratePer
    }

    /**
     * Test the property 'reviewerCo'
     */
    @Test
    public void reviewerCoTest() {
        // TODO: test reviewerCo
    }

    /**
     * Test the property 'reviewerId'
     */
    @Test
    public void reviewerIdTest() {
        // TODO: test reviewerId
    }

    /**
     * Test the property 'salary'
     */
    @Test
    public void salaryTest() {
        // TODO: test salary
    }

    /**
     * Test the property 'salutation'
     */
    @Test
    public void salutationTest() {
        // TODO: test salutation
    }

    /**
     * Test the property 'sex'
     */
    @Test
    public void sexTest() {
        // TODO: test sex
    }

    /**
     * Test the property 'shift'
     */
    @Test
    public void shiftTest() {
        // TODO: test shift
    }

    /**
     * Test the property 'sitwExempt'
     */
    @Test
    public void sitwExemptTest() {
        // TODO: test sitwExempt
    }

    /**
     * Test the property 'sitwExemptNotes'
     */
    @Test
    public void sitwExemptNotesTest() {
        // TODO: test sitwExemptNotes
    }

    /**
     * Test the property 'sitwExemptReason'
     */
    @Test
    public void sitwExemptReasonTest() {
        // TODO: test sitwExemptReason
    }

    /**
     * Test the property 'smoker'
     */
    @Test
    public void smokerTest() {
        // TODO: test smoker
    }

    /**
     * Test the property 'ssExempt'
     */
    @Test
    public void ssExemptTest() {
        // TODO: test ssExempt
    }

    /**
     * Test the property 'ssExemptNotes'
     */
    @Test
    public void ssExemptNotesTest() {
        // TODO: test ssExemptNotes
    }

    /**
     * Test the property 'ssExemptReason'
     */
    @Test
    public void ssExemptReasonTest() {
        // TODO: test ssExemptReason
    }

    /**
     * Test the property 'ssn'
     */
    @Test
    public void ssnTest() {
        // TODO: test ssn
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'statutory'
     */
    @Test
    public void statutoryTest() {
        // TODO: test statutory
    }

    /**
     * Test the property 'suffix'
     */
    @Test
    public void suffixTest() {
        // TODO: test suffix
    }

    /**
     * Test the property 'suiExempt'
     */
    @Test
    public void suiExemptTest() {
        // TODO: test suiExempt
    }

    /**
     * Test the property 'suiExemptNotes'
     */
    @Test
    public void suiExemptNotesTest() {
        // TODO: test suiExemptNotes
    }

    /**
     * Test the property 'suiExemptReason'
     */
    @Test
    public void suiExemptReasonTest() {
        // TODO: test suiExemptReason
    }

    /**
     * Test the property 'suiState'
     */
    @Test
    public void suiStateTest() {
        // TODO: test suiState
    }

    /**
     * Test the property 'supervisorCo'
     */
    @Test
    public void supervisorCoTest() {
        // TODO: test supervisorCo
    }

    /**
     * Test the property 'supervisorID'
     */
    @Test
    public void supervisorIDTest() {
        // TODO: test supervisorID
    }

    /**
     * Test the property 'taxDistributionCode1099R'
     */
    @Test
    public void taxDistributionCode1099RTest() {
        // TODO: test taxDistributionCode1099R
    }

    /**
     * Test the property 'taxForm'
     */
    @Test
    public void taxFormTest() {
        // TODO: test taxForm
    }

    /**
     * Test the property 'tipped'
     */
    @Test
    public void tippedTest() {
        // TODO: test tipped
    }

    /**
     * Test the property 'unionCode'
     */
    @Test
    public void unionCodeTest() {
        // TODO: test unionCode
    }

    /**
     * Test the property 'unionDate'
     */
    @Test
    public void unionDateTest() {
        // TODO: test unionDate
    }

    /**
     * Test the property 'unionDues'
     */
    @Test
    public void unionDuesTest() {
        // TODO: test unionDues
    }

    /**
     * Test the property 'unionInitFees'
     */
    @Test
    public void unionInitFeesTest() {
        // TODO: test unionInitFees
    }

    /**
     * Test the property 'unionPosition'
     */
    @Test
    public void unionPositionTest() {
        // TODO: test unionPosition
    }

    /**
     * Test the property 'veteran'
     */
    @Test
    public void veteranTest() {
        // TODO: test veteran
    }

    /**
     * Test the property 'waliExempt'
     */
    @Test
    public void waliExemptTest() {
        // TODO: test waliExempt
    }

    /**
     * Test the property 'waliExemptNotes'
     */
    @Test
    public void waliExemptNotesTest() {
        // TODO: test waliExemptNotes
    }

    /**
     * Test the property 'waliExemptReason'
     */
    @Test
    public void waliExemptReasonTest() {
        // TODO: test waliExemptReason
    }

    /**
     * Test the property 'workAddress1'
     */
    @Test
    public void workAddress1Test() {
        // TODO: test workAddress1
    }

    /**
     * Test the property 'workAddress2'
     */
    @Test
    public void workAddress2Test() {
        // TODO: test workAddress2
    }

    /**
     * Test the property 'workCity'
     */
    @Test
    public void workCityTest() {
        // TODO: test workCity
    }

    /**
     * Test the property 'workCountry'
     */
    @Test
    public void workCountryTest() {
        // TODO: test workCountry
    }

    /**
     * Test the property 'workCounty'
     */
    @Test
    public void workCountyTest() {
        // TODO: test workCounty
    }

    /**
     * Test the property 'workEmailAddress'
     */
    @Test
    public void workEmailAddressTest() {
        // TODO: test workEmailAddress
    }

    /**
     * Test the property 'workersComp'
     */
    @Test
    public void workersCompTest() {
        // TODO: test workersComp
    }

    /**
     * Test the property 'workExt'
     */
    @Test
    public void workExtTest() {
        // TODO: test workExt
    }

    /**
     * Test the property 'workLocation'
     */
    @Test
    public void workLocationTest() {
        // TODO: test workLocation
    }

    /**
     * Test the property 'workMailStop'
     */
    @Test
    public void workMailStopTest() {
        // TODO: test workMailStop
    }

    /**
     * Test the property 'workMobilePhone'
     */
    @Test
    public void workMobilePhoneTest() {
        // TODO: test workMobilePhone
    }

    /**
     * Test the property 'workPager'
     */
    @Test
    public void workPagerTest() {
        // TODO: test workPager
    }

    /**
     * Test the property 'workPhone'
     */
    @Test
    public void workPhoneTest() {
        // TODO: test workPhone
    }

    /**
     * Test the property 'workState'
     */
    @Test
    public void workStateTest() {
        // TODO: test workState
    }

    /**
     * Test the property 'workZip'
     */
    @Test
    public void workZipTest() {
        // TODO: test workZip
    }

    /**
     * Test the property 'zip'
     */
    @Test
    public void zipTest() {
        // TODO: test zip
    }

    /**
     * Test the property 'syncWebTimeRecord'
     */
    @Test
    public void syncWebTimeRecordTest() {
        // TODO: test syncWebTimeRecord
    }

    /**
     * Test the property 'newBenefitClassSetup'
     */
    @Test
    public void newBenefitClassSetupTest() {
        // TODO: test newBenefitClassSetup
    }

    /**
     * Test the property 'newMainDirectDeposit'
     */
    @Test
    public void newMainDirectDepositTest() {
        // TODO: test newMainDirectDeposit
    }

    /**
     * Test the property 'newAdditionalDirectDeposit'
     */
    @Test
    public void newAdditionalDirectDepositTest() {
        // TODO: test newAdditionalDirectDeposit
    }

    /**
     * Test the property 'newFedTax'
     */
    @Test
    public void newFedTaxTest() {
        // TODO: test newFedTax
    }

    /**
     * Test the property 'newLocalTax'
     */
    @Test
    public void newLocalTaxTest() {
        // TODO: test newLocalTax
    }

    /**
     * Test the property 'newStateTax'
     */
    @Test
    public void newStateTaxTest() {
        // TODO: test newStateTax
    }

    /**
     * Test the property 'newWorkEligibility'
     */
    @Test
    public void newWorkEligibilityTest() {
        // TODO: test newWorkEligibility
    }

}
