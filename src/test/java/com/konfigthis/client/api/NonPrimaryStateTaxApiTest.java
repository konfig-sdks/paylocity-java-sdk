/*
 * WebLink API
 * For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview
 *
 * The version of the OpenAPI document: v2
 * Contact: webservices@paylocity.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.NonPrimaryStateTax;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NonPrimaryStateTaxApi
 */
@Disabled
public class NonPrimaryStateTaxApiTest {

    private static NonPrimaryStateTaxApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new NonPrimaryStateTaxApi(apiClient);
    }

    /**
     * Add/update non-primary state tax
     *
     * Sends new or updated employee non-primary state tax information directly to Paylocity Payroll/HR solution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addOrUpdateStateTaxTest() throws ApiException {
        String companyId = null;
        String employeeId = null;
        Object amount = null;
        Double deductionsAmount = null;
        Double dependentsAmount = null;
        Object exemptions = null;
        Object exemptions2 = null;
        Object filingStatus = null;
        Boolean higherRate = null;
        Double otherIncomeAmount = null;
        Object percentage = null;
        Object reciprocityCode = null;
        Object specialCheckCalc = null;
        Object taxCalculationCode = null;
        Object taxCode = null;
        Integer w4FormYear = null;
        api.addOrUpdateStateTax(companyId, employeeId)
                .amount(amount)
                .deductionsAmount(deductionsAmount)
                .dependentsAmount(dependentsAmount)
                .exemptions(exemptions)
                .exemptions2(exemptions2)
                .filingStatus(filingStatus)
                .higherRate(higherRate)
                .otherIncomeAmount(otherIncomeAmount)
                .percentage(percentage)
                .reciprocityCode(reciprocityCode)
                .specialCheckCalc(specialCheckCalc)
                .taxCalculationCode(taxCalculationCode)
                .taxCode(taxCode)
                .w4FormYear(w4FormYear)
                .execute();
        // TODO: test validations
    }

}
