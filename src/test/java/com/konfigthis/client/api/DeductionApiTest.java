/*
 * WebLink API
 * For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview
 *
 * The version of the OpenAPI document: v2
 * Contact: webservices@paylocity.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AddUpdateDeduction;
import com.konfigthis.client.model.Deduction;
import com.konfigthis.client.model.DeductionAddOrUpdateDeductionRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeductionApi
 */
@Disabled
public class DeductionApiTest {

    private static DeductionApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new DeductionApi(apiClient);
    }

    /**
     * Add / Update Deduction
     *
     * Add/Update Deduction API sends new or updated employee deduction information directly to Paylocity Payroll/HR solution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addOrUpdateDeductionTest() throws ApiException {
        AddUpdateDeduction deduction = null;
        api.addOrUpdateDeduction()
                .deduction(deduction)
                .execute();
        // TODO: test validations
    }

    /**
     * Get All Deductions
     *
     * Get All Deductions returns all deductions for the selected employee.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllDeductionsTest() throws ApiException {
        String companyId = null;
        String employeeId = null;
        List<Deduction> response = api.getAllDeductions(companyId, employeeId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Deduction for Deduction Code
     *
     * Get Deduction for Deduction Code returns records for a specific deduction for the selected employee.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByCodeTest() throws ApiException {
        String companyId = null;
        String employeeId = null;
        String deductionCode = null;
        Deduction response = api.getByCode(companyId, employeeId, deductionCode)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete deduction for deduction code / start date
     *
     * Delete Deduction API deletes an incorrect deduction from Paylocity Payroll/HR solution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeDeductionByCodeAndStartDateTest() throws ApiException {
        String companyId = null;
        String employeeId = null;
        String deductionCode = null;
        String startDate = null;
        api.removeDeductionByCodeAndStartDate(companyId, employeeId, deductionCode, startDate)
                .execute();
        // TODO: test validations
    }

}
