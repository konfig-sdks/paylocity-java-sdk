/*
 * WebLink API
 * For documentation about this API, please visit https://developer.paylocity.com/integrations/reference/weblink-overview
 *
 * The version of the OpenAPI document: v2
 * Contact: webservices@paylocity.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.EmergencyContact;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EmergencyContactsApi
 */
@Disabled
public class EmergencyContactsApiTest {

    private static EmergencyContactsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new EmergencyContactsApi(apiClient);
    }

    /**
     * Add/update emergency contacts
     *
     * Sends new or updated employee emergency contacts directly to Paylocity Payroll/HR solution.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addOrUpdateTest() throws ApiException {
        Object firstName = null;
        Object lastName = null;
        String companyId = null;
        String employeeId = null;
        Object address1 = null;
        Object address2 = null;
        Object city = null;
        Object country = null;
        Object county = null;
        Object email = null;
        Object homePhone = null;
        Object mobilePhone = null;
        Object notes = null;
        Object pager = null;
        Object primaryPhone = null;
        Object priority = null;
        Object relationship = null;
        Object state = null;
        Boolean syncEmployeeInfo = null;
        Object workExtension = null;
        Object workPhone = null;
        Object zip = null;
        api.addOrUpdate(firstName, lastName, companyId, employeeId)
                .address1(address1)
                .address2(address2)
                .city(city)
                .country(country)
                .county(county)
                .email(email)
                .homePhone(homePhone)
                .mobilePhone(mobilePhone)
                .notes(notes)
                .pager(pager)
                .primaryPhone(primaryPhone)
                .priority(priority)
                .relationship(relationship)
                .state(state)
                .syncEmployeeInfo(syncEmployeeInfo)
                .workExtension(workExtension)
                .workPhone(workPhone)
                .zip(zip)
                .execute();
        // TODO: test validations
    }

}
